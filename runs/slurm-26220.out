Loading parflow-ml/latest
  Loading requirement: openmpi/gcc/4.1.0 parflow/3.9.0 gdal/3.2.1
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/setuptools/distutils_patch.py:25: UserWarning: Distutils was imported before Setuptools. This usage is discouraged and may exhibit undesirable behaviors or errors. Please use Setuptools' objects directly or at least import Setuptools first.
  warnings.warn(
Drawing 5000 posterior samples:   0%|          | 0/5000 [00:00<?, ?it/s]Drawing 5000 posterior samples: 100%|██████████| 5000/5000 [00:00<00:00, 91106.45it/s]
lstm_sbi.py:368: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 5000 posterior samples:   0%|          | 0/5000 [00:00<?, ?it/s]Drawing 5000 posterior samples: 100%|██████████| 5000/5000 [00:00<00:00, 128650.16it/s]
lstm_sbi.py:368: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 5000 posterior samples:   0%|          | 0/5000 [00:00<?, ?it/s]Drawing 5000 posterior samples: 14960it [00:00, 122104.68it/s]          Drawing 5000 posterior samples: 14960it [00:00, 121650.87it/s]
lstm_sbi.py:368: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 5000 posterior samples:   0%|          | 0/5000 [00:00<?, ?it/s]Drawing 5000 posterior samples: 14995it [00:00, 121752.78it/s]          Drawing 5000 posterior samples: 14995it [00:00, 121302.85it/s]
lstm_sbi.py:368: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 5000 posterior samples:   0%|          | 0/5000 [00:00<?, ?it/s]Drawing 5000 posterior samples: 11280it [00:00, 91002.51it/s]           Drawing 5000 posterior samples: 11280it [00:00, 90619.04it/s]
lstm_sbi.py:368: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 5000 posterior samples:   0%|          | 0/5000 [00:00<?, ?it/s]Drawing 5000 posterior samples: 100%|██████████| 5000/5000 [00:00<00:00, 115220.53it/s]
lstm_sbi.py:368: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 5000 posterior samples:   0%|          | 0/5000 [00:00<?, ?it/s]Drawing 5000 posterior samples: 12316it [00:00, 109126.85it/s]          Drawing 5000 posterior samples: 12316it [00:00, 108687.61it/s]
lstm_sbi.py:368: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 5000 posterior samples:   0%|          | 0/5000 [00:00<?, ?it/s]Drawing 5000 posterior samples: 100%|██████████| 5000/5000 [00:00<00:00, 134400.08it/s]
lstm_sbi.py:368: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 5000 posterior samples:   0%|          | 0/5000 [00:00<?, ?it/s]Drawing 5000 posterior samples: 100%|██████████| 5000/5000 [00:00<00:00, 118348.10it/s]
lstm_sbi.py:368: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 5000 posterior samples:   0%|          | 0/5000 [00:00<?, ?it/s]Drawing 5000 posterior samples: 100%|██████████| 5000/5000 [00:00<00:00, 133636.14it/s]
lstm_sbi.py:368: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 5000 posterior samples:   0%|          | 0/5000 [00:00<?, ?it/s]Drawing 5000 posterior samples: 100%|██████████| 5000/5000 [00:00<00:00, 115864.75it/s]
lstm_sbi.py:368: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 5000 posterior samples:   0%|          | 0/5000 [00:00<?, ?it/s]Drawing 5000 posterior samples: 11338it [00:00, 90872.65it/s]           Drawing 5000 posterior samples: 11338it [00:00, 90461.06it/s]
lstm_sbi.py:368: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 5000 posterior samples:   0%|          | 0/5000 [00:00<?, ?it/s]Drawing 5000 posterior samples: 100%|██████████| 5000/5000 [00:00<00:00, 129681.17it/s]
lstm_sbi.py:368: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 5000 posterior samples:   0%|          | 0/5000 [00:00<?, ?it/s]Drawing 5000 posterior samples: 100%|██████████| 5000/5000 [00:00<00:00, 124392.88it/s]
lstm_sbi.py:368: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 5000 posterior samples:   0%|          | 0/5000 [00:00<?, ?it/s]Drawing 5000 posterior samples: 100%|██████████| 5000/5000 [00:00<00:00, 134512.15it/s]
lstm_sbi.py:368: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 5000 posterior samples:   0%|          | 0/5000 [00:00<?, ?it/s]Drawing 5000 posterior samples: 11258it [00:00, 90244.04it/s]           Drawing 5000 posterior samples: 11258it [00:00, 89919.42it/s]
lstm_sbi.py:368: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 5000 posterior samples:   0%|          | 0/5000 [00:00<?, ?it/s]Drawing 5000 posterior samples: 100%|██████████| 5000/5000 [00:00<00:00, 138393.90it/s]
lstm_sbi.py:368: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 5000 posterior samples:   0%|          | 0/5000 [00:00<?, ?it/s]Drawing 5000 posterior samples: 100%|██████████| 5000/5000 [00:00<00:00, 131418.62it/s]
lstm_sbi.py:368: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
warning: file exists
warning: file exists
log prob true 5.0809226
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
warning: file exists
log prob true 5.593525
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
warning: file exists
log prob true -2.5269215
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
warning: file exists
log prob true 1.7238684
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
warning: file exists
log prob true 4.244978
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
warning: file exists
log prob true 5.946534
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
warning: file exists
log prob true 4.5998535
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
warning: file exists
log prob true 5.9143486
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
warning: file exists
log prob true 5.770004
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
warning: file exists
log prob true 5.348506
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
warning: file exists
log prob true 4.3370366
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
warning: file exists
log prob true 5.2517476
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
warning: file exists
log prob true 4.5115514
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
warning: file exists
log prob true 3.9219677
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
warning: file exists
log prob true 5.525629
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
warning: file exists
log prob true 4.5956454
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
warning: file exists
log prob true 5.998866
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
warning: file exists
log prob true 4.51234
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
(350,)
