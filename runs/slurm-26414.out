Loading parflow-ml/latest
  Loading requirement: openmpi/gcc/4.1.0 parflow/3.9.0 gdal/3.2.1
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/setuptools/distutils_patch.py:25: UserWarning: Distutils was imported before Setuptools. This usage is discouraged and may exhibit undesirable behaviors or errors. Please use Setuptools' objects directly or at least import Setuptools first.
  warnings.warn(
/home/qh8373/SBI_TAYLOR/sbi_taylor/scripts/05_utils/sbiutils.py:110: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(y_out)
Running 10000 simulations.:   0%|          | 0/10000 [00:00<?, ?it/s]Running 10000 simulations.:   0%|          | 18/10000 [00:00<00:57, 172.51it/s]Running 10000 simulations.:   0%|          | 36/10000 [00:00<00:57, 173.04it/s]Running 10000 simulations.:   1%|          | 54/10000 [00:00<00:57, 173.42it/s]Running 10000 simulations.:   1%|          | 72/10000 [00:00<00:57, 174.00it/s]Running 10000 simulations.:   1%|          | 90/10000 [00:00<00:56, 174.23it/s]Running 10000 simulations.:   1%|          | 108/10000 [00:00<00:56, 174.28it/s]Running 10000 simulations.:   1%|▏         | 126/10000 [00:00<00:56, 174.16it/s]Running 10000 simulations.:   1%|▏         | 144/10000 [00:00<00:56, 174.20it/s]Running 10000 simulations.:   2%|▏         | 161/10000 [00:00<00:57, 170.79it/s]Running 10000 simulations.:   2%|▏         | 178/10000 [00:01<00:57, 169.35it/s]Running 10000 simulations.:   2%|▏         | 195/10000 [00:01<00:58, 169.02it/s]Running 10000 simulations.:   2%|▏         | 212/10000 [00:01<00:58, 166.32it/s]Running 10000 simulations.:   2%|▏         | 229/10000 [00:01<00:59, 163.62it/s]Running 10000 simulations.:   2%|▏         | 246/10000 [00:01<01:00, 162.13it/s]Running 10000 simulations.:   3%|▎         | 263/10000 [00:01<00:59, 162.74it/s]Running 10000 simulations.:   3%|▎         | 281/10000 [00:01<00:58, 165.81it/s]Running 10000 simulations.:   3%|▎         | 298/10000 [00:01<00:59, 164.39it/s]Running 10000 simulations.:   3%|▎         | 315/10000 [00:01<01:00, 160.36it/s]Running 10000 simulations.:   3%|▎         | 332/10000 [00:01<01:00, 159.31it/s]Running 10000 simulations.:   3%|▎         | 348/10000 [00:02<01:00, 158.94it/s]Running 10000 simulations.:   4%|▎         | 364/10000 [00:02<01:00, 158.26it/s]Running 10000 simulations.:   4%|▍         | 380/10000 [00:02<01:01, 157.44it/s]Running 10000 simulations.:   4%|▍         | 396/10000 [00:02<01:00, 157.52it/s]Running 10000 simulations.:   4%|▍         | 412/10000 [00:02<01:01, 155.68it/s]Running 10000 simulations.:   4%|▍         | 428/10000 [00:02<01:01, 156.17it/s]Running 10000 simulations.:   4%|▍         | 444/10000 [00:02<01:01, 156.62it/s]Running 10000 simulations.:   5%|▍         | 460/10000 [00:02<01:00, 156.88it/s]Running 10000 simulations.:   5%|▍         | 476/10000 [00:02<01:00, 157.15it/s]Running 10000 simulations.:   5%|▍         | 492/10000 [00:03<01:00, 157.18it/s]Running 10000 simulations.:   5%|▌         | 508/10000 [00:03<01:01, 153.13it/s]Running 10000 simulations.:   5%|▌         | 524/10000 [00:03<01:04, 146.38it/s]Running 10000 simulations.:   5%|▌         | 539/10000 [00:03<01:07, 139.66it/s]Running 10000 simulations.:   6%|▌         | 554/10000 [00:03<01:08, 137.70it/s]Running 10000 simulations.:   6%|▌         | 568/10000 [00:03<01:09, 136.35it/s]Running 10000 simulations.:   6%|▌         | 582/10000 [00:03<01:09, 135.39it/s]Running 10000 simulations.:   6%|▌         | 596/10000 [00:03<01:09, 134.81it/s]Running 10000 simulations.:   6%|▌         | 610/10000 [00:03<01:11, 132.16it/s]Running 10000 simulations.:   6%|▌         | 624/10000 [00:04<01:10, 132.26it/s]Running 10000 simulations.:   6%|▋         | 638/10000 [00:04<01:12, 129.93it/s]Running 10000 simulations.:   7%|▋         | 652/10000 [00:04<01:11, 130.56it/s]Running 10000 simulations.:   7%|▋         | 666/10000 [00:04<01:12, 128.11it/s]Running 10000 simulations.:   7%|▋         | 679/10000 [00:04<01:12, 128.60it/s]Running 10000 simulations.:   7%|▋         | 692/10000 [00:04<01:12, 128.89it/s]Running 10000 simulations.:   7%|▋         | 705/10000 [00:04<01:12, 129.01it/s]Running 10000 simulations.:   7%|▋         | 718/10000 [00:04<01:12, 128.90it/s]Running 10000 simulations.:   7%|▋         | 732/10000 [00:04<01:11, 129.49it/s]Running 10000 simulations.:   7%|▋         | 746/10000 [00:04<01:10, 130.58it/s]Running 10000 simulations.:   8%|▊         | 760/10000 [00:05<01:10, 130.88it/s]Running 10000 simulations.:   8%|▊         | 774/10000 [00:05<01:13, 125.76it/s]Running 10000 simulations.:   8%|▊         | 787/10000 [00:05<01:15, 121.65it/s]Running 10000 simulations.:   8%|▊         | 800/10000 [00:05<01:16, 120.21it/s]Running 10000 simulations.:   8%|▊         | 813/10000 [00:05<01:16, 119.35it/s]Running 10000 simulations.:   8%|▊         | 825/10000 [00:05<01:17, 118.64it/s]Running 10000 simulations.:   8%|▊         | 837/10000 [00:05<01:17, 118.09it/s]Running 10000 simulations.:   8%|▊         | 849/10000 [00:05<01:17, 117.47it/s]Running 10000 simulations.:   9%|▊         | 861/10000 [00:05<01:17, 117.25it/s]Running 10000 simulations.:   9%|▊         | 873/10000 [00:06<01:18, 116.22it/s]Running 10000 simulations.:   9%|▉         | 885/10000 [00:06<01:18, 116.07it/s]Running 10000 simulations.:   9%|▉         | 897/10000 [00:06<01:18, 115.81it/s]Running 10000 simulations.:   9%|▉         | 909/10000 [00:06<01:19, 114.62it/s]Running 10000 simulations.:   9%|▉         | 921/10000 [00:06<01:19, 114.40it/s]Running 10000 simulations.:   9%|▉         | 933/10000 [00:06<01:18, 114.86it/s]Running 10000 simulations.:   9%|▉         | 947/10000 [00:06<01:14, 120.90it/s]Running 10000 simulations.:  10%|▉         | 964/10000 [00:06<01:08, 132.33it/s]Running 10000 simulations.:  10%|▉         | 981/10000 [00:06<01:03, 141.61it/s]Running 10000 simulations.:  10%|▉         | 998/10000 [00:06<01:00, 148.83it/s]Running 10000 simulations.:  10%|█         | 1015/10000 [00:07<00:58, 154.30it/s]Running 10000 simulations.:  10%|█         | 1031/10000 [00:07<00:58, 153.32it/s]Running 10000 simulations.:  10%|█         | 1048/10000 [00:07<00:56, 157.24it/s]Running 10000 simulations.:  11%|█         | 1065/10000 [00:07<00:55, 160.50it/s]Running 10000 simulations.:  11%|█         | 1082/10000 [00:07<00:54, 162.68it/s]Running 10000 simulations.:  11%|█         | 1099/10000 [00:07<00:54, 164.61it/s]Running 10000 simulations.:  11%|█         | 1116/10000 [00:07<00:53, 165.89it/s]Running 10000 simulations.:  11%|█▏        | 1133/10000 [00:07<00:53, 166.60it/s]Running 10000 simulations.:  12%|█▏        | 1150/10000 [00:07<00:53, 166.61it/s]Running 10000 simulations.:  12%|█▏        | 1167/10000 [00:07<00:52, 166.88it/s]Running 10000 simulations.:  12%|█▏        | 1184/10000 [00:08<00:52, 166.74it/s]Running 10000 simulations.:  12%|█▏        | 1201/10000 [00:08<00:52, 166.83it/s]Running 10000 simulations.:  12%|█▏        | 1218/10000 [00:08<00:52, 167.29it/s]Running 10000 simulations.:  12%|█▏        | 1235/10000 [00:08<00:52, 167.84it/s]Running 10000 simulations.:  13%|█▎        | 1252/10000 [00:08<00:52, 167.80it/s]Running 10000 simulations.:  13%|█▎        | 1269/10000 [00:08<00:52, 167.72it/s]Running 10000 simulations.:  13%|█▎        | 1286/10000 [00:08<00:51, 167.63it/s]Running 10000 simulations.:  13%|█▎        | 1303/10000 [00:08<00:52, 167.11it/s]Running 10000 simulations.:  13%|█▎        | 1320/10000 [00:08<00:51, 167.26it/s]Running 10000 simulations.:  13%|█▎        | 1337/10000 [00:08<00:51, 167.47it/s]Running 10000 simulations.:  14%|█▎        | 1356/10000 [00:09<00:50, 171.56it/s]Running 10000 simulations.:  14%|█▎        | 1374/10000 [00:09<00:51, 168.96it/s]Running 10000 simulations.:  14%|█▍        | 1391/10000 [00:09<00:52, 165.24it/s]Running 10000 simulations.:  14%|█▍        | 1408/10000 [00:09<00:52, 163.06it/s]Running 10000 simulations.:  14%|█▍        | 1425/10000 [00:09<00:53, 161.73it/s]Running 10000 simulations.:  14%|█▍        | 1442/10000 [00:09<00:53, 160.20it/s]Running 10000 simulations.:  15%|█▍        | 1459/10000 [00:09<00:52, 162.27it/s]Running 10000 simulations.:  15%|█▍        | 1476/10000 [00:09<00:52, 161.40it/s]Running 10000 simulations.:  15%|█▍        | 1494/10000 [00:09<00:51, 164.02it/s]Running 10000 simulations.:  15%|█▌        | 1511/10000 [00:10<00:51, 165.73it/s]Running 10000 simulations.:  15%|█▌        | 1528/10000 [00:10<00:50, 166.57it/s]Running 10000 simulations.:  15%|█▌        | 1545/10000 [00:10<00:50, 167.22it/s]Running 10000 simulations.:  16%|█▌        | 1562/10000 [00:10<00:50, 166.90it/s]Running 10000 simulations.:  16%|█▌        | 1579/10000 [00:10<00:50, 167.02it/s]Running 10000 simulations.:  16%|█▌        | 1596/10000 [00:10<00:50, 167.06it/s]Running 10000 simulations.:  16%|█▌        | 1613/10000 [00:10<00:50, 167.38it/s]Running 10000 simulations.:  16%|█▋        | 1630/10000 [00:10<00:50, 167.22it/s]Running 10000 simulations.:  16%|█▋        | 1647/10000 [00:10<00:49, 167.12it/s]Running 10000 simulations.:  17%|█▋        | 1664/10000 [00:10<00:49, 166.99it/s]Running 10000 simulations.:  17%|█▋        | 1681/10000 [00:11<00:49, 166.57it/s]Running 10000 simulations.:  17%|█▋        | 1698/10000 [00:11<00:49, 167.02it/s]Running 10000 simulations.:  17%|█▋        | 1715/10000 [00:11<00:49, 167.42it/s]Running 10000 simulations.:  17%|█▋        | 1732/10000 [00:11<00:49, 166.96it/s]Running 10000 simulations.:  17%|█▋        | 1749/10000 [00:11<00:49, 165.39it/s]Running 10000 simulations.:  18%|█▊        | 1766/10000 [00:11<00:49, 166.07it/s]Running 10000 simulations.:  18%|█▊        | 1783/10000 [00:11<00:49, 167.14it/s]Running 10000 simulations.:  18%|█▊        | 1800/10000 [00:11<00:49, 166.92it/s]Running 10000 simulations.:  18%|█▊        | 1817/10000 [00:11<00:49, 166.79it/s]Running 10000 simulations.:  18%|█▊        | 1834/10000 [00:11<00:48, 167.18it/s]Running 10000 simulations.:  19%|█▊        | 1851/10000 [00:12<00:48, 167.53it/s]Running 10000 simulations.:  19%|█▊        | 1868/10000 [00:12<00:48, 167.43it/s]Running 10000 simulations.:  19%|█▉        | 1885/10000 [00:12<00:48, 167.66it/s]Running 10000 simulations.:  19%|█▉        | 1902/10000 [00:12<00:48, 167.08it/s]Running 10000 simulations.:  19%|█▉        | 1919/10000 [00:12<00:49, 164.87it/s]Running 10000 simulations.:  19%|█▉        | 1936/10000 [00:12<00:49, 164.15it/s]Running 10000 simulations.:  20%|█▉        | 1953/10000 [00:12<00:49, 162.25it/s]Running 10000 simulations.:  20%|█▉        | 1970/10000 [00:12<00:49, 161.19it/s]Running 10000 simulations.:  20%|█▉        | 1987/10000 [00:12<00:49, 160.60it/s]Running 10000 simulations.:  20%|██        | 2004/10000 [00:13<00:49, 160.40it/s]Running 10000 simulations.:  20%|██        | 2021/10000 [00:13<00:49, 161.20it/s]Running 10000 simulations.:  20%|██        | 2038/10000 [00:13<00:49, 162.42it/s]Running 10000 simulations.:  21%|██        | 2055/10000 [00:13<00:49, 160.96it/s]Running 10000 simulations.:  21%|██        | 2072/10000 [00:13<00:49, 161.67it/s]Running 10000 simulations.:  21%|██        | 2089/10000 [00:13<00:48, 162.59it/s]Running 10000 simulations.:  21%|██        | 2106/10000 [00:13<00:48, 162.36it/s]Running 10000 simulations.:  21%|██        | 2123/10000 [00:13<00:48, 162.17it/s]Running 10000 simulations.:  21%|██▏       | 2140/10000 [00:13<00:48, 160.83it/s]Running 10000 simulations.:  22%|██▏       | 2157/10000 [00:13<00:48, 160.82it/s]Running 10000 simulations.:  22%|██▏       | 2174/10000 [00:14<00:48, 160.82it/s]Running 10000 simulations.:  22%|██▏       | 2191/10000 [00:14<00:48, 159.76it/s]Running 10000 simulations.:  22%|██▏       | 2208/10000 [00:14<00:48, 160.70it/s]Running 10000 simulations.:  22%|██▏       | 2225/10000 [00:14<00:48, 161.70it/s]Running 10000 simulations.:  22%|██▏       | 2242/10000 [00:14<00:48, 160.00it/s]Running 10000 simulations.:  23%|██▎       | 2259/10000 [00:14<00:49, 157.83it/s]Running 10000 simulations.:  23%|██▎       | 2275/10000 [00:14<00:49, 156.54it/s]Running 10000 simulations.:  23%|██▎       | 2291/10000 [00:14<00:49, 156.22it/s]Running 10000 simulations.:  23%|██▎       | 2308/10000 [00:14<00:48, 158.30it/s]Running 10000 simulations.:  23%|██▎       | 2325/10000 [00:15<00:48, 158.99it/s]Running 10000 simulations.:  23%|██▎       | 2342/10000 [00:15<00:47, 160.12it/s]Running 10000 simulations.:  24%|██▎       | 2359/10000 [00:15<00:47, 160.29it/s]Running 10000 simulations.:  24%|██▍       | 2376/10000 [00:15<00:47, 160.68it/s]Running 10000 simulations.:  24%|██▍       | 2393/10000 [00:15<00:47, 161.09it/s]Running 10000 simulations.:  24%|██▍       | 2410/10000 [00:15<00:47, 161.02it/s]Running 10000 simulations.:  24%|██▍       | 2427/10000 [00:15<00:58, 129.88it/s]Running 10000 simulations.:  24%|██▍       | 2441/10000 [00:15<01:06, 113.28it/s]Running 10000 simulations.:  25%|██▍       | 2454/10000 [00:16<01:13, 102.37it/s]Running 10000 simulations.:  25%|██▍       | 2466/10000 [00:16<01:19, 95.20it/s] Running 10000 simulations.:  25%|██▍       | 2477/10000 [00:16<01:23, 90.56it/s]Running 10000 simulations.:  25%|██▍       | 2487/10000 [00:16<01:25, 88.12it/s]Running 10000 simulations.:  25%|██▍       | 2497/10000 [00:16<01:25, 87.94it/s]Running 10000 simulations.:  25%|██▌       | 2507/10000 [00:16<01:26, 86.53it/s]Running 10000 simulations.:  25%|██▌       | 2516/10000 [00:16<01:28, 84.95it/s]Running 10000 simulations.:  25%|██▌       | 2525/10000 [00:16<01:27, 85.29it/s]Running 10000 simulations.:  25%|██▌       | 2534/10000 [00:17<01:28, 84.02it/s]Running 10000 simulations.:  25%|██▌       | 2543/10000 [00:17<01:29, 83.36it/s]Running 10000 simulations.:  26%|██▌       | 2552/10000 [00:17<01:29, 83.03it/s]Running 10000 simulations.:  26%|██▌       | 2561/10000 [00:17<01:30, 82.63it/s]Running 10000 simulations.:  26%|██▌       | 2570/10000 [00:17<01:29, 82.58it/s]Running 10000 simulations.:  26%|██▌       | 2579/10000 [00:17<01:30, 82.24it/s]Running 10000 simulations.:  26%|██▌       | 2588/10000 [00:17<01:30, 81.98it/s]Running 10000 simulations.:  26%|██▌       | 2597/10000 [00:17<01:30, 81.84it/s]Running 10000 simulations.:  26%|██▌       | 2606/10000 [00:17<01:30, 81.83it/s]Running 10000 simulations.:  26%|██▌       | 2615/10000 [00:18<01:30, 81.86it/s]Running 10000 simulations.:  26%|██▌       | 2624/10000 [00:18<01:29, 82.23it/s]Running 10000 simulations.:  26%|██▋       | 2633/10000 [00:18<01:29, 82.64it/s]Running 10000 simulations.:  26%|██▋       | 2642/10000 [00:18<01:28, 82.88it/s]Running 10000 simulations.:  27%|██▋       | 2651/10000 [00:18<01:28, 83.16it/s]Running 10000 simulations.:  27%|██▋       | 2660/10000 [00:18<01:28, 82.81it/s]Running 10000 simulations.:  27%|██▋       | 2669/10000 [00:18<01:28, 82.94it/s]Running 10000 simulations.:  27%|██▋       | 2678/10000 [00:18<01:28, 83.01it/s]Running 10000 simulations.:  27%|██▋       | 2687/10000 [00:18<01:28, 82.96it/s]Running 10000 simulations.:  27%|██▋       | 2696/10000 [00:18<01:28, 82.76it/s]Running 10000 simulations.:  27%|██▋       | 2705/10000 [00:19<01:28, 82.72it/s]Running 10000 simulations.:  27%|██▋       | 2714/10000 [00:19<01:28, 82.74it/s]Running 10000 simulations.:  27%|██▋       | 2723/10000 [00:19<01:28, 82.67it/s]Running 10000 simulations.:  27%|██▋       | 2732/10000 [00:19<01:27, 82.79it/s]Running 10000 simulations.:  27%|██▋       | 2741/10000 [00:19<01:27, 82.68it/s]Running 10000 simulations.:  28%|██▊       | 2756/10000 [00:19<01:16, 94.91it/s]Running 10000 simulations.:  28%|██▊       | 2774/10000 [00:19<01:05, 109.79it/s]Running 10000 simulations.:  28%|██▊       | 2792/10000 [00:19<00:58, 123.42it/s]Running 10000 simulations.:  28%|██▊       | 2810/10000 [00:19<00:53, 134.63it/s]Running 10000 simulations.:  28%|██▊       | 2827/10000 [00:20<00:49, 143.58it/s]Running 10000 simulations.:  28%|██▊       | 2844/10000 [00:20<00:47, 150.28it/s]Running 10000 simulations.:  29%|██▊       | 2861/10000 [00:20<00:45, 155.48it/s]Running 10000 simulations.:  29%|██▉       | 2878/10000 [00:20<00:44, 158.54it/s]Running 10000 simulations.:  29%|██▉       | 2895/10000 [00:20<00:44, 161.05it/s]Running 10000 simulations.:  29%|██▉       | 2912/10000 [00:20<00:43, 162.25it/s]Running 10000 simulations.:  29%|██▉       | 2929/10000 [00:20<00:43, 164.08it/s]Running 10000 simulations.:  29%|██▉       | 2946/10000 [00:20<00:46, 150.25it/s]Running 10000 simulations.:  30%|██▉       | 2962/10000 [00:20<00:51, 137.64it/s]Running 10000 simulations.:  30%|██▉       | 2977/10000 [00:21<00:52, 133.30it/s]Running 10000 simulations.:  30%|██▉       | 2993/10000 [00:21<00:50, 140.08it/s]Running 10000 simulations.:  30%|███       | 3009/10000 [00:21<00:48, 145.44it/s]Running 10000 simulations.:  30%|███       | 3025/10000 [00:21<00:46, 149.46it/s]Running 10000 simulations.:  30%|███       | 3042/10000 [00:21<00:45, 152.62it/s]Running 10000 simulations.:  31%|███       | 3058/10000 [00:21<00:44, 154.73it/s]Running 10000 simulations.:  31%|███       | 3075/10000 [00:21<00:44, 156.64it/s]Running 10000 simulations.:  31%|███       | 3092/10000 [00:21<00:43, 157.98it/s]Running 10000 simulations.:  31%|███       | 3108/10000 [00:21<00:43, 158.50it/s]Running 10000 simulations.:  31%|███       | 3124/10000 [00:21<00:43, 158.85it/s]Running 10000 simulations.:  31%|███▏      | 3140/10000 [00:22<00:43, 158.94it/s]Running 10000 simulations.:  32%|███▏      | 3157/10000 [00:22<00:42, 159.43it/s]Running 10000 simulations.:  32%|███▏      | 3173/10000 [00:22<00:42, 159.54it/s]Running 10000 simulations.:  32%|███▏      | 3189/10000 [00:22<00:42, 159.39it/s]Running 10000 simulations.:  32%|███▏      | 3205/10000 [00:22<00:42, 159.55it/s]Running 10000 simulations.:  32%|███▏      | 3221/10000 [00:22<00:42, 159.66it/s]Running 10000 simulations.:  32%|███▏      | 3238/10000 [00:22<00:42, 160.06it/s]Running 10000 simulations.:  33%|███▎      | 3255/10000 [00:22<00:42, 160.14it/s]Running 10000 simulations.:  33%|███▎      | 3272/10000 [00:22<00:41, 160.24it/s]Running 10000 simulations.:  33%|███▎      | 3289/10000 [00:23<00:41, 160.09it/s]Running 10000 simulations.:  33%|███▎      | 3306/10000 [00:23<00:41, 159.65it/s]Running 10000 simulations.:  33%|███▎      | 3323/10000 [00:23<00:41, 160.03it/s]Running 10000 simulations.:  33%|███▎      | 3340/10000 [00:23<00:41, 159.57it/s]Running 10000 simulations.:  34%|███▎      | 3356/10000 [00:23<00:44, 147.68it/s]Running 10000 simulations.:  34%|███▎      | 3371/10000 [00:23<00:47, 139.50it/s]Running 10000 simulations.:  34%|███▍      | 3386/10000 [00:23<00:49, 134.30it/s]Running 10000 simulations.:  34%|███▍      | 3400/10000 [00:23<00:50, 130.83it/s]Running 10000 simulations.:  34%|███▍      | 3414/10000 [00:23<00:51, 128.50it/s]Running 10000 simulations.:  34%|███▍      | 3427/10000 [00:24<00:51, 126.80it/s]Running 10000 simulations.:  34%|███▍      | 3440/10000 [00:24<00:52, 125.73it/s]Running 10000 simulations.:  35%|███▍      | 3453/10000 [00:24<00:52, 124.81it/s]Running 10000 simulations.:  35%|███▍      | 3466/10000 [00:24<00:52, 124.39it/s]Running 10000 simulations.:  35%|███▍      | 3479/10000 [00:24<00:52, 124.23it/s]Running 10000 simulations.:  35%|███▍      | 3492/10000 [00:24<00:52, 124.14it/s]Running 10000 simulations.:  35%|███▌      | 3505/10000 [00:24<00:52, 124.14it/s]Running 10000 simulations.:  35%|███▌      | 3518/10000 [00:24<00:52, 124.32it/s]Running 10000 simulations.:  35%|███▌      | 3531/10000 [00:24<00:52, 124.30it/s]Running 10000 simulations.:  35%|███▌      | 3544/10000 [00:24<00:51, 124.21it/s]Running 10000 simulations.:  36%|███▌      | 3557/10000 [00:25<00:51, 124.38it/s]Running 10000 simulations.:  36%|███▌      | 3570/10000 [00:25<00:51, 124.68it/s]Running 10000 simulations.:  36%|███▌      | 3585/10000 [00:25<00:49, 129.76it/s]Running 10000 simulations.:  36%|███▌      | 3603/10000 [00:25<00:45, 140.86it/s]Running 10000 simulations.:  36%|███▌      | 3621/10000 [00:25<00:42, 149.54it/s]Running 10000 simulations.:  36%|███▋      | 3639/10000 [00:25<00:40, 155.64it/s]Running 10000 simulations.:  37%|███▋      | 3655/10000 [00:25<00:40, 154.85it/s]Running 10000 simulations.:  37%|███▋      | 3672/10000 [00:25<00:40, 156.83it/s]Running 10000 simulations.:  37%|███▋      | 3689/10000 [00:25<00:39, 158.79it/s]Running 10000 simulations.:  37%|███▋      | 3705/10000 [00:26<00:40, 156.45it/s]Running 10000 simulations.:  37%|███▋      | 3721/10000 [00:26<00:40, 153.74it/s]Running 10000 simulations.:  37%|███▋      | 3737/10000 [00:26<00:41, 151.21it/s]Running 10000 simulations.:  38%|███▊      | 3753/10000 [00:26<00:44, 141.13it/s]Running 10000 simulations.:  38%|███▊      | 3770/10000 [00:26<00:42, 146.59it/s]Running 10000 simulations.:  38%|███▊      | 3787/10000 [00:26<00:41, 150.77it/s]Running 10000 simulations.:  38%|███▊      | 3804/10000 [00:26<00:40, 153.75it/s]Running 10000 simulations.:  38%|███▊      | 3821/10000 [00:26<00:39, 155.88it/s]Running 10000 simulations.:  38%|███▊      | 3838/10000 [00:26<00:39, 157.20it/s]Running 10000 simulations.:  39%|███▊      | 3855/10000 [00:26<00:38, 158.37it/s]Running 10000 simulations.:  39%|███▊      | 3872/10000 [00:27<00:38, 159.38it/s]Running 10000 simulations.:  39%|███▉      | 3889/10000 [00:27<00:38, 159.90it/s]Running 10000 simulations.:  39%|███▉      | 3906/10000 [00:27<00:38, 160.21it/s]Running 10000 simulations.:  39%|███▉      | 3923/10000 [00:27<00:37, 160.86it/s]Running 10000 simulations.:  39%|███▉      | 3940/10000 [00:27<00:37, 162.23it/s]Running 10000 simulations.:  40%|███▉      | 3957/10000 [00:27<00:37, 161.46it/s]Running 10000 simulations.:  40%|███▉      | 3974/10000 [00:27<00:37, 162.63it/s]Running 10000 simulations.:  40%|███▉      | 3991/10000 [00:27<00:37, 161.49it/s]Running 10000 simulations.:  40%|████      | 4008/10000 [00:27<00:38, 156.84it/s]Running 10000 simulations.:  40%|████      | 4024/10000 [00:28<00:38, 153.80it/s]Running 10000 simulations.:  40%|████      | 4040/10000 [00:28<00:39, 151.73it/s]Running 10000 simulations.:  41%|████      | 4056/10000 [00:28<00:39, 150.32it/s]Running 10000 simulations.:  41%|████      | 4072/10000 [00:28<00:39, 149.47it/s]Running 10000 simulations.:  41%|████      | 4087/10000 [00:28<00:39, 148.72it/s]Running 10000 simulations.:  41%|████      | 4102/10000 [00:28<00:39, 148.14it/s]Running 10000 simulations.:  41%|████      | 4117/10000 [00:28<00:39, 147.81it/s]Running 10000 simulations.:  41%|████▏     | 4132/10000 [00:28<00:39, 147.82it/s]Running 10000 simulations.:  41%|████▏     | 4147/10000 [00:28<00:39, 147.33it/s]Running 10000 simulations.:  42%|████▏     | 4162/10000 [00:29<00:39, 146.91it/s]Running 10000 simulations.:  42%|████▏     | 4177/10000 [00:29<00:39, 147.14it/s]Running 10000 simulations.:  42%|████▏     | 4192/10000 [00:29<00:39, 147.26it/s]Running 10000 simulations.:  42%|████▏     | 4207/10000 [00:29<00:39, 147.12it/s]Running 10000 simulations.:  42%|████▏     | 4222/10000 [00:29<00:44, 129.01it/s]Running 10000 simulations.:  42%|████▏     | 4236/10000 [00:29<00:50, 113.15it/s]Running 10000 simulations.:  42%|████▏     | 4248/10000 [00:29<00:55, 104.29it/s]Running 10000 simulations.:  43%|████▎     | 4260/10000 [00:29<00:58, 98.76it/s] Running 10000 simulations.:  43%|████▎     | 4271/10000 [00:30<01:00, 95.44it/s]Running 10000 simulations.:  43%|████▎     | 4281/10000 [00:30<01:01, 93.14it/s]Running 10000 simulations.:  43%|████▎     | 4291/10000 [00:30<01:02, 91.53it/s]Running 10000 simulations.:  43%|████▎     | 4301/10000 [00:30<01:03, 90.14it/s]Running 10000 simulations.:  43%|████▎     | 4314/10000 [00:30<00:57, 98.69it/s]Running 10000 simulations.:  43%|████▎     | 4329/10000 [00:30<00:51, 109.56it/s]Running 10000 simulations.:  43%|████▎     | 4344/10000 [00:30<00:47, 118.69it/s]Running 10000 simulations.:  44%|████▎     | 4359/10000 [00:30<00:44, 125.88it/s]Running 10000 simulations.:  44%|████▎     | 4374/10000 [00:30<00:42, 131.63it/s]Running 10000 simulations.:  44%|████▍     | 4389/10000 [00:30<00:41, 135.90it/s]Running 10000 simulations.:  44%|████▍     | 4404/10000 [00:31<00:40, 139.36it/s]Running 10000 simulations.:  44%|████▍     | 4419/10000 [00:31<00:39, 141.55it/s]Running 10000 simulations.:  44%|████▍     | 4434/10000 [00:31<00:38, 143.34it/s]Running 10000 simulations.:  44%|████▍     | 4449/10000 [00:31<00:38, 144.26it/s]Running 10000 simulations.:  45%|████▍     | 4464/10000 [00:31<00:38, 144.82it/s]Running 10000 simulations.:  45%|████▍     | 4479/10000 [00:31<00:37, 145.56it/s]Running 10000 simulations.:  45%|████▍     | 4494/10000 [00:31<00:37, 146.06it/s]Running 10000 simulations.:  45%|████▌     | 4509/10000 [00:31<00:37, 146.38it/s]Running 10000 simulations.:  45%|████▌     | 4524/10000 [00:31<00:37, 146.67it/s]Running 10000 simulations.:  45%|████▌     | 4539/10000 [00:32<00:41, 132.68it/s]Running 10000 simulations.:  46%|████▌     | 4553/10000 [00:32<00:48, 111.84it/s]Running 10000 simulations.:  46%|████▌     | 4565/10000 [00:32<00:54, 100.29it/s]Running 10000 simulations.:  46%|████▌     | 4576/10000 [00:32<00:57, 93.68it/s] Running 10000 simulations.:  46%|████▌     | 4586/10000 [00:32<01:00, 89.46it/s]Running 10000 simulations.:  46%|████▌     | 4596/10000 [00:32<01:02, 87.04it/s]Running 10000 simulations.:  46%|████▌     | 4606/10000 [00:32<01:03, 85.36it/s]Running 10000 simulations.:  46%|████▌     | 4615/10000 [00:32<01:02, 86.27it/s]Running 10000 simulations.:  46%|████▋     | 4632/10000 [00:33<00:53, 100.71it/s]Running 10000 simulations.:  46%|████▋     | 4649/10000 [00:33<00:46, 114.19it/s]Running 10000 simulations.:  47%|████▋     | 4666/10000 [00:33<00:42, 125.78it/s]Running 10000 simulations.:  47%|████▋     | 4683/10000 [00:33<00:39, 135.39it/s]Running 10000 simulations.:  47%|████▋     | 4700/10000 [00:33<00:37, 143.20it/s]Running 10000 simulations.:  47%|████▋     | 4717/10000 [00:33<00:35, 149.17it/s]Running 10000 simulations.:  47%|████▋     | 4734/10000 [00:33<00:34, 153.64it/s]Running 10000 simulations.:  48%|████▊     | 4751/10000 [00:33<00:33, 157.41it/s]Running 10000 simulations.:  48%|████▊     | 4768/10000 [00:33<00:32, 160.13it/s]Running 10000 simulations.:  48%|████▊     | 4785/10000 [00:33<00:32, 161.82it/s]Running 10000 simulations.:  48%|████▊     | 4802/10000 [00:34<00:31, 163.36it/s]Running 10000 simulations.:  48%|████▊     | 4819/10000 [00:34<00:31, 163.62it/s]Running 10000 simulations.:  48%|████▊     | 4836/10000 [00:34<00:31, 163.80it/s]Running 10000 simulations.:  49%|████▊     | 4853/10000 [00:34<00:31, 164.38it/s]Running 10000 simulations.:  49%|████▊     | 4870/10000 [00:34<00:31, 164.92it/s]Running 10000 simulations.:  49%|████▉     | 4887/10000 [00:34<00:30, 165.23it/s]Running 10000 simulations.:  49%|████▉     | 4904/10000 [00:34<00:30, 165.29it/s]Running 10000 simulations.:  49%|████▉     | 4921/10000 [00:34<00:30, 165.16it/s]Running 10000 simulations.:  49%|████▉     | 4938/10000 [00:34<00:30, 165.50it/s]Running 10000 simulations.:  50%|████▉     | 4955/10000 [00:34<00:30, 166.01it/s]Running 10000 simulations.:  50%|████▉     | 4972/10000 [00:35<00:30, 165.58it/s]Running 10000 simulations.:  50%|████▉     | 4989/10000 [00:35<00:30, 165.51it/s]Running 10000 simulations.:  50%|█████     | 5006/10000 [00:35<00:30, 165.36it/s]Running 10000 simulations.:  50%|█████     | 5023/10000 [00:35<00:30, 165.62it/s]Running 10000 simulations.:  50%|█████     | 5040/10000 [00:35<00:29, 166.14it/s]Running 10000 simulations.:  51%|█████     | 5057/10000 [00:35<00:29, 166.10it/s]Running 10000 simulations.:  51%|█████     | 5074/10000 [00:35<00:29, 166.14it/s]Running 10000 simulations.:  51%|█████     | 5091/10000 [00:35<00:29, 165.71it/s]Running 10000 simulations.:  51%|█████     | 5108/10000 [00:35<00:29, 165.73it/s]Running 10000 simulations.:  51%|█████▏    | 5125/10000 [00:36<00:29, 165.50it/s]Running 10000 simulations.:  51%|█████▏    | 5142/10000 [00:36<00:29, 165.68it/s]Running 10000 simulations.:  52%|█████▏    | 5159/10000 [00:36<00:29, 165.75it/s]Running 10000 simulations.:  52%|█████▏    | 5176/10000 [00:36<00:29, 165.71it/s]Running 10000 simulations.:  52%|█████▏    | 5193/10000 [00:36<00:29, 165.44it/s]Running 10000 simulations.:  52%|█████▏    | 5210/10000 [00:36<00:28, 165.37it/s]Running 10000 simulations.:  52%|█████▏    | 5227/10000 [00:36<00:28, 165.06it/s]Running 10000 simulations.:  52%|█████▏    | 5244/10000 [00:36<00:28, 164.88it/s]Running 10000 simulations.:  53%|█████▎    | 5261/10000 [00:36<00:28, 165.43it/s]Running 10000 simulations.:  53%|█████▎    | 5278/10000 [00:36<00:28, 165.68it/s]Running 10000 simulations.:  53%|█████▎    | 5295/10000 [00:37<00:28, 165.59it/s]Running 10000 simulations.:  53%|█████▎    | 5312/10000 [00:37<00:28, 165.45it/s]Running 10000 simulations.:  53%|█████▎    | 5329/10000 [00:37<00:28, 166.01it/s]Running 10000 simulations.:  53%|█████▎    | 5346/10000 [00:37<00:27, 166.27it/s]Running 10000 simulations.:  54%|█████▎    | 5363/10000 [00:37<00:27, 166.68it/s]Running 10000 simulations.:  54%|█████▍    | 5380/10000 [00:37<00:27, 166.92it/s]Running 10000 simulations.:  54%|█████▍    | 5397/10000 [00:37<00:27, 166.49it/s]Running 10000 simulations.:  54%|█████▍    | 5414/10000 [00:37<00:27, 166.44it/s]Running 10000 simulations.:  54%|█████▍    | 5431/10000 [00:37<00:27, 165.73it/s]Running 10000 simulations.:  54%|█████▍    | 5448/10000 [00:37<00:27, 165.77it/s]Running 10000 simulations.:  55%|█████▍    | 5465/10000 [00:38<00:27, 165.98it/s]Running 10000 simulations.:  55%|█████▍    | 5482/10000 [00:38<00:27, 166.47it/s]Running 10000 simulations.:  55%|█████▍    | 5499/10000 [00:38<00:27, 166.55it/s]Running 10000 simulations.:  55%|█████▌    | 5516/10000 [00:38<00:26, 166.49it/s]Running 10000 simulations.:  55%|█████▌    | 5533/10000 [00:38<00:26, 166.17it/s]Running 10000 simulations.:  56%|█████▌    | 5550/10000 [00:38<00:26, 165.93it/s]Running 10000 simulations.:  56%|█████▌    | 5567/10000 [00:38<00:26, 165.55it/s]Running 10000 simulations.:  56%|█████▌    | 5584/10000 [00:38<00:26, 165.12it/s]Running 10000 simulations.:  56%|█████▌    | 5601/10000 [00:38<00:26, 165.52it/s]Running 10000 simulations.:  56%|█████▌    | 5618/10000 [00:38<00:26, 165.35it/s]Running 10000 simulations.:  56%|█████▋    | 5636/10000 [00:39<00:26, 167.17it/s]Running 10000 simulations.:  57%|█████▋    | 5653/10000 [00:39<00:26, 163.55it/s]Running 10000 simulations.:  57%|█████▋    | 5670/10000 [00:39<00:27, 159.69it/s]Running 10000 simulations.:  57%|█████▋    | 5687/10000 [00:39<00:27, 157.71it/s]Running 10000 simulations.:  57%|█████▋    | 5703/10000 [00:39<00:27, 156.38it/s]Running 10000 simulations.:  57%|█████▋    | 5719/10000 [00:39<00:27, 154.90it/s]Running 10000 simulations.:  57%|█████▋    | 5735/10000 [00:39<00:27, 154.86it/s]Running 10000 simulations.:  58%|█████▊    | 5751/10000 [00:39<00:27, 155.21it/s]Running 10000 simulations.:  58%|█████▊    | 5767/10000 [00:39<00:27, 156.09it/s]Running 10000 simulations.:  58%|█████▊    | 5783/10000 [00:40<00:27, 155.45it/s]Running 10000 simulations.:  58%|█████▊    | 5799/10000 [00:40<00:27, 155.13it/s]Running 10000 simulations.:  58%|█████▊    | 5815/10000 [00:40<00:27, 154.73it/s]Running 10000 simulations.:  58%|█████▊    | 5831/10000 [00:40<00:26, 154.45it/s]Running 10000 simulations.:  58%|█████▊    | 5847/10000 [00:40<00:26, 154.89it/s]Running 10000 simulations.:  59%|█████▊    | 5863/10000 [00:40<00:26, 154.78it/s]Running 10000 simulations.:  59%|█████▉    | 5879/10000 [00:40<00:26, 154.51it/s]Running 10000 simulations.:  59%|█████▉    | 5895/10000 [00:40<00:26, 154.51it/s]Running 10000 simulations.:  59%|█████▉    | 5911/10000 [00:40<00:26, 154.09it/s]Running 10000 simulations.:  59%|█████▉    | 5927/10000 [00:40<00:26, 153.73it/s]Running 10000 simulations.:  59%|█████▉    | 5943/10000 [00:41<00:26, 153.66it/s]Running 10000 simulations.:  60%|█████▉    | 5959/10000 [00:41<00:26, 153.77it/s]Running 10000 simulations.:  60%|█████▉    | 5975/10000 [00:41<00:26, 153.93it/s]Running 10000 simulations.:  60%|█████▉    | 5991/10000 [00:41<00:26, 153.93it/s]Running 10000 simulations.:  60%|██████    | 6007/10000 [00:41<00:25, 154.24it/s]Running 10000 simulations.:  60%|██████    | 6023/10000 [00:41<00:25, 154.72it/s]Running 10000 simulations.:  60%|██████    | 6039/10000 [00:41<00:25, 154.34it/s]Running 10000 simulations.:  61%|██████    | 6055/10000 [00:41<00:25, 154.02it/s]Running 10000 simulations.:  61%|██████    | 6071/10000 [00:41<00:25, 153.85it/s]Running 10000 simulations.:  61%|██████    | 6088/10000 [00:42<00:24, 157.05it/s]Running 10000 simulations.:  61%|██████    | 6106/10000 [00:42<00:24, 162.16it/s]Running 10000 simulations.:  61%|██████    | 6124/10000 [00:42<00:23, 165.46it/s]Running 10000 simulations.:  61%|██████▏   | 6142/10000 [00:42<00:23, 166.98it/s]Running 10000 simulations.:  62%|██████▏   | 6159/10000 [00:42<00:25, 150.56it/s]Running 10000 simulations.:  62%|██████▏   | 6175/10000 [00:42<00:27, 140.93it/s]Running 10000 simulations.:  62%|██████▏   | 6190/10000 [00:42<00:28, 134.28it/s]Running 10000 simulations.:  62%|██████▏   | 6204/10000 [00:42<00:29, 130.78it/s]Running 10000 simulations.:  62%|██████▏   | 6218/10000 [00:42<00:29, 127.91it/s]Running 10000 simulations.:  62%|██████▏   | 6231/10000 [00:43<00:30, 124.18it/s]Running 10000 simulations.:  62%|██████▏   | 6244/10000 [00:43<00:30, 123.63it/s]Running 10000 simulations.:  63%|██████▎   | 6257/10000 [00:43<00:30, 123.03it/s]Running 10000 simulations.:  63%|██████▎   | 6270/10000 [00:43<00:30, 122.97it/s]Running 10000 simulations.:  63%|██████▎   | 6283/10000 [00:43<00:30, 122.90it/s]Running 10000 simulations.:  63%|██████▎   | 6296/10000 [00:43<00:30, 122.30it/s]Running 10000 simulations.:  63%|██████▎   | 6309/10000 [00:43<00:30, 119.77it/s]Running 10000 simulations.:  63%|██████▎   | 6322/10000 [00:43<00:30, 119.53it/s]Running 10000 simulations.:  63%|██████▎   | 6335/10000 [00:43<00:30, 119.93it/s]Running 10000 simulations.:  63%|██████▎   | 6348/10000 [00:44<00:30, 119.63it/s]Running 10000 simulations.:  64%|██████▎   | 6360/10000 [00:44<00:30, 119.57it/s]Running 10000 simulations.:  64%|██████▎   | 6372/10000 [00:44<00:30, 119.42it/s]Running 10000 simulations.:  64%|██████▍   | 6384/10000 [00:44<00:30, 119.15it/s]Running 10000 simulations.:  64%|██████▍   | 6396/10000 [00:44<00:30, 118.60it/s]Running 10000 simulations.:  64%|██████▍   | 6408/10000 [00:44<00:30, 118.35it/s]Running 10000 simulations.:  64%|██████▍   | 6420/10000 [00:44<00:30, 117.86it/s]Running 10000 simulations.:  64%|██████▍   | 6432/10000 [00:44<00:30, 117.37it/s]Running 10000 simulations.:  64%|██████▍   | 6444/10000 [00:44<00:30, 117.99it/s]Running 10000 simulations.:  65%|██████▍   | 6456/10000 [00:44<00:30, 117.69it/s]Running 10000 simulations.:  65%|██████▍   | 6468/10000 [00:45<00:29, 118.17it/s]Running 10000 simulations.:  65%|██████▍   | 6484/10000 [00:45<00:27, 127.62it/s]Running 10000 simulations.:  65%|██████▌   | 6501/10000 [00:45<00:25, 137.23it/s]Running 10000 simulations.:  65%|██████▌   | 6518/10000 [00:45<00:24, 145.07it/s]Running 10000 simulations.:  65%|██████▌   | 6533/10000 [00:45<00:23, 145.65it/s]Running 10000 simulations.:  65%|██████▌   | 6548/10000 [00:45<00:23, 145.94it/s]Running 10000 simulations.:  66%|██████▌   | 6563/10000 [00:45<00:23, 145.86it/s]Running 10000 simulations.:  66%|██████▌   | 6578/10000 [00:45<00:23, 145.61it/s]Running 10000 simulations.:  66%|██████▌   | 6593/10000 [00:45<00:23, 145.41it/s]Running 10000 simulations.:  66%|██████▌   | 6608/10000 [00:45<00:23, 145.25it/s]Running 10000 simulations.:  66%|██████▌   | 6623/10000 [00:46<00:23, 145.70it/s]Running 10000 simulations.:  66%|██████▋   | 6638/10000 [00:46<00:23, 145.75it/s]Running 10000 simulations.:  67%|██████▋   | 6653/10000 [00:46<00:22, 145.69it/s]Running 10000 simulations.:  67%|██████▋   | 6668/10000 [00:46<00:22, 145.62it/s]Running 10000 simulations.:  67%|██████▋   | 6683/10000 [00:46<00:22, 145.99it/s]Running 10000 simulations.:  67%|██████▋   | 6698/10000 [00:46<00:22, 145.89it/s]Running 10000 simulations.:  67%|██████▋   | 6713/10000 [00:46<00:22, 145.51it/s]Running 10000 simulations.:  67%|██████▋   | 6728/10000 [00:46<00:22, 145.72it/s]Running 10000 simulations.:  67%|██████▋   | 6743/10000 [00:46<00:22, 145.97it/s]Running 10000 simulations.:  68%|██████▊   | 6758/10000 [00:47<00:22, 145.67it/s]Running 10000 simulations.:  68%|██████▊   | 6773/10000 [00:47<00:22, 145.50it/s]Running 10000 simulations.:  68%|██████▊   | 6788/10000 [00:47<00:22, 145.89it/s]Running 10000 simulations.:  68%|██████▊   | 6803/10000 [00:47<00:21, 146.05it/s]Running 10000 simulations.:  68%|██████▊   | 6818/10000 [00:47<00:21, 145.95it/s]Running 10000 simulations.:  68%|██████▊   | 6833/10000 [00:47<00:21, 145.63it/s]Running 10000 simulations.:  68%|██████▊   | 6848/10000 [00:47<00:21, 144.13it/s]Running 10000 simulations.:  69%|██████▊   | 6863/10000 [00:47<00:21, 143.61it/s]Running 10000 simulations.:  69%|██████▉   | 6878/10000 [00:47<00:21, 143.36it/s]Running 10000 simulations.:  69%|██████▉   | 6893/10000 [00:47<00:21, 143.03it/s]Running 10000 simulations.:  69%|██████▉   | 6908/10000 [00:48<00:21, 143.76it/s]Running 10000 simulations.:  69%|██████▉   | 6923/10000 [00:48<00:21, 144.37it/s]Running 10000 simulations.:  69%|██████▉   | 6938/10000 [00:48<00:21, 144.62it/s]Running 10000 simulations.:  70%|██████▉   | 6953/10000 [00:48<00:21, 144.98it/s]Running 10000 simulations.:  70%|██████▉   | 6968/10000 [00:48<00:20, 145.25it/s]Running 10000 simulations.:  70%|██████▉   | 6983/10000 [00:48<00:20, 145.14it/s]Running 10000 simulations.:  70%|██████▉   | 6998/10000 [00:48<00:20, 144.70it/s]Running 10000 simulations.:  70%|███████   | 7013/10000 [00:48<00:20, 144.50it/s]Running 10000 simulations.:  70%|███████   | 7028/10000 [00:48<00:20, 144.04it/s]Running 10000 simulations.:  70%|███████   | 7043/10000 [00:48<00:20, 143.66it/s]Running 10000 simulations.:  71%|███████   | 7058/10000 [00:49<00:20, 143.73it/s]Running 10000 simulations.:  71%|███████   | 7073/10000 [00:49<00:20, 144.21it/s]Running 10000 simulations.:  71%|███████   | 7088/10000 [00:49<00:20, 144.64it/s]Running 10000 simulations.:  71%|███████   | 7103/10000 [00:49<00:19, 144.88it/s]Running 10000 simulations.:  71%|███████   | 7118/10000 [00:49<00:19, 144.82it/s]Running 10000 simulations.:  71%|███████▏  | 7133/10000 [00:49<00:19, 144.76it/s]Running 10000 simulations.:  71%|███████▏  | 7148/10000 [00:49<00:19, 144.66it/s]Running 10000 simulations.:  72%|███████▏  | 7163/10000 [00:49<00:19, 144.65it/s]Running 10000 simulations.:  72%|███████▏  | 7178/10000 [00:49<00:19, 144.62it/s]Running 10000 simulations.:  72%|███████▏  | 7193/10000 [00:50<00:19, 144.39it/s]Running 10000 simulations.:  72%|███████▏  | 7208/10000 [00:50<00:19, 144.87it/s]Running 10000 simulations.:  72%|███████▏  | 7223/10000 [00:50<00:19, 145.47it/s]Running 10000 simulations.:  72%|███████▏  | 7238/10000 [00:50<00:18, 145.98it/s]Running 10000 simulations.:  73%|███████▎  | 7253/10000 [00:50<00:18, 145.70it/s]Running 10000 simulations.:  73%|███████▎  | 7268/10000 [00:50<00:18, 145.96it/s]Running 10000 simulations.:  73%|███████▎  | 7283/10000 [00:50<00:18, 146.29it/s]Running 10000 simulations.:  73%|███████▎  | 7298/10000 [00:50<00:18, 146.63it/s]Running 10000 simulations.:  73%|███████▎  | 7313/10000 [00:50<00:18, 146.02it/s]Running 10000 simulations.:  73%|███████▎  | 7328/10000 [00:50<00:18, 145.67it/s]Running 10000 simulations.:  73%|███████▎  | 7343/10000 [00:51<00:18, 145.41it/s]Running 10000 simulations.:  74%|███████▎  | 7358/10000 [00:51<00:18, 145.00it/s]Running 10000 simulations.:  74%|███████▎  | 7373/10000 [00:51<00:18, 144.83it/s]Running 10000 simulations.:  74%|███████▍  | 7388/10000 [00:51<00:18, 144.69it/s]Running 10000 simulations.:  74%|███████▍  | 7403/10000 [00:51<00:19, 135.75it/s]Running 10000 simulations.:  74%|███████▍  | 7417/10000 [00:51<00:19, 130.44it/s]Running 10000 simulations.:  74%|███████▍  | 7431/10000 [00:51<00:20, 126.66it/s]Running 10000 simulations.:  74%|███████▍  | 7444/10000 [00:51<00:21, 121.49it/s]Running 10000 simulations.:  75%|███████▍  | 7457/10000 [00:51<00:21, 120.40it/s]Running 10000 simulations.:  75%|███████▍  | 7470/10000 [00:52<00:21, 119.73it/s]Running 10000 simulations.:  75%|███████▍  | 7483/10000 [00:52<00:21, 119.23it/s]Running 10000 simulations.:  75%|███████▍  | 7495/10000 [00:52<00:21, 119.07it/s]Running 10000 simulations.:  75%|███████▌  | 7507/10000 [00:52<00:20, 119.19it/s]Running 10000 simulations.:  75%|███████▌  | 7519/10000 [00:52<00:20, 119.33it/s]Running 10000 simulations.:  75%|███████▌  | 7532/10000 [00:52<00:20, 119.66it/s]Running 10000 simulations.:  75%|███████▌  | 7544/10000 [00:52<00:20, 119.19it/s]Running 10000 simulations.:  76%|███████▌  | 7556/10000 [00:52<00:20, 119.20it/s]Running 10000 simulations.:  76%|███████▌  | 7568/10000 [00:52<00:20, 119.41it/s]Running 10000 simulations.:  76%|███████▌  | 7580/10000 [00:52<00:20, 119.22it/s]Running 10000 simulations.:  76%|███████▌  | 7592/10000 [00:53<00:20, 119.12it/s]Running 10000 simulations.:  76%|███████▌  | 7604/10000 [00:53<00:20, 119.31it/s]Running 10000 simulations.:  76%|███████▌  | 7616/10000 [00:53<00:19, 119.26it/s]Running 10000 simulations.:  76%|███████▋  | 7628/10000 [00:53<00:19, 119.34it/s]Running 10000 simulations.:  76%|███████▋  | 7640/10000 [00:53<00:19, 119.16it/s]Running 10000 simulations.:  77%|███████▋  | 7652/10000 [00:53<00:19, 118.99it/s]Running 10000 simulations.:  77%|███████▋  | 7664/10000 [00:53<00:19, 118.73it/s]Running 10000 simulations.:  77%|███████▋  | 7676/10000 [00:53<00:19, 118.73it/s]Running 10000 simulations.:  77%|███████▋  | 7688/10000 [00:53<00:19, 118.74it/s]Running 10000 simulations.:  77%|███████▋  | 7700/10000 [00:53<00:19, 118.89it/s]Running 10000 simulations.:  77%|███████▋  | 7712/10000 [00:54<00:19, 118.61it/s]Running 10000 simulations.:  77%|███████▋  | 7724/10000 [00:54<00:19, 118.58it/s]Running 10000 simulations.:  77%|███████▋  | 7736/10000 [00:54<00:19, 118.51it/s]Running 10000 simulations.:  77%|███████▋  | 7748/10000 [00:54<00:19, 118.32it/s]Running 10000 simulations.:  78%|███████▊  | 7760/10000 [00:54<00:18, 118.77it/s]Running 10000 simulations.:  78%|███████▊  | 7772/10000 [00:54<00:18, 118.45it/s]Running 10000 simulations.:  78%|███████▊  | 7784/10000 [00:54<00:18, 118.80it/s]Running 10000 simulations.:  78%|███████▊  | 7796/10000 [00:54<00:18, 119.08it/s]Running 10000 simulations.:  78%|███████▊  | 7808/10000 [00:54<00:18, 119.35it/s]Running 10000 simulations.:  78%|███████▊  | 7820/10000 [00:55<00:18, 119.42it/s]Running 10000 simulations.:  78%|███████▊  | 7832/10000 [00:55<00:18, 119.00it/s]Running 10000 simulations.:  78%|███████▊  | 7844/10000 [00:55<00:18, 118.98it/s]Running 10000 simulations.:  79%|███████▊  | 7856/10000 [00:55<00:17, 119.20it/s]Running 10000 simulations.:  79%|███████▊  | 7869/10000 [00:55<00:17, 119.53it/s]Running 10000 simulations.:  79%|███████▉  | 7882/10000 [00:55<00:17, 119.84it/s]Running 10000 simulations.:  79%|███████▉  | 7895/10000 [00:55<00:17, 120.08it/s]Running 10000 simulations.:  79%|███████▉  | 7908/10000 [00:55<00:17, 120.37it/s]Running 10000 simulations.:  79%|███████▉  | 7921/10000 [00:55<00:17, 120.16it/s]Running 10000 simulations.:  79%|███████▉  | 7934/10000 [00:55<00:17, 119.84it/s]Running 10000 simulations.:  79%|███████▉  | 7946/10000 [00:56<00:17, 119.87it/s]Running 10000 simulations.:  80%|███████▉  | 7958/10000 [00:56<00:17, 119.78it/s]Running 10000 simulations.:  80%|███████▉  | 7970/10000 [00:56<00:17, 119.34it/s]Running 10000 simulations.:  80%|███████▉  | 7982/10000 [00:56<00:18, 112.04it/s]Running 10000 simulations.:  80%|███████▉  | 7994/10000 [00:56<00:17, 113.90it/s]Running 10000 simulations.:  80%|████████  | 8007/10000 [00:56<00:17, 115.75it/s]Running 10000 simulations.:  80%|████████  | 8019/10000 [00:56<00:16, 116.71it/s]Running 10000 simulations.:  80%|████████  | 8031/10000 [00:56<00:16, 117.52it/s]Running 10000 simulations.:  80%|████████  | 8043/10000 [00:56<00:16, 117.90it/s]Running 10000 simulations.:  81%|████████  | 8055/10000 [00:56<00:16, 118.11it/s]Running 10000 simulations.:  81%|████████  | 8067/10000 [00:57<00:16, 118.46it/s]Running 10000 simulations.:  81%|████████  | 8079/10000 [00:57<00:16, 118.56it/s]Running 10000 simulations.:  81%|████████  | 8091/10000 [00:57<00:16, 118.61it/s]Running 10000 simulations.:  81%|████████  | 8103/10000 [00:57<00:15, 118.65it/s]Running 10000 simulations.:  81%|████████  | 8115/10000 [00:57<00:24, 77.57it/s] Running 10000 simulations.:  81%|████████▏ | 8127/10000 [00:57<00:21, 86.77it/s]Running 10000 simulations.:  81%|████████▏ | 8139/10000 [00:57<00:19, 94.51it/s]Running 10000 simulations.:  82%|████████▏ | 8152/10000 [00:57<00:18, 101.03it/s]Running 10000 simulations.:  82%|████████▏ | 8165/10000 [00:58<00:17, 106.16it/s]Running 10000 simulations.:  82%|████████▏ | 8178/10000 [00:58<00:16, 110.07it/s]Running 10000 simulations.:  82%|████████▏ | 8190/10000 [00:58<00:16, 112.59it/s]Running 10000 simulations.:  82%|████████▏ | 8202/10000 [00:58<00:15, 114.21it/s]Running 10000 simulations.:  82%|████████▏ | 8214/10000 [00:58<00:15, 115.60it/s]Running 10000 simulations.:  82%|████████▏ | 8226/10000 [00:58<00:15, 116.16it/s]Running 10000 simulations.:  82%|████████▏ | 8238/10000 [00:58<00:15, 116.90it/s]Running 10000 simulations.:  82%|████████▎ | 8250/10000 [00:58<00:14, 117.59it/s]Running 10000 simulations.:  83%|████████▎ | 8263/10000 [00:58<00:14, 118.49it/s]Running 10000 simulations.:  83%|████████▎ | 8275/10000 [00:59<00:14, 118.54it/s]Running 10000 simulations.:  83%|████████▎ | 8287/10000 [00:59<00:14, 118.21it/s]Running 10000 simulations.:  83%|████████▎ | 8299/10000 [00:59<00:14, 118.60it/s]Running 10000 simulations.:  83%|████████▎ | 8311/10000 [00:59<00:14, 118.39it/s]Running 10000 simulations.:  83%|████████▎ | 8323/10000 [00:59<00:14, 118.25it/s]Running 10000 simulations.:  83%|████████▎ | 8335/10000 [00:59<00:14, 117.98it/s]Running 10000 simulations.:  83%|████████▎ | 8347/10000 [00:59<00:13, 118.12it/s]Running 10000 simulations.:  84%|████████▎ | 8359/10000 [00:59<00:13, 118.65it/s]Running 10000 simulations.:  84%|████████▎ | 8371/10000 [00:59<00:13, 118.53it/s]Running 10000 simulations.:  84%|████████▍ | 8383/10000 [00:59<00:13, 118.68it/s]Running 10000 simulations.:  84%|████████▍ | 8395/10000 [01:00<00:13, 118.71it/s]Running 10000 simulations.:  84%|████████▍ | 8407/10000 [01:00<00:13, 118.36it/s]Running 10000 simulations.:  84%|████████▍ | 8419/10000 [01:00<00:13, 118.10it/s]Running 10000 simulations.:  84%|████████▍ | 8431/10000 [01:00<00:13, 117.79it/s]Running 10000 simulations.:  84%|████████▍ | 8443/10000 [01:00<00:13, 117.80it/s]Running 10000 simulations.:  85%|████████▍ | 8455/10000 [01:00<00:13, 117.59it/s]Running 10000 simulations.:  85%|████████▍ | 8467/10000 [01:00<00:13, 117.43it/s]Running 10000 simulations.:  85%|████████▍ | 8479/10000 [01:00<00:12, 117.74it/s]Running 10000 simulations.:  85%|████████▍ | 8491/10000 [01:00<00:12, 118.15it/s]Running 10000 simulations.:  85%|████████▌ | 8504/10000 [01:00<00:12, 118.70it/s]Running 10000 simulations.:  85%|████████▌ | 8516/10000 [01:01<00:12, 118.58it/s]Running 10000 simulations.:  85%|████████▌ | 8528/10000 [01:01<00:12, 118.41it/s]Running 10000 simulations.:  85%|████████▌ | 8540/10000 [01:01<00:12, 118.18it/s]Running 10000 simulations.:  86%|████████▌ | 8552/10000 [01:01<00:12, 117.86it/s]Running 10000 simulations.:  86%|████████▌ | 8564/10000 [01:01<00:12, 117.82it/s]Running 10000 simulations.:  86%|████████▌ | 8576/10000 [01:01<00:12, 117.80it/s]Running 10000 simulations.:  86%|████████▌ | 8588/10000 [01:01<00:11, 118.00it/s]Running 10000 simulations.:  86%|████████▌ | 8600/10000 [01:01<00:11, 118.44it/s]Running 10000 simulations.:  86%|████████▌ | 8612/10000 [01:01<00:11, 118.27it/s]Running 10000 simulations.:  86%|████████▌ | 8624/10000 [01:01<00:11, 118.48it/s]Running 10000 simulations.:  86%|████████▋ | 8636/10000 [01:02<00:11, 118.64it/s]Running 10000 simulations.:  86%|████████▋ | 8648/10000 [01:02<00:11, 118.91it/s]Running 10000 simulations.:  87%|████████▋ | 8660/10000 [01:02<00:11, 118.64it/s]Running 10000 simulations.:  87%|████████▋ | 8673/10000 [01:02<00:11, 119.67it/s]Running 10000 simulations.:  87%|████████▋ | 8686/10000 [01:02<00:10, 120.66it/s]Running 10000 simulations.:  87%|████████▋ | 8700/10000 [01:02<00:10, 125.72it/s]Running 10000 simulations.:  87%|████████▋ | 8715/10000 [01:02<00:09, 130.76it/s]Running 10000 simulations.:  87%|████████▋ | 8730/10000 [01:02<00:09, 134.83it/s]Running 10000 simulations.:  87%|████████▋ | 8745/10000 [01:02<00:09, 137.78it/s]Running 10000 simulations.:  88%|████████▊ | 8760/10000 [01:02<00:08, 140.34it/s]Running 10000 simulations.:  88%|████████▊ | 8775/10000 [01:03<00:08, 141.64it/s]Running 10000 simulations.:  88%|████████▊ | 8790/10000 [01:03<00:08, 142.55it/s]Running 10000 simulations.:  88%|████████▊ | 8805/10000 [01:03<00:08, 142.88it/s]Running 10000 simulations.:  88%|████████▊ | 8820/10000 [01:03<00:08, 143.19it/s]Running 10000 simulations.:  88%|████████▊ | 8835/10000 [01:03<00:08, 143.18it/s]Running 10000 simulations.:  88%|████████▊ | 8850/10000 [01:03<00:07, 143.77it/s]Running 10000 simulations.:  89%|████████▊ | 8865/10000 [01:03<00:07, 143.68it/s]Running 10000 simulations.:  89%|████████▉ | 8880/10000 [01:03<00:07, 143.91it/s]Running 10000 simulations.:  89%|████████▉ | 8895/10000 [01:03<00:07, 144.23it/s]Running 10000 simulations.:  89%|████████▉ | 8910/10000 [01:04<00:07, 144.45it/s]Running 10000 simulations.:  89%|████████▉ | 8925/10000 [01:04<00:07, 144.86it/s]Running 10000 simulations.:  89%|████████▉ | 8940/10000 [01:04<00:07, 145.09it/s]Running 10000 simulations.:  90%|████████▉ | 8955/10000 [01:04<00:07, 145.33it/s]Running 10000 simulations.:  90%|████████▉ | 8970/10000 [01:04<00:07, 144.89it/s]Running 10000 simulations.:  90%|████████▉ | 8985/10000 [01:04<00:07, 144.02it/s]Running 10000 simulations.:  90%|█████████ | 9000/10000 [01:04<00:06, 143.83it/s]Running 10000 simulations.:  90%|█████████ | 9015/10000 [01:04<00:06, 144.23it/s]Running 10000 simulations.:  90%|█████████ | 9030/10000 [01:04<00:06, 144.43it/s]Running 10000 simulations.:  90%|█████████ | 9045/10000 [01:04<00:06, 144.37it/s]Running 10000 simulations.:  91%|█████████ | 9060/10000 [01:05<00:06, 144.45it/s]Running 10000 simulations.:  91%|█████████ | 9075/10000 [01:05<00:06, 144.82it/s]Running 10000 simulations.:  91%|█████████ | 9090/10000 [01:05<00:06, 145.44it/s]Running 10000 simulations.:  91%|█████████ | 9105/10000 [01:05<00:06, 145.90it/s]Running 10000 simulations.:  91%|█████████ | 9120/10000 [01:05<00:06, 146.53it/s]Running 10000 simulations.:  91%|█████████▏| 9135/10000 [01:05<00:05, 146.99it/s]Running 10000 simulations.:  92%|█████████▏| 9150/10000 [01:05<00:05, 147.22it/s]Running 10000 simulations.:  92%|█████████▏| 9165/10000 [01:05<00:05, 147.16it/s]Running 10000 simulations.:  92%|█████████▏| 9180/10000 [01:05<00:05, 146.34it/s]Running 10000 simulations.:  92%|█████████▏| 9195/10000 [01:05<00:05, 146.15it/s]Running 10000 simulations.:  92%|█████████▏| 9210/10000 [01:06<00:05, 146.45it/s]Running 10000 simulations.:  92%|█████████▏| 9225/10000 [01:06<00:05, 146.67it/s]Running 10000 simulations.:  92%|█████████▏| 9240/10000 [01:06<00:05, 146.27it/s]Running 10000 simulations.:  93%|█████████▎| 9255/10000 [01:06<00:05, 146.67it/s]Running 10000 simulations.:  93%|█████████▎| 9270/10000 [01:06<00:04, 146.36it/s]Running 10000 simulations.:  93%|█████████▎| 9285/10000 [01:06<00:04, 145.98it/s]Running 10000 simulations.:  93%|█████████▎| 9300/10000 [01:06<00:04, 145.77it/s]Running 10000 simulations.:  93%|█████████▎| 9315/10000 [01:06<00:04, 145.39it/s]Running 10000 simulations.:  93%|█████████▎| 9330/10000 [01:06<00:04, 145.49it/s]Running 10000 simulations.:  93%|█████████▎| 9345/10000 [01:07<00:04, 145.81it/s]Running 10000 simulations.:  94%|█████████▎| 9360/10000 [01:07<00:04, 146.14it/s]Running 10000 simulations.:  94%|█████████▍| 9375/10000 [01:07<00:04, 145.73it/s]Running 10000 simulations.:  94%|█████████▍| 9390/10000 [01:07<00:04, 145.22it/s]Running 10000 simulations.:  94%|█████████▍| 9405/10000 [01:07<00:04, 145.44it/s]Running 10000 simulations.:  94%|█████████▍| 9420/10000 [01:07<00:03, 145.80it/s]Running 10000 simulations.:  94%|█████████▍| 9435/10000 [01:07<00:03, 145.56it/s]Running 10000 simulations.:  94%|█████████▍| 9450/10000 [01:07<00:03, 145.26it/s]Running 10000 simulations.:  95%|█████████▍| 9465/10000 [01:07<00:03, 145.40it/s]Running 10000 simulations.:  95%|█████████▍| 9480/10000 [01:07<00:03, 145.84it/s]Running 10000 simulations.:  95%|█████████▍| 9495/10000 [01:08<00:04, 115.10it/s]Running 10000 simulations.:  95%|█████████▌| 9508/10000 [01:08<00:05, 97.05it/s] Running 10000 simulations.:  95%|█████████▌| 9519/10000 [01:08<00:05, 85.87it/s]Running 10000 simulations.:  95%|█████████▌| 9529/10000 [01:08<00:05, 79.39it/s]Running 10000 simulations.:  95%|█████████▌| 9538/10000 [01:08<00:06, 75.68it/s]Running 10000 simulations.:  95%|█████████▌| 9547/10000 [01:08<00:06, 72.71it/s]Running 10000 simulations.:  96%|█████████▌| 9556/10000 [01:09<00:05, 75.93it/s]Running 10000 simulations.:  96%|█████████▌| 9568/10000 [01:09<00:05, 84.21it/s]Running 10000 simulations.:  96%|█████████▌| 9580/10000 [01:09<00:04, 91.39it/s]Running 10000 simulations.:  96%|█████████▌| 9591/10000 [01:09<00:04, 95.72it/s]Running 10000 simulations.:  96%|█████████▌| 9603/10000 [01:09<00:03, 100.12it/s]Running 10000 simulations.:  96%|█████████▌| 9616/10000 [01:09<00:03, 105.85it/s]Running 10000 simulations.:  96%|█████████▋| 9628/10000 [01:09<00:03, 107.78it/s]Running 10000 simulations.:  96%|█████████▋| 9640/10000 [01:09<00:03, 106.89it/s]Running 10000 simulations.:  97%|█████████▋| 9651/10000 [01:09<00:03, 90.65it/s] Running 10000 simulations.:  97%|█████████▋| 9661/10000 [01:10<00:04, 82.24it/s]Running 10000 simulations.:  97%|█████████▋| 9670/10000 [01:10<00:04, 77.02it/s]Running 10000 simulations.:  97%|█████████▋| 9679/10000 [01:10<00:04, 73.90it/s]Running 10000 simulations.:  97%|█████████▋| 9687/10000 [01:10<00:04, 71.76it/s]Running 10000 simulations.:  97%|█████████▋| 9695/10000 [01:10<00:04, 70.51it/s]Running 10000 simulations.:  97%|█████████▋| 9703/10000 [01:10<00:04, 69.49it/s]Running 10000 simulations.:  97%|█████████▋| 9711/10000 [01:10<00:04, 69.16it/s]Running 10000 simulations.:  97%|█████████▋| 9719/10000 [01:10<00:04, 68.94it/s]Running 10000 simulations.:  97%|█████████▋| 9726/10000 [01:11<00:03, 68.63it/s]Running 10000 simulations.:  97%|█████████▋| 9733/10000 [01:11<00:03, 68.88it/s]Running 10000 simulations.:  97%|█████████▋| 9740/10000 [01:11<00:03, 69.03it/s]Running 10000 simulations.:  97%|█████████▋| 9747/10000 [01:11<00:03, 69.14it/s]Running 10000 simulations.:  98%|█████████▊| 9754/10000 [01:11<00:03, 69.17it/s]Running 10000 simulations.:  98%|█████████▊| 9761/10000 [01:11<00:03, 68.90it/s]Running 10000 simulations.:  98%|█████████▊| 9768/10000 [01:11<00:03, 68.92it/s]Running 10000 simulations.:  98%|█████████▊| 9775/10000 [01:11<00:03, 68.67it/s]Running 10000 simulations.:  98%|█████████▊| 9782/10000 [01:11<00:03, 68.81it/s]Running 10000 simulations.:  98%|█████████▊| 9789/10000 [01:11<00:03, 68.68it/s]Running 10000 simulations.:  98%|█████████▊| 9796/10000 [01:12<00:02, 69.02it/s]Running 10000 simulations.:  98%|█████████▊| 9803/10000 [01:12<00:02, 69.02it/s]Running 10000 simulations.:  98%|█████████▊| 9810/10000 [01:12<00:02, 68.75it/s]Running 10000 simulations.:  98%|█████████▊| 9819/10000 [01:12<00:02, 73.92it/s]Running 10000 simulations.:  98%|█████████▊| 9836/10000 [01:12<00:01, 88.14it/s]Running 10000 simulations.:  99%|█████████▊| 9853/10000 [01:12<00:01, 101.97it/s]Running 10000 simulations.:  99%|█████████▊| 9869/10000 [01:12<00:01, 114.41it/s]Running 10000 simulations.:  99%|█████████▉| 9885/10000 [01:12<00:00, 125.03it/s]Running 10000 simulations.:  99%|█████████▉| 9902/10000 [01:12<00:00, 134.16it/s]Running 10000 simulations.:  99%|█████████▉| 9919/10000 [01:12<00:00, 141.72it/s]Running 10000 simulations.:  99%|█████████▉| 9936/10000 [01:13<00:00, 147.37it/s]Running 10000 simulations.: 100%|█████████▉| 9953/10000 [01:13<00:00, 151.53it/s]Running 10000 simulations.: 100%|█████████▉| 9970/10000 [01:13<00:00, 154.48it/s]Running 10000 simulations.: 100%|█████████▉| 9987/10000 [01:13<00:00, 156.81it/s]Running 10000 simulations.: 100%|██████████| 10000/10000 [01:13<00:00, 136.11it/s]
Running 10000 simulations.:   0%|          | 0/10000 [00:00<?, ?it/s]Running 10000 simulations.:   0%|          | 16/10000 [00:00<01:03, 157.15it/s]Running 10000 simulations.:   0%|          | 32/10000 [00:00<01:03, 157.46it/s]Running 10000 simulations.:   0%|          | 48/10000 [00:00<01:03, 157.14it/s]Running 10000 simulations.:   1%|          | 64/10000 [00:00<01:03, 157.04it/s]Running 10000 simulations.:   1%|          | 80/10000 [00:00<01:03, 157.21it/s]Running 10000 simulations.:   1%|          | 96/10000 [00:00<01:03, 157.10it/s]Running 10000 simulations.:   1%|          | 112/10000 [00:00<01:02, 157.16it/s]Running 10000 simulations.:   1%|▏         | 128/10000 [00:00<01:02, 157.27it/s]Running 10000 simulations.:   1%|▏         | 144/10000 [00:00<01:02, 157.16it/s]Running 10000 simulations.:   2%|▏         | 160/10000 [00:01<01:02, 157.26it/s]Running 10000 simulations.:   2%|▏         | 176/10000 [00:01<01:02, 157.19it/s]Running 10000 simulations.:   2%|▏         | 192/10000 [00:01<01:02, 157.00it/s]Running 10000 simulations.:   2%|▏         | 208/10000 [00:01<01:02, 156.80it/s]Running 10000 simulations.:   2%|▏         | 224/10000 [00:01<01:02, 156.12it/s]Running 10000 simulations.:   2%|▏         | 240/10000 [00:01<01:02, 156.05it/s]Running 10000 simulations.:   3%|▎         | 256/10000 [00:01<01:02, 155.99it/s]Running 10000 simulations.:   3%|▎         | 272/10000 [00:01<01:02, 156.05it/s]Running 10000 simulations.:   3%|▎         | 288/10000 [00:01<01:02, 156.09it/s]Running 10000 simulations.:   3%|▎         | 304/10000 [00:01<01:02, 156.09it/s]Running 10000 simulations.:   3%|▎         | 320/10000 [00:02<01:02, 155.78it/s]Running 10000 simulations.:   3%|▎         | 336/10000 [00:02<01:02, 155.81it/s]Running 10000 simulations.:   4%|▎         | 352/10000 [00:02<01:01, 155.69it/s]Running 10000 simulations.:   4%|▎         | 368/10000 [00:02<01:01, 155.75it/s]Running 10000 simulations.:   4%|▍         | 384/10000 [00:02<01:01, 155.72it/s]Running 10000 simulations.:   4%|▍         | 400/10000 [00:02<01:01, 155.04it/s]Running 10000 simulations.:   4%|▍         | 416/10000 [00:02<01:01, 155.84it/s]Running 10000 simulations.:   4%|▍         | 432/10000 [00:02<01:01, 155.96it/s]Running 10000 simulations.:   4%|▍         | 448/10000 [00:02<01:01, 156.03it/s]Running 10000 simulations.:   5%|▍         | 464/10000 [00:02<01:01, 156.13it/s]Running 10000 simulations.:   5%|▍         | 480/10000 [00:03<01:01, 155.66it/s]Running 10000 simulations.:   5%|▍         | 496/10000 [00:03<01:00, 155.82it/s]Running 10000 simulations.:   5%|▌         | 512/10000 [00:03<01:01, 155.45it/s]Running 10000 simulations.:   5%|▌         | 528/10000 [00:03<01:00, 155.29it/s]Running 10000 simulations.:   5%|▌         | 544/10000 [00:03<01:00, 155.03it/s]Running 10000 simulations.:   6%|▌         | 560/10000 [00:03<01:01, 154.71it/s]Running 10000 simulations.:   6%|▌         | 576/10000 [00:03<01:00, 154.74it/s]Running 10000 simulations.:   6%|▌         | 592/10000 [00:03<01:00, 154.89it/s]Running 10000 simulations.:   6%|▌         | 608/10000 [00:03<01:00, 154.78it/s]Running 10000 simulations.:   6%|▌         | 624/10000 [00:04<01:00, 155.08it/s]Running 10000 simulations.:   6%|▋         | 640/10000 [00:04<01:00, 155.00it/s]Running 10000 simulations.:   7%|▋         | 656/10000 [00:04<01:00, 154.36it/s]Running 10000 simulations.:   7%|▋         | 672/10000 [00:04<01:00, 154.14it/s]Running 10000 simulations.:   7%|▋         | 688/10000 [00:04<01:00, 153.55it/s]Running 10000 simulations.:   7%|▋         | 704/10000 [00:04<01:00, 153.75it/s]Running 10000 simulations.:   7%|▋         | 720/10000 [00:04<01:00, 154.13it/s]Running 10000 simulations.:   7%|▋         | 736/10000 [00:04<00:59, 154.50it/s]Running 10000 simulations.:   8%|▊         | 752/10000 [00:04<00:59, 154.51it/s]Running 10000 simulations.:   8%|▊         | 768/10000 [00:04<00:59, 154.80it/s]Running 10000 simulations.:   8%|▊         | 784/10000 [00:05<00:59, 154.72it/s]Running 10000 simulations.:   8%|▊         | 800/10000 [00:05<00:59, 154.68it/s]Running 10000 simulations.:   8%|▊         | 816/10000 [00:05<00:59, 154.61it/s]Running 10000 simulations.:   8%|▊         | 832/10000 [00:05<00:59, 154.76it/s]Running 10000 simulations.:   8%|▊         | 848/10000 [00:05<00:59, 154.54it/s]Running 10000 simulations.:   9%|▊         | 864/10000 [00:05<00:59, 154.65it/s]Running 10000 simulations.:   9%|▉         | 880/10000 [00:05<00:58, 155.02it/s]Running 10000 simulations.:   9%|▉         | 896/10000 [00:05<00:58, 154.98it/s]Running 10000 simulations.:   9%|▉         | 912/10000 [00:05<00:58, 154.67it/s]Running 10000 simulations.:   9%|▉         | 928/10000 [00:05<00:58, 155.21it/s]Running 10000 simulations.:   9%|▉         | 944/10000 [00:06<00:58, 155.10it/s]Running 10000 simulations.:  10%|▉         | 960/10000 [00:06<00:58, 154.94it/s]Running 10000 simulations.:  10%|▉         | 976/10000 [00:06<00:58, 154.63it/s]Running 10000 simulations.:  10%|▉         | 992/10000 [00:06<00:58, 154.50it/s]Running 10000 simulations.:  10%|█         | 1008/10000 [00:06<00:58, 154.74it/s]Running 10000 simulations.:  10%|█         | 1024/10000 [00:06<00:58, 154.68it/s]Running 10000 simulations.:  10%|█         | 1040/10000 [00:06<00:57, 154.52it/s]Running 10000 simulations.:  11%|█         | 1056/10000 [00:06<00:57, 154.81it/s]Running 10000 simulations.:  11%|█         | 1072/10000 [00:06<00:57, 154.95it/s]Running 10000 simulations.:  11%|█         | 1088/10000 [00:07<00:57, 154.56it/s]Running 10000 simulations.:  11%|█         | 1104/10000 [00:07<00:57, 154.39it/s]Running 10000 simulations.:  11%|█         | 1120/10000 [00:07<00:57, 154.48it/s]Running 10000 simulations.:  11%|█▏        | 1136/10000 [00:07<00:57, 154.62it/s]Running 10000 simulations.:  12%|█▏        | 1152/10000 [00:07<00:57, 154.41it/s]Running 10000 simulations.:  12%|█▏        | 1168/10000 [00:07<00:57, 154.54it/s]Running 10000 simulations.:  12%|█▏        | 1184/10000 [00:07<00:57, 154.59it/s]Running 10000 simulations.:  12%|█▏        | 1200/10000 [00:07<00:56, 154.88it/s]Running 10000 simulations.:  12%|█▏        | 1216/10000 [00:07<00:56, 154.83it/s]Running 10000 simulations.:  12%|█▏        | 1232/10000 [00:07<00:56, 154.82it/s]Running 10000 simulations.:  12%|█▏        | 1248/10000 [00:08<00:56, 154.42it/s]Running 10000 simulations.:  13%|█▎        | 1264/10000 [00:08<00:56, 154.65it/s]Running 10000 simulations.:  13%|█▎        | 1280/10000 [00:08<00:56, 154.49it/s]Running 10000 simulations.:  13%|█▎        | 1296/10000 [00:08<00:56, 154.60it/s]Running 10000 simulations.:  13%|█▎        | 1312/10000 [00:08<00:56, 154.23it/s]Running 10000 simulations.:  13%|█▎        | 1328/10000 [00:08<00:56, 154.37it/s]Running 10000 simulations.:  13%|█▎        | 1344/10000 [00:08<00:56, 154.32it/s]Running 10000 simulations.:  14%|█▎        | 1360/10000 [00:08<00:55, 154.70it/s]Running 10000 simulations.:  14%|█▍        | 1376/10000 [00:08<00:55, 154.55it/s]Running 10000 simulations.:  14%|█▍        | 1392/10000 [00:08<00:55, 154.61it/s]Running 10000 simulations.:  14%|█▍        | 1408/10000 [00:09<00:55, 154.59it/s]Running 10000 simulations.:  14%|█▍        | 1424/10000 [00:09<00:55, 154.59it/s]Running 10000 simulations.:  14%|█▍        | 1440/10000 [00:09<00:55, 154.60it/s]Running 10000 simulations.:  15%|█▍        | 1456/10000 [00:09<00:55, 154.55it/s]Running 10000 simulations.:  15%|█▍        | 1472/10000 [00:09<00:55, 153.72it/s]Running 10000 simulations.:  15%|█▍        | 1488/10000 [00:09<00:55, 153.55it/s]Running 10000 simulations.:  15%|█▌        | 1504/10000 [00:09<00:55, 153.70it/s]Running 10000 simulations.:  15%|█▌        | 1520/10000 [00:09<00:55, 154.17it/s]Running 10000 simulations.:  15%|█▌        | 1536/10000 [00:09<00:54, 154.62it/s]Running 10000 simulations.:  16%|█▌        | 1552/10000 [00:10<00:54, 154.58it/s]Running 10000 simulations.:  16%|█▌        | 1568/10000 [00:10<00:54, 154.14it/s]Running 10000 simulations.:  16%|█▌        | 1584/10000 [00:10<00:54, 153.86it/s]Running 10000 simulations.:  16%|█▌        | 1600/10000 [00:10<00:54, 153.82it/s]Running 10000 simulations.:  16%|█▌        | 1616/10000 [00:10<00:54, 154.10it/s]Running 10000 simulations.:  16%|█▋        | 1632/10000 [00:10<00:54, 153.64it/s]Running 10000 simulations.:  16%|█▋        | 1648/10000 [00:10<00:54, 153.77it/s]Running 10000 simulations.:  17%|█▋        | 1664/10000 [00:10<00:54, 154.34it/s]Running 10000 simulations.:  17%|█▋        | 1680/10000 [00:10<00:53, 154.32it/s]Running 10000 simulations.:  17%|█▋        | 1696/10000 [00:10<00:53, 154.44it/s]Running 10000 simulations.:  17%|█▋        | 1713/10000 [00:11<00:52, 156.90it/s]Running 10000 simulations.:  17%|█▋        | 1730/10000 [00:11<00:52, 158.33it/s]Running 10000 simulations.:  17%|█▋        | 1746/10000 [00:11<00:52, 158.62it/s]Running 10000 simulations.:  18%|█▊        | 1762/10000 [00:11<00:52, 157.65it/s]Running 10000 simulations.:  18%|█▊        | 1778/10000 [00:11<00:53, 154.57it/s]Running 10000 simulations.:  18%|█▊        | 1794/10000 [00:11<00:53, 152.45it/s]Running 10000 simulations.:  18%|█▊        | 1810/10000 [00:11<00:54, 151.28it/s]Running 10000 simulations.:  18%|█▊        | 1826/10000 [00:11<00:54, 150.39it/s]Running 10000 simulations.:  18%|█▊        | 1842/10000 [00:11<00:53, 151.09it/s]Running 10000 simulations.:  19%|█▊        | 1858/10000 [00:11<00:54, 150.51it/s]Running 10000 simulations.:  19%|█▊        | 1874/10000 [00:12<00:53, 152.09it/s]Running 10000 simulations.:  19%|█▉        | 1890/10000 [00:12<00:53, 152.30it/s]Running 10000 simulations.:  19%|█▉        | 1906/10000 [00:12<00:53, 152.42it/s]Running 10000 simulations.:  19%|█▉        | 1922/10000 [00:12<00:52, 152.81it/s]Running 10000 simulations.:  19%|█▉        | 1938/10000 [00:12<00:52, 153.46it/s]Running 10000 simulations.:  20%|█▉        | 1954/10000 [00:12<00:52, 153.93it/s]Running 10000 simulations.:  20%|█▉        | 1970/10000 [00:12<00:52, 153.99it/s]Running 10000 simulations.:  20%|█▉        | 1986/10000 [00:12<00:52, 154.06it/s]Running 10000 simulations.:  20%|██        | 2002/10000 [00:12<00:51, 153.97it/s]Running 10000 simulations.:  20%|██        | 2018/10000 [00:13<00:51, 154.12it/s]Running 10000 simulations.:  20%|██        | 2034/10000 [00:13<00:51, 154.09it/s]Running 10000 simulations.:  20%|██        | 2050/10000 [00:13<00:51, 154.07it/s]Running 10000 simulations.:  21%|██        | 2066/10000 [00:13<00:51, 153.50it/s]Running 10000 simulations.:  21%|██        | 2082/10000 [00:13<00:51, 153.62it/s]Running 10000 simulations.:  21%|██        | 2098/10000 [00:13<00:51, 154.08it/s]Running 10000 simulations.:  21%|██        | 2114/10000 [00:13<00:51, 153.96it/s]Running 10000 simulations.:  21%|██▏       | 2130/10000 [00:13<00:51, 154.17it/s]Running 10000 simulations.:  21%|██▏       | 2146/10000 [00:13<00:51, 153.80it/s]Running 10000 simulations.:  22%|██▏       | 2162/10000 [00:13<00:50, 153.70it/s]Running 10000 simulations.:  22%|██▏       | 2178/10000 [00:14<00:50, 153.84it/s]Running 10000 simulations.:  22%|██▏       | 2194/10000 [00:14<00:50, 153.84it/s]Running 10000 simulations.:  22%|██▏       | 2210/10000 [00:14<00:50, 153.48it/s]Running 10000 simulations.:  22%|██▏       | 2226/10000 [00:14<00:50, 152.99it/s]Running 10000 simulations.:  22%|██▏       | 2242/10000 [00:14<00:50, 153.02it/s]Running 10000 simulations.:  23%|██▎       | 2258/10000 [00:14<00:50, 153.35it/s]Running 10000 simulations.:  23%|██▎       | 2274/10000 [00:14<00:50, 153.35it/s]Running 10000 simulations.:  23%|██▎       | 2290/10000 [00:14<00:50, 153.03it/s]Running 10000 simulations.:  23%|██▎       | 2306/10000 [00:14<00:50, 153.14it/s]Running 10000 simulations.:  23%|██▎       | 2322/10000 [00:15<00:49, 153.63it/s]Running 10000 simulations.:  23%|██▎       | 2338/10000 [00:15<00:49, 154.15it/s]Running 10000 simulations.:  24%|██▎       | 2354/10000 [00:15<00:49, 153.68it/s]Running 10000 simulations.:  24%|██▎       | 2370/10000 [00:15<00:49, 154.27it/s]Running 10000 simulations.:  24%|██▍       | 2386/10000 [00:15<00:49, 154.57it/s]Running 10000 simulations.:  24%|██▍       | 2402/10000 [00:15<00:49, 154.43it/s]Running 10000 simulations.:  24%|██▍       | 2418/10000 [00:15<00:49, 153.99it/s]Running 10000 simulations.:  24%|██▍       | 2434/10000 [00:15<00:49, 154.16it/s]Running 10000 simulations.:  24%|██▍       | 2450/10000 [00:15<00:48, 154.20it/s]Running 10000 simulations.:  25%|██▍       | 2466/10000 [00:15<00:48, 154.36it/s]Running 10000 simulations.:  25%|██▍       | 2482/10000 [00:16<00:48, 154.26it/s]Running 10000 simulations.:  25%|██▍       | 2498/10000 [00:16<00:48, 154.28it/s]Running 10000 simulations.:  25%|██▌       | 2514/10000 [00:16<00:48, 153.77it/s]Running 10000 simulations.:  25%|██▌       | 2530/10000 [00:16<00:48, 153.72it/s]Running 10000 simulations.:  25%|██▌       | 2546/10000 [00:16<00:48, 153.85it/s]Running 10000 simulations.:  26%|██▌       | 2562/10000 [00:16<00:48, 154.34it/s]Running 10000 simulations.:  26%|██▌       | 2578/10000 [00:16<00:48, 154.38it/s]Running 10000 simulations.:  26%|██▌       | 2594/10000 [00:16<00:47, 154.36it/s]Running 10000 simulations.:  26%|██▌       | 2610/10000 [00:16<00:48, 153.92it/s]Running 10000 simulations.:  26%|██▋       | 2626/10000 [00:16<00:47, 154.23it/s]Running 10000 simulations.:  26%|██▋       | 2642/10000 [00:17<00:47, 154.32it/s]Running 10000 simulations.:  27%|██▋       | 2658/10000 [00:17<00:47, 154.28it/s]Running 10000 simulations.:  27%|██▋       | 2674/10000 [00:17<00:47, 153.00it/s]Running 10000 simulations.:  27%|██▋       | 2690/10000 [00:17<00:47, 153.59it/s]Running 10000 simulations.:  27%|██▋       | 2706/10000 [00:17<00:47, 154.01it/s]Running 10000 simulations.:  27%|██▋       | 2722/10000 [00:17<00:47, 154.23it/s]Running 10000 simulations.:  27%|██▋       | 2738/10000 [00:17<00:47, 154.00it/s]Running 10000 simulations.:  28%|██▊       | 2754/10000 [00:17<00:47, 153.51it/s]Running 10000 simulations.:  28%|██▊       | 2770/10000 [00:17<00:47, 153.01it/s]Running 10000 simulations.:  28%|██▊       | 2786/10000 [00:18<00:47, 153.39it/s]Running 10000 simulations.:  28%|██▊       | 2802/10000 [00:18<00:46, 153.49it/s]Running 10000 simulations.:  28%|██▊       | 2818/10000 [00:18<00:46, 153.38it/s]Running 10000 simulations.:  28%|██▊       | 2834/10000 [00:18<00:46, 153.50it/s]Running 10000 simulations.:  28%|██▊       | 2850/10000 [00:18<00:46, 153.90it/s]Running 10000 simulations.:  29%|██▊       | 2866/10000 [00:18<00:46, 154.22it/s]Running 10000 simulations.:  29%|██▉       | 2882/10000 [00:18<00:46, 154.10it/s]Running 10000 simulations.:  29%|██▉       | 2898/10000 [00:18<00:46, 153.97it/s]Running 10000 simulations.:  29%|██▉       | 2914/10000 [00:18<00:46, 153.76it/s]Running 10000 simulations.:  29%|██▉       | 2930/10000 [00:18<00:45, 154.01it/s]Running 10000 simulations.:  29%|██▉       | 2946/10000 [00:19<00:45, 153.65it/s]Running 10000 simulations.:  30%|██▉       | 2962/10000 [00:19<00:46, 152.33it/s]Running 10000 simulations.:  30%|██▉       | 2978/10000 [00:19<00:46, 151.18it/s]Running 10000 simulations.:  30%|██▉       | 2994/10000 [00:19<00:46, 150.48it/s]Running 10000 simulations.:  30%|███       | 3010/10000 [00:19<00:46, 149.50it/s]Running 10000 simulations.:  30%|███       | 3025/10000 [00:19<00:46, 149.07it/s]Running 10000 simulations.:  30%|███       | 3040/10000 [00:19<00:46, 149.28it/s]Running 10000 simulations.:  31%|███       | 3055/10000 [00:19<00:46, 149.00it/s]Running 10000 simulations.:  31%|███       | 3070/10000 [00:19<00:46, 148.30it/s]Running 10000 simulations.:  31%|███       | 3085/10000 [00:20<00:46, 147.82it/s]Running 10000 simulations.:  31%|███       | 3100/10000 [00:20<00:46, 147.95it/s]Running 10000 simulations.:  31%|███       | 3115/10000 [00:20<00:46, 148.27it/s]Running 10000 simulations.:  31%|███▏      | 3130/10000 [00:20<00:46, 147.88it/s]Running 10000 simulations.:  31%|███▏      | 3145/10000 [00:20<00:46, 146.16it/s]Running 10000 simulations.:  32%|███▏      | 3160/10000 [00:20<00:46, 146.72it/s]Running 10000 simulations.:  32%|███▏      | 3176/10000 [00:20<00:46, 147.70it/s]Running 10000 simulations.:  32%|███▏      | 3191/10000 [00:20<00:45, 148.13it/s]Running 10000 simulations.:  32%|███▏      | 3206/10000 [00:20<00:45, 147.88it/s]Running 10000 simulations.:  32%|███▏      | 3221/10000 [00:20<00:45, 148.33it/s]Running 10000 simulations.:  32%|███▏      | 3236/10000 [00:21<00:45, 148.14it/s]Running 10000 simulations.:  33%|███▎      | 3251/10000 [00:21<00:45, 147.78it/s]Running 10000 simulations.:  33%|███▎      | 3266/10000 [00:21<00:45, 148.03it/s]Running 10000 simulations.:  33%|███▎      | 3281/10000 [00:21<00:45, 148.33it/s]Running 10000 simulations.:  33%|███▎      | 3296/10000 [00:21<00:45, 148.12it/s]Running 10000 simulations.:  33%|███▎      | 3311/10000 [00:21<00:45, 148.31it/s]Running 10000 simulations.:  33%|███▎      | 3326/10000 [00:21<00:45, 148.28it/s]Running 10000 simulations.:  33%|███▎      | 3341/10000 [00:21<00:44, 148.46it/s]Running 10000 simulations.:  34%|███▎      | 3356/10000 [00:22<01:10, 94.28it/s] Running 10000 simulations.:  34%|███▎      | 3371/10000 [00:22<01:02, 105.49it/s]Running 10000 simulations.:  34%|███▍      | 3386/10000 [00:22<00:57, 115.11it/s]Running 10000 simulations.:  34%|███▍      | 3401/10000 [00:22<00:53, 123.26it/s]Running 10000 simulations.:  34%|███▍      | 3416/10000 [00:22<00:50, 129.57it/s]Running 10000 simulations.:  34%|███▍      | 3431/10000 [00:22<00:48, 134.64it/s]Running 10000 simulations.:  34%|███▍      | 3446/10000 [00:22<00:47, 138.27it/s]Running 10000 simulations.:  35%|███▍      | 3461/10000 [00:22<00:46, 141.00it/s]Running 10000 simulations.:  35%|███▍      | 3476/10000 [00:22<00:45, 142.92it/s]Running 10000 simulations.:  35%|███▍      | 3491/10000 [00:22<00:45, 144.34it/s]Running 10000 simulations.:  35%|███▌      | 3506/10000 [00:23<00:44, 145.10it/s]Running 10000 simulations.:  35%|███▌      | 3521/10000 [00:23<00:44, 145.72it/s]Running 10000 simulations.:  35%|███▌      | 3536/10000 [00:23<00:44, 146.09it/s]Running 10000 simulations.:  36%|███▌      | 3551/10000 [00:23<00:43, 146.58it/s]Running 10000 simulations.:  36%|███▌      | 3566/10000 [00:23<00:43, 146.52it/s]Running 10000 simulations.:  36%|███▌      | 3581/10000 [00:23<00:43, 146.81it/s]Running 10000 simulations.:  36%|███▌      | 3596/10000 [00:23<00:43, 147.47it/s]Running 10000 simulations.:  36%|███▌      | 3611/10000 [00:23<00:43, 147.66it/s]Running 10000 simulations.:  36%|███▋      | 3626/10000 [00:23<00:43, 147.67it/s]Running 10000 simulations.:  36%|███▋      | 3641/10000 [00:23<00:42, 147.98it/s]Running 10000 simulations.:  37%|███▋      | 3656/10000 [00:24<00:42, 148.40it/s]Running 10000 simulations.:  37%|███▋      | 3671/10000 [00:24<00:42, 148.31it/s]Running 10000 simulations.:  37%|███▋      | 3686/10000 [00:24<00:42, 148.61it/s]Running 10000 simulations.:  37%|███▋      | 3701/10000 [00:24<00:42, 148.71it/s]Running 10000 simulations.:  37%|███▋      | 3716/10000 [00:24<00:42, 148.37it/s]Running 10000 simulations.:  37%|███▋      | 3731/10000 [00:24<00:42, 148.05it/s]Running 10000 simulations.:  37%|███▋      | 3746/10000 [00:24<00:42, 147.98it/s]Running 10000 simulations.:  38%|███▊      | 3761/10000 [00:24<00:41, 148.55it/s]Running 10000 simulations.:  38%|███▊      | 3776/10000 [00:24<00:41, 148.74it/s]Running 10000 simulations.:  38%|███▊      | 3791/10000 [00:24<00:41, 148.15it/s]Running 10000 simulations.:  38%|███▊      | 3806/10000 [00:25<00:41, 147.76it/s]Running 10000 simulations.:  38%|███▊      | 3821/10000 [00:25<00:41, 147.64it/s]Running 10000 simulations.:  38%|███▊      | 3836/10000 [00:25<00:41, 147.41it/s]Running 10000 simulations.:  39%|███▊      | 3851/10000 [00:25<00:41, 147.45it/s]Running 10000 simulations.:  39%|███▊      | 3866/10000 [00:25<00:41, 147.21it/s]Running 10000 simulations.:  39%|███▉      | 3881/10000 [00:25<00:41, 147.09it/s]Running 10000 simulations.:  39%|███▉      | 3896/10000 [00:25<00:41, 147.48it/s]Running 10000 simulations.:  39%|███▉      | 3911/10000 [00:25<00:41, 147.02it/s]Running 10000 simulations.:  39%|███▉      | 3926/10000 [00:25<00:41, 147.04it/s]Running 10000 simulations.:  39%|███▉      | 3941/10000 [00:25<00:41, 146.99it/s]Running 10000 simulations.:  40%|███▉      | 3956/10000 [00:26<00:41, 146.95it/s]Running 10000 simulations.:  40%|███▉      | 3971/10000 [00:26<00:40, 147.23it/s]Running 10000 simulations.:  40%|███▉      | 3986/10000 [00:26<00:40, 147.37it/s]Running 10000 simulations.:  40%|████      | 4001/10000 [00:26<00:40, 147.33it/s]Running 10000 simulations.:  40%|████      | 4016/10000 [00:26<00:40, 147.72it/s]Running 10000 simulations.:  40%|████      | 4031/10000 [00:26<00:40, 147.75it/s]Running 10000 simulations.:  40%|████      | 4046/10000 [00:26<00:40, 147.38it/s]Running 10000 simulations.:  41%|████      | 4061/10000 [00:26<00:40, 146.96it/s]Running 10000 simulations.:  41%|████      | 4076/10000 [00:26<00:40, 147.18it/s]Running 10000 simulations.:  41%|████      | 4091/10000 [00:27<00:40, 147.00it/s]Running 10000 simulations.:  41%|████      | 4106/10000 [00:27<00:40, 146.76it/s]Running 10000 simulations.:  41%|████      | 4121/10000 [00:27<00:39, 147.02it/s]Running 10000 simulations.:  41%|████▏     | 4136/10000 [00:27<00:39, 147.60it/s]Running 10000 simulations.:  42%|████▏     | 4151/10000 [00:27<00:39, 148.04it/s]Running 10000 simulations.:  42%|████▏     | 4166/10000 [00:27<00:39, 148.47it/s]Running 10000 simulations.:  42%|████▏     | 4181/10000 [00:27<00:39, 148.39it/s]Running 10000 simulations.:  42%|████▏     | 4196/10000 [00:27<00:39, 148.07it/s]Running 10000 simulations.:  42%|████▏     | 4211/10000 [00:27<00:39, 147.48it/s]Running 10000 simulations.:  42%|████▏     | 4226/10000 [00:27<00:39, 147.18it/s]Running 10000 simulations.:  42%|████▏     | 4241/10000 [00:28<00:39, 147.22it/s]Running 10000 simulations.:  43%|████▎     | 4256/10000 [00:28<00:38, 147.72it/s]Running 10000 simulations.:  43%|████▎     | 4271/10000 [00:28<00:38, 147.44it/s]Running 10000 simulations.:  43%|████▎     | 4286/10000 [00:28<00:41, 139.32it/s]Running 10000 simulations.:  43%|████▎     | 4301/10000 [00:28<00:40, 141.67it/s]Running 10000 simulations.:  43%|████▎     | 4316/10000 [00:28<00:39, 143.75it/s]Running 10000 simulations.:  43%|████▎     | 4331/10000 [00:28<00:39, 144.90it/s]Running 10000 simulations.:  43%|████▎     | 4346/10000 [00:28<00:38, 145.26it/s]Running 10000 simulations.:  44%|████▎     | 4361/10000 [00:28<00:38, 146.09it/s]Running 10000 simulations.:  44%|████▍     | 4376/10000 [00:28<00:38, 146.63it/s]Running 10000 simulations.:  44%|████▍     | 4391/10000 [00:29<00:38, 146.88it/s]Running 10000 simulations.:  44%|████▍     | 4406/10000 [00:29<00:38, 146.89it/s]Running 10000 simulations.:  44%|████▍     | 4421/10000 [00:29<00:38, 146.64it/s]Running 10000 simulations.:  44%|████▍     | 4436/10000 [00:29<00:37, 146.60it/s]Running 10000 simulations.:  45%|████▍     | 4451/10000 [00:29<00:37, 147.02it/s]Running 10000 simulations.:  45%|████▍     | 4466/10000 [00:29<00:37, 147.18it/s]Running 10000 simulations.:  45%|████▍     | 4481/10000 [00:29<00:37, 146.82it/s]Running 10000 simulations.:  45%|████▍     | 4496/10000 [00:29<00:37, 146.71it/s]Running 10000 simulations.:  45%|████▌     | 4511/10000 [00:29<00:37, 146.94it/s]Running 10000 simulations.:  45%|████▌     | 4526/10000 [00:29<00:37, 146.72it/s]Running 10000 simulations.:  45%|████▌     | 4541/10000 [00:30<00:37, 146.39it/s]Running 10000 simulations.:  46%|████▌     | 4556/10000 [00:30<00:37, 146.11it/s]Running 10000 simulations.:  46%|████▌     | 4571/10000 [00:30<00:36, 147.05it/s]Running 10000 simulations.:  46%|████▌     | 4586/10000 [00:30<00:36, 147.00it/s]Running 10000 simulations.:  46%|████▌     | 4601/10000 [00:30<00:36, 147.30it/s]Running 10000 simulations.:  46%|████▌     | 4616/10000 [00:30<00:36, 147.81it/s]Running 10000 simulations.:  46%|████▋     | 4631/10000 [00:30<00:36, 148.04it/s]Running 10000 simulations.:  46%|████▋     | 4646/10000 [00:30<00:36, 147.71it/s]Running 10000 simulations.:  47%|████▋     | 4661/10000 [00:30<00:36, 147.67it/s]Running 10000 simulations.:  47%|████▋     | 4676/10000 [00:31<00:36, 147.80it/s]Running 10000 simulations.:  47%|████▋     | 4691/10000 [00:31<00:35, 148.32it/s]Running 10000 simulations.:  47%|████▋     | 4706/10000 [00:31<00:35, 148.19it/s]Running 10000 simulations.:  47%|████▋     | 4721/10000 [00:31<00:35, 148.37it/s]Running 10000 simulations.:  47%|████▋     | 4736/10000 [00:31<00:35, 148.31it/s]Running 10000 simulations.:  48%|████▊     | 4751/10000 [00:31<00:35, 148.42it/s]Running 10000 simulations.:  48%|████▊     | 4766/10000 [00:31<00:35, 148.62it/s]Running 10000 simulations.:  48%|████▊     | 4781/10000 [00:31<00:35, 147.92it/s]Running 10000 simulations.:  48%|████▊     | 4796/10000 [00:31<00:35, 147.42it/s]Running 10000 simulations.:  48%|████▊     | 4811/10000 [00:31<00:35, 147.42it/s]Running 10000 simulations.:  48%|████▊     | 4826/10000 [00:32<00:34, 147.90it/s]Running 10000 simulations.:  48%|████▊     | 4841/10000 [00:32<00:34, 147.63it/s]Running 10000 simulations.:  49%|████▊     | 4856/10000 [00:32<00:34, 147.38it/s]Running 10000 simulations.:  49%|████▊     | 4871/10000 [00:32<00:34, 147.10it/s]Running 10000 simulations.:  49%|████▉     | 4886/10000 [00:32<00:34, 147.21it/s]Running 10000 simulations.:  49%|████▉     | 4901/10000 [00:32<00:34, 147.62it/s]Running 10000 simulations.:  49%|████▉     | 4916/10000 [00:32<00:34, 148.02it/s]Running 10000 simulations.:  49%|████▉     | 4931/10000 [00:32<00:34, 147.74it/s]Running 10000 simulations.:  49%|████▉     | 4946/10000 [00:32<00:34, 147.20it/s]Running 10000 simulations.:  50%|████▉     | 4961/10000 [00:32<00:34, 147.09it/s]Running 10000 simulations.:  50%|████▉     | 4976/10000 [00:33<00:34, 146.89it/s]Running 10000 simulations.:  50%|████▉     | 4991/10000 [00:33<00:34, 146.77it/s]Running 10000 simulations.:  50%|█████     | 5006/10000 [00:33<00:34, 146.22it/s]Running 10000 simulations.:  50%|█████     | 5022/10000 [00:33<00:33, 147.84it/s]Running 10000 simulations.:  50%|█████     | 5039/10000 [00:33<00:32, 151.31it/s]Running 10000 simulations.:  51%|█████     | 5055/10000 [00:33<00:32, 153.54it/s]Running 10000 simulations.:  51%|█████     | 5071/10000 [00:33<00:31, 155.05it/s]Running 10000 simulations.:  51%|█████     | 5087/10000 [00:33<00:31, 155.63it/s]Running 10000 simulations.:  51%|█████     | 5103/10000 [00:33<00:31, 156.74it/s]Running 10000 simulations.:  51%|█████     | 5119/10000 [00:33<00:31, 157.00it/s]Running 10000 simulations.:  51%|█████▏    | 5135/10000 [00:34<00:31, 156.78it/s]Running 10000 simulations.:  52%|█████▏    | 5151/10000 [00:34<00:30, 156.52it/s]Running 10000 simulations.:  52%|█████▏    | 5167/10000 [00:34<00:31, 155.62it/s]Running 10000 simulations.:  52%|█████▏    | 5183/10000 [00:34<00:31, 154.76it/s]Running 10000 simulations.:  52%|█████▏    | 5199/10000 [00:34<00:31, 153.16it/s]Running 10000 simulations.:  52%|█████▏    | 5215/10000 [00:34<00:34, 139.71it/s]Running 10000 simulations.:  52%|█████▏    | 5230/10000 [00:34<00:36, 131.63it/s]Running 10000 simulations.:  52%|█████▏    | 5244/10000 [00:34<00:37, 126.48it/s]Running 10000 simulations.:  53%|█████▎    | 5257/10000 [00:34<00:38, 123.81it/s]Running 10000 simulations.:  53%|█████▎    | 5270/10000 [00:35<00:38, 121.52it/s]Running 10000 simulations.:  53%|█████▎    | 5283/10000 [00:35<00:39, 120.17it/s]Running 10000 simulations.:  53%|█████▎    | 5296/10000 [00:35<00:39, 118.76it/s]Running 10000 simulations.:  53%|█████▎    | 5308/10000 [00:35<00:39, 118.60it/s]Running 10000 simulations.:  53%|█████▎    | 5320/10000 [00:35<00:39, 118.36it/s]Running 10000 simulations.:  53%|█████▎    | 5332/10000 [00:35<00:39, 118.44it/s]Running 10000 simulations.:  53%|█████▎    | 5344/10000 [00:35<00:39, 118.09it/s]Running 10000 simulations.:  54%|█████▎    | 5356/10000 [00:35<00:39, 117.59it/s]Running 10000 simulations.:  54%|█████▎    | 5368/10000 [00:35<00:39, 117.35it/s]Running 10000 simulations.:  54%|█████▍    | 5380/10000 [00:36<00:39, 117.55it/s]Running 10000 simulations.:  54%|█████▍    | 5392/10000 [00:36<00:39, 117.84it/s]Running 10000 simulations.:  54%|█████▍    | 5404/10000 [00:36<00:39, 117.80it/s]Running 10000 simulations.:  54%|█████▍    | 5416/10000 [00:36<00:38, 117.89it/s]Running 10000 simulations.:  54%|█████▍    | 5428/10000 [00:36<00:38, 117.93it/s]Running 10000 simulations.:  54%|█████▍    | 5440/10000 [00:36<00:38, 118.13it/s]Running 10000 simulations.:  55%|█████▍    | 5452/10000 [00:36<00:38, 118.21it/s]Running 10000 simulations.:  55%|█████▍    | 5464/10000 [00:36<00:38, 117.74it/s]Running 10000 simulations.:  55%|█████▍    | 5476/10000 [00:36<00:38, 117.28it/s]Running 10000 simulations.:  55%|█████▍    | 5488/10000 [00:36<00:38, 116.77it/s]Running 10000 simulations.:  55%|█████▌    | 5500/10000 [00:37<00:38, 116.97it/s]Running 10000 simulations.:  55%|█████▌    | 5512/10000 [00:37<00:38, 116.70it/s]Running 10000 simulations.:  55%|█████▌    | 5525/10000 [00:37<00:37, 118.10it/s]Running 10000 simulations.:  55%|█████▌    | 5538/10000 [00:37<00:37, 120.30it/s]Running 10000 simulations.:  56%|█████▌    | 5551/10000 [00:37<00:36, 121.72it/s]Running 10000 simulations.:  56%|█████▌    | 5564/10000 [00:37<00:36, 122.98it/s]Running 10000 simulations.:  56%|█████▌    | 5577/10000 [00:37<00:35, 123.64it/s]Running 10000 simulations.:  56%|█████▌    | 5590/10000 [00:37<00:35, 124.40it/s]Running 10000 simulations.:  56%|█████▌    | 5603/10000 [00:37<00:35, 125.07it/s]Running 10000 simulations.:  56%|█████▌    | 5616/10000 [00:37<00:35, 125.25it/s]Running 10000 simulations.:  56%|█████▋    | 5629/10000 [00:38<00:34, 125.65it/s]Running 10000 simulations.:  56%|█████▋    | 5642/10000 [00:38<00:34, 125.48it/s]Running 10000 simulations.:  57%|█████▋    | 5655/10000 [00:38<00:34, 125.37it/s]Running 10000 simulations.:  57%|█████▋    | 5668/10000 [00:38<00:34, 125.24it/s]Running 10000 simulations.:  57%|█████▋    | 5681/10000 [00:38<00:34, 125.66it/s]Running 10000 simulations.:  57%|█████▋    | 5694/10000 [00:38<00:34, 125.65it/s]Running 10000 simulations.:  57%|█████▋    | 5707/10000 [00:38<00:34, 125.96it/s]Running 10000 simulations.:  57%|█████▋    | 5720/10000 [00:38<00:33, 126.02it/s]Running 10000 simulations.:  57%|█████▋    | 5733/10000 [00:38<00:33, 126.39it/s]Running 10000 simulations.:  57%|█████▋    | 5746/10000 [00:39<00:33, 126.31it/s]Running 10000 simulations.:  58%|█████▊    | 5759/10000 [00:39<00:33, 126.03it/s]Running 10000 simulations.:  58%|█████▊    | 5772/10000 [00:39<00:33, 125.83it/s]Running 10000 simulations.:  58%|█████▊    | 5785/10000 [00:39<00:33, 125.45it/s]Running 10000 simulations.:  58%|█████▊    | 5798/10000 [00:39<00:33, 125.35it/s]Running 10000 simulations.:  58%|█████▊    | 5811/10000 [00:39<00:33, 125.27it/s]Running 10000 simulations.:  58%|█████▊    | 5824/10000 [00:39<00:33, 124.88it/s]Running 10000 simulations.:  58%|█████▊    | 5837/10000 [00:39<00:33, 124.75it/s]Running 10000 simulations.:  58%|█████▊    | 5850/10000 [00:39<00:33, 124.75it/s]Running 10000 simulations.:  59%|█████▊    | 5863/10000 [00:39<00:33, 124.71it/s]Running 10000 simulations.:  59%|█████▉    | 5876/10000 [00:40<00:33, 124.42it/s]Running 10000 simulations.:  59%|█████▉    | 5889/10000 [00:40<00:33, 124.38it/s]Running 10000 simulations.:  59%|█████▉    | 5902/10000 [00:40<00:33, 123.73it/s]Running 10000 simulations.:  59%|█████▉    | 5915/10000 [00:40<00:33, 123.55it/s]Running 10000 simulations.:  59%|█████▉    | 5928/10000 [00:40<00:32, 123.65it/s]Running 10000 simulations.:  59%|█████▉    | 5941/10000 [00:40<00:32, 123.83it/s]Running 10000 simulations.:  60%|█████▉    | 5954/10000 [00:40<00:32, 123.37it/s]Running 10000 simulations.:  60%|█████▉    | 5967/10000 [00:40<00:32, 123.86it/s]Running 10000 simulations.:  60%|█████▉    | 5980/10000 [00:40<00:32, 124.24it/s]Running 10000 simulations.:  60%|█████▉    | 5993/10000 [00:40<00:31, 125.24it/s]Running 10000 simulations.:  60%|██████    | 6008/10000 [00:41<00:30, 130.69it/s]Running 10000 simulations.:  60%|██████    | 6023/10000 [00:41<00:29, 133.72it/s]Running 10000 simulations.:  60%|██████    | 6037/10000 [00:41<00:29, 133.61it/s]Running 10000 simulations.:  61%|██████    | 6051/10000 [00:41<00:29, 133.45it/s]Running 10000 simulations.:  61%|██████    | 6065/10000 [00:41<00:29, 133.89it/s]Running 10000 simulations.:  61%|██████    | 6079/10000 [00:41<00:29, 134.06it/s]Running 10000 simulations.:  61%|██████    | 6093/10000 [00:41<00:29, 134.28it/s]Running 10000 simulations.:  61%|██████    | 6107/10000 [00:41<00:28, 135.37it/s]Running 10000 simulations.:  61%|██████    | 6121/10000 [00:41<00:28, 135.89it/s]Running 10000 simulations.:  61%|██████▏   | 6135/10000 [00:42<00:28, 134.92it/s]Running 10000 simulations.:  61%|██████▏   | 6149/10000 [00:42<00:29, 131.61it/s]Running 10000 simulations.:  62%|██████▏   | 6163/10000 [00:42<00:29, 129.29it/s]Running 10000 simulations.:  62%|██████▏   | 6176/10000 [00:42<00:29, 127.67it/s]Running 10000 simulations.:  62%|██████▏   | 6189/10000 [00:42<00:30, 126.52it/s]Running 10000 simulations.:  62%|██████▏   | 6202/10000 [00:42<00:30, 125.55it/s]Running 10000 simulations.:  62%|██████▏   | 6215/10000 [00:42<00:30, 125.53it/s]Running 10000 simulations.:  62%|██████▏   | 6228/10000 [00:42<00:30, 125.63it/s]Running 10000 simulations.:  62%|██████▏   | 6241/10000 [00:42<00:29, 125.69it/s]Running 10000 simulations.:  63%|██████▎   | 6254/10000 [00:42<00:29, 125.15it/s]Running 10000 simulations.:  63%|██████▎   | 6267/10000 [00:43<00:29, 124.69it/s]Running 10000 simulations.:  63%|██████▎   | 6280/10000 [00:43<00:29, 124.75it/s]Running 10000 simulations.:  63%|██████▎   | 6293/10000 [00:43<00:29, 124.58it/s]Running 10000 simulations.:  63%|██████▎   | 6306/10000 [00:43<00:29, 124.68it/s]Running 10000 simulations.:  63%|██████▎   | 6319/10000 [00:43<00:29, 124.33it/s]Running 10000 simulations.:  63%|██████▎   | 6332/10000 [00:43<00:29, 124.54it/s]Running 10000 simulations.:  63%|██████▎   | 6345/10000 [00:43<00:29, 124.96it/s]Running 10000 simulations.:  64%|██████▎   | 6358/10000 [00:43<00:29, 125.17it/s]Running 10000 simulations.:  64%|██████▎   | 6371/10000 [00:43<00:28, 125.40it/s]Running 10000 simulations.:  64%|██████▍   | 6384/10000 [00:44<00:28, 125.21it/s]Running 10000 simulations.:  64%|██████▍   | 6397/10000 [00:44<00:28, 125.60it/s]Running 10000 simulations.:  64%|██████▍   | 6410/10000 [00:44<00:28, 125.51it/s]Running 10000 simulations.:  64%|██████▍   | 6423/10000 [00:44<00:28, 125.36it/s]Running 10000 simulations.:  64%|██████▍   | 6436/10000 [00:44<00:28, 125.31it/s]Running 10000 simulations.:  64%|██████▍   | 6449/10000 [00:44<00:28, 125.57it/s]Running 10000 simulations.:  65%|██████▍   | 6462/10000 [00:44<00:28, 125.62it/s]Running 10000 simulations.:  65%|██████▍   | 6475/10000 [00:44<00:28, 125.54it/s]Running 10000 simulations.:  65%|██████▍   | 6488/10000 [00:44<00:28, 125.23it/s]Running 10000 simulations.:  65%|██████▌   | 6501/10000 [00:44<00:27, 125.24it/s]Running 10000 simulations.:  65%|██████▌   | 6514/10000 [00:45<00:27, 125.24it/s]Running 10000 simulations.:  65%|██████▌   | 6527/10000 [00:45<00:27, 125.25it/s]Running 10000 simulations.:  65%|██████▌   | 6540/10000 [00:45<00:27, 125.06it/s]Running 10000 simulations.:  66%|██████▌   | 6553/10000 [00:45<00:27, 125.02it/s]Running 10000 simulations.:  66%|██████▌   | 6566/10000 [00:45<00:27, 125.18it/s]Running 10000 simulations.:  66%|██████▌   | 6579/10000 [00:45<00:27, 125.27it/s]Running 10000 simulations.:  66%|██████▌   | 6592/10000 [00:45<00:27, 125.54it/s]Running 10000 simulations.:  66%|██████▌   | 6605/10000 [00:45<00:27, 125.40it/s]Running 10000 simulations.:  66%|██████▌   | 6618/10000 [00:45<00:26, 125.70it/s]Running 10000 simulations.:  66%|██████▋   | 6631/10000 [00:46<00:26, 125.73it/s]Running 10000 simulations.:  66%|██████▋   | 6644/10000 [00:46<00:26, 125.69it/s]Running 10000 simulations.:  67%|██████▋   | 6657/10000 [00:46<00:26, 126.19it/s]Running 10000 simulations.:  67%|██████▋   | 6670/10000 [00:46<00:26, 125.89it/s]Running 10000 simulations.:  67%|██████▋   | 6683/10000 [00:46<00:26, 126.12it/s]Running 10000 simulations.:  67%|██████▋   | 6696/10000 [00:46<00:26, 125.82it/s]Running 10000 simulations.:  67%|██████▋   | 6709/10000 [00:46<00:26, 125.84it/s]Running 10000 simulations.:  67%|██████▋   | 6722/10000 [00:46<00:26, 125.66it/s]Running 10000 simulations.:  67%|██████▋   | 6735/10000 [00:46<00:26, 125.41it/s]Running 10000 simulations.:  67%|██████▋   | 6748/10000 [00:46<00:25, 125.71it/s]Running 10000 simulations.:  68%|██████▊   | 6761/10000 [00:47<00:25, 125.92it/s]Running 10000 simulations.:  68%|██████▊   | 6774/10000 [00:47<00:25, 125.80it/s]Running 10000 simulations.:  68%|██████▊   | 6787/10000 [00:47<00:25, 125.54it/s]Running 10000 simulations.:  68%|██████▊   | 6800/10000 [00:47<00:25, 125.51it/s]Running 10000 simulations.:  68%|██████▊   | 6813/10000 [00:47<00:25, 125.60it/s]Running 10000 simulations.:  68%|██████▊   | 6826/10000 [00:47<00:25, 125.50it/s]Running 10000 simulations.:  68%|██████▊   | 6839/10000 [00:47<00:25, 125.48it/s]Running 10000 simulations.:  69%|██████▊   | 6852/10000 [00:47<00:25, 125.54it/s]Running 10000 simulations.:  69%|██████▊   | 6865/10000 [00:47<00:24, 125.57it/s]Running 10000 simulations.:  69%|██████▉   | 6878/10000 [00:47<00:24, 125.52it/s]Running 10000 simulations.:  69%|██████▉   | 6891/10000 [00:48<00:24, 125.41it/s]Running 10000 simulations.:  69%|██████▉   | 6904/10000 [00:48<00:24, 125.46it/s]Running 10000 simulations.:  69%|██████▉   | 6917/10000 [00:48<00:24, 125.41it/s]Running 10000 simulations.:  69%|██████▉   | 6930/10000 [00:48<00:24, 125.28it/s]Running 10000 simulations.:  69%|██████▉   | 6943/10000 [00:48<00:24, 125.24it/s]Running 10000 simulations.:  70%|██████▉   | 6956/10000 [00:48<00:24, 124.99it/s]Running 10000 simulations.:  70%|██████▉   | 6969/10000 [00:48<00:24, 125.08it/s]Running 10000 simulations.:  70%|██████▉   | 6982/10000 [00:48<00:24, 124.97it/s]Running 10000 simulations.:  70%|██████▉   | 6995/10000 [00:48<00:24, 124.93it/s]Running 10000 simulations.:  70%|███████   | 7008/10000 [00:49<00:23, 125.13it/s]Running 10000 simulations.:  70%|███████   | 7021/10000 [00:49<00:23, 125.03it/s]Running 10000 simulations.:  70%|███████   | 7034/10000 [00:49<00:23, 125.22it/s]Running 10000 simulations.:  70%|███████   | 7047/10000 [00:49<00:23, 125.03it/s]Running 10000 simulations.:  71%|███████   | 7060/10000 [00:49<00:23, 124.59it/s]Running 10000 simulations.:  71%|███████   | 7073/10000 [00:49<00:23, 125.15it/s]Running 10000 simulations.:  71%|███████   | 7086/10000 [00:49<00:23, 125.28it/s]Running 10000 simulations.:  71%|███████   | 7099/10000 [00:49<00:23, 125.56it/s]Running 10000 simulations.:  71%|███████   | 7112/10000 [00:49<00:23, 125.49it/s]Running 10000 simulations.:  71%|███████▏  | 7125/10000 [00:49<00:22, 125.60it/s]Running 10000 simulations.:  71%|███████▏  | 7140/10000 [00:50<00:22, 129.85it/s]Running 10000 simulations.:  72%|███████▏  | 7156/10000 [00:50<00:20, 135.75it/s]Running 10000 simulations.:  72%|███████▏  | 7172/10000 [00:50<00:20, 139.98it/s]Running 10000 simulations.:  72%|███████▏  | 7189/10000 [00:50<00:19, 145.73it/s]Running 10000 simulations.:  72%|███████▏  | 7205/10000 [00:50<00:18, 148.45it/s]Running 10000 simulations.:  72%|███████▏  | 7221/10000 [00:50<00:18, 149.31it/s]Running 10000 simulations.:  72%|███████▏  | 7237/10000 [00:50<00:19, 145.24it/s]Running 10000 simulations.:  73%|███████▎  | 7253/10000 [00:50<00:18, 147.17it/s]Running 10000 simulations.:  73%|███████▎  | 7269/10000 [00:50<00:18, 148.73it/s]Running 10000 simulations.:  73%|███████▎  | 7284/10000 [00:51<00:18, 148.69it/s]Running 10000 simulations.:  73%|███████▎  | 7299/10000 [00:51<00:18, 145.54it/s]Running 10000 simulations.:  73%|███████▎  | 7314/10000 [00:51<00:18, 146.05it/s]Running 10000 simulations.:  73%|███████▎  | 7330/10000 [00:51<00:18, 147.09it/s]Running 10000 simulations.:  73%|███████▎  | 7345/10000 [00:51<00:18, 144.84it/s]Running 10000 simulations.:  74%|███████▎  | 7360/10000 [00:51<00:18, 143.22it/s]Running 10000 simulations.:  74%|███████▍  | 7375/10000 [00:51<00:18, 142.35it/s]Running 10000 simulations.:  74%|███████▍  | 7390/10000 [00:51<00:18, 144.04it/s]Running 10000 simulations.:  74%|███████▍  | 7406/10000 [00:51<00:17, 146.65it/s]Running 10000 simulations.:  74%|███████▍  | 7421/10000 [00:51<00:17, 144.42it/s]Running 10000 simulations.:  74%|███████▍  | 7436/10000 [00:52<00:17, 143.04it/s]Running 10000 simulations.:  75%|███████▍  | 7451/10000 [00:52<00:17, 143.56it/s]Running 10000 simulations.:  75%|███████▍  | 7466/10000 [00:52<00:17, 143.42it/s]Running 10000 simulations.:  75%|███████▍  | 7481/10000 [00:52<00:17, 142.59it/s]Running 10000 simulations.:  75%|███████▍  | 7496/10000 [00:52<00:17, 141.84it/s]Running 10000 simulations.:  75%|███████▌  | 7511/10000 [00:52<00:17, 142.59it/s]Running 10000 simulations.:  75%|███████▌  | 7526/10000 [00:52<00:17, 143.16it/s]Running 10000 simulations.:  75%|███████▌  | 7541/10000 [00:52<00:17, 144.00it/s]Running 10000 simulations.:  76%|███████▌  | 7556/10000 [00:52<00:17, 142.59it/s]Running 10000 simulations.:  76%|███████▌  | 7571/10000 [00:53<00:16, 143.19it/s]Running 10000 simulations.:  76%|███████▌  | 7586/10000 [00:53<00:16, 143.38it/s]Running 10000 simulations.:  76%|███████▌  | 7601/10000 [00:53<00:16, 143.92it/s]Running 10000 simulations.:  76%|███████▌  | 7616/10000 [00:53<00:17, 134.49it/s]Running 10000 simulations.:  76%|███████▋  | 7630/10000 [00:53<00:18, 128.94it/s]Running 10000 simulations.:  76%|███████▋  | 7644/10000 [00:53<00:18, 125.53it/s]Running 10000 simulations.:  77%|███████▋  | 7657/10000 [00:53<00:18, 123.40it/s]Running 10000 simulations.:  77%|███████▋  | 7670/10000 [00:53<00:19, 121.61it/s]Running 10000 simulations.:  77%|███████▋  | 7683/10000 [00:53<00:19, 118.55it/s]Running 10000 simulations.:  77%|███████▋  | 7695/10000 [00:54<00:19, 118.70it/s]Running 10000 simulations.:  77%|███████▋  | 7707/10000 [00:54<00:19, 118.42it/s]Running 10000 simulations.:  77%|███████▋  | 7719/10000 [00:54<00:19, 117.98it/s]Running 10000 simulations.:  77%|███████▋  | 7731/10000 [00:54<00:19, 115.44it/s]Running 10000 simulations.:  77%|███████▋  | 7743/10000 [00:54<00:19, 115.15it/s]Running 10000 simulations.:  78%|███████▊  | 7755/10000 [00:54<00:19, 115.22it/s]Running 10000 simulations.:  78%|███████▊  | 7767/10000 [00:54<00:19, 114.76it/s]Running 10000 simulations.:  78%|███████▊  | 7779/10000 [00:54<00:19, 114.16it/s]Running 10000 simulations.:  78%|███████▊  | 7791/10000 [00:54<00:19, 112.93it/s]Running 10000 simulations.:  78%|███████▊  | 7803/10000 [00:54<00:19, 112.67it/s]Running 10000 simulations.:  78%|███████▊  | 7815/10000 [00:55<00:19, 113.56it/s]Running 10000 simulations.:  78%|███████▊  | 7827/10000 [00:55<00:18, 114.94it/s]Running 10000 simulations.:  78%|███████▊  | 7842/10000 [00:55<00:17, 121.51it/s]Running 10000 simulations.:  79%|███████▊  | 7856/10000 [00:55<00:16, 126.47it/s]Running 10000 simulations.:  79%|███████▊  | 7871/10000 [00:55<00:16, 131.63it/s]Running 10000 simulations.:  79%|███████▉  | 7885/10000 [00:55<00:15, 133.40it/s]Running 10000 simulations.:  79%|███████▉  | 7899/10000 [00:55<00:15, 134.70it/s]Running 10000 simulations.:  79%|███████▉  | 7914/10000 [00:55<00:15, 136.40it/s]Running 10000 simulations.:  79%|███████▉  | 7929/10000 [00:55<00:15, 138.01it/s]Running 10000 simulations.:  79%|███████▉  | 7945/10000 [00:55<00:14, 142.28it/s]Running 10000 simulations.:  80%|███████▉  | 7960/10000 [00:56<00:14, 140.42it/s]Running 10000 simulations.:  80%|███████▉  | 7975/10000 [00:56<00:15, 130.03it/s]Running 10000 simulations.:  80%|███████▉  | 7989/10000 [00:56<00:16, 121.78it/s]Running 10000 simulations.:  80%|████████  | 8002/10000 [00:56<00:17, 116.51it/s]Running 10000 simulations.:  80%|████████  | 8014/10000 [00:56<00:17, 116.10it/s]Running 10000 simulations.:  80%|████████  | 8026/10000 [00:56<00:17, 115.94it/s]Running 10000 simulations.:  80%|████████  | 8038/10000 [00:56<00:16, 115.47it/s]Running 10000 simulations.:  80%|████████  | 8050/10000 [00:56<00:17, 113.28it/s]Running 10000 simulations.:  81%|████████  | 8062/10000 [00:57<00:16, 114.05it/s]Running 10000 simulations.:  81%|████████  | 8074/10000 [00:57<00:16, 114.32it/s]Running 10000 simulations.:  81%|████████  | 8086/10000 [00:57<00:16, 115.04it/s]Running 10000 simulations.:  81%|████████  | 8098/10000 [00:57<00:16, 113.84it/s]Running 10000 simulations.:  81%|████████  | 8110/10000 [00:57<00:16, 113.94it/s]Running 10000 simulations.:  81%|████████  | 8122/10000 [00:57<00:16, 114.18it/s]Running 10000 simulations.:  81%|████████▏ | 8134/10000 [00:57<00:16, 113.10it/s]Running 10000 simulations.:  81%|████████▏ | 8146/10000 [00:57<00:16, 112.75it/s]Running 10000 simulations.:  82%|████████▏ | 8158/10000 [00:57<00:16, 110.32it/s]Running 10000 simulations.:  82%|████████▏ | 8170/10000 [00:57<00:16, 110.46it/s]Running 10000 simulations.:  82%|████████▏ | 8182/10000 [00:58<00:16, 110.57it/s]Running 10000 simulations.:  82%|████████▏ | 8194/10000 [00:58<00:16, 110.22it/s]Running 10000 simulations.:  82%|████████▏ | 8206/10000 [00:58<00:17, 103.37it/s]Running 10000 simulations.:  82%|████████▏ | 8218/10000 [00:58<00:16, 106.91it/s]Running 10000 simulations.:  82%|████████▏ | 8234/10000 [00:58<00:14, 118.11it/s]Running 10000 simulations.:  82%|████████▎ | 8250/10000 [00:58<00:13, 126.98it/s]Running 10000 simulations.:  83%|████████▎ | 8266/10000 [00:58<00:12, 133.86it/s]Running 10000 simulations.:  83%|████████▎ | 8282/10000 [00:58<00:12, 139.07it/s]Running 10000 simulations.:  83%|████████▎ | 8298/10000 [00:58<00:11, 143.01it/s]Running 10000 simulations.:  83%|████████▎ | 8314/10000 [00:59<00:11, 145.90it/s]Running 10000 simulations.:  83%|████████▎ | 8330/10000 [00:59<00:11, 148.16it/s]Running 10000 simulations.:  83%|████████▎ | 8346/10000 [00:59<00:11, 149.62it/s]Running 10000 simulations.:  84%|████████▎ | 8362/10000 [00:59<00:10, 150.64it/s]Running 10000 simulations.:  84%|████████▍ | 8378/10000 [00:59<00:10, 151.32it/s]Running 10000 simulations.:  84%|████████▍ | 8394/10000 [00:59<00:10, 152.02it/s]Running 10000 simulations.:  84%|████████▍ | 8410/10000 [00:59<00:10, 152.81it/s]Running 10000 simulations.:  84%|████████▍ | 8426/10000 [00:59<00:10, 152.98it/s]Running 10000 simulations.:  84%|████████▍ | 8442/10000 [00:59<00:10, 153.79it/s]Running 10000 simulations.:  85%|████████▍ | 8458/10000 [01:00<00:10, 153.92it/s]Running 10000 simulations.:  85%|████████▍ | 8474/10000 [01:00<00:09, 154.28it/s]Running 10000 simulations.:  85%|████████▍ | 8490/10000 [01:00<00:09, 154.50it/s]Running 10000 simulations.:  85%|████████▌ | 8506/10000 [01:00<00:09, 154.06it/s]Running 10000 simulations.:  85%|████████▌ | 8522/10000 [01:00<00:09, 154.22it/s]Running 10000 simulations.:  85%|████████▌ | 8538/10000 [01:00<00:09, 154.48it/s]Running 10000 simulations.:  86%|████████▌ | 8554/10000 [01:00<00:09, 154.15it/s]Running 10000 simulations.:  86%|████████▌ | 8570/10000 [01:00<00:09, 154.31it/s]Running 10000 simulations.:  86%|████████▌ | 8586/10000 [01:00<00:09, 154.24it/s]Running 10000 simulations.:  86%|████████▌ | 8602/10000 [01:00<00:09, 153.79it/s]Running 10000 simulations.:  86%|████████▌ | 8618/10000 [01:01<00:08, 153.59it/s]Running 10000 simulations.:  86%|████████▋ | 8634/10000 [01:01<00:08, 154.12it/s]Running 10000 simulations.:  86%|████████▋ | 8650/10000 [01:01<00:08, 153.85it/s]Running 10000 simulations.:  87%|████████▋ | 8666/10000 [01:01<00:08, 153.71it/s]Running 10000 simulations.:  87%|████████▋ | 8682/10000 [01:01<00:08, 153.69it/s]Running 10000 simulations.:  87%|████████▋ | 8698/10000 [01:01<00:08, 153.51it/s]Running 10000 simulations.:  87%|████████▋ | 8714/10000 [01:01<00:08, 153.21it/s]Running 10000 simulations.:  87%|████████▋ | 8730/10000 [01:01<00:08, 153.76it/s]Running 10000 simulations.:  87%|████████▋ | 8746/10000 [01:01<00:08, 154.49it/s]Running 10000 simulations.:  88%|████████▊ | 8762/10000 [01:01<00:08, 154.40it/s]Running 10000 simulations.:  88%|████████▊ | 8778/10000 [01:02<00:07, 154.55it/s]Running 10000 simulations.:  88%|████████▊ | 8794/10000 [01:02<00:07, 154.61it/s]Running 10000 simulations.:  88%|████████▊ | 8810/10000 [01:02<00:07, 154.71it/s]Running 10000 simulations.:  88%|████████▊ | 8826/10000 [01:02<00:07, 154.87it/s]Running 10000 simulations.:  88%|████████▊ | 8842/10000 [01:02<00:07, 154.98it/s]Running 10000 simulations.:  89%|████████▊ | 8858/10000 [01:02<00:07, 154.91it/s]Running 10000 simulations.:  89%|████████▊ | 8874/10000 [01:02<00:07, 155.63it/s]Running 10000 simulations.:  89%|████████▉ | 8890/10000 [01:02<00:07, 156.31it/s]Running 10000 simulations.:  89%|████████▉ | 8906/10000 [01:02<00:07, 156.01it/s]Running 10000 simulations.:  89%|████████▉ | 8922/10000 [01:03<00:06, 155.73it/s]Running 10000 simulations.:  89%|████████▉ | 8938/10000 [01:03<00:06, 156.20it/s]Running 10000 simulations.:  90%|████████▉ | 8954/10000 [01:03<00:06, 156.54it/s]Running 10000 simulations.:  90%|████████▉ | 8970/10000 [01:03<00:06, 156.16it/s]Running 10000 simulations.:  90%|████████▉ | 8986/10000 [01:03<00:06, 155.72it/s]Running 10000 simulations.:  90%|█████████ | 9002/10000 [01:03<00:06, 155.45it/s]Running 10000 simulations.:  90%|█████████ | 9018/10000 [01:03<00:06, 155.14it/s]Running 10000 simulations.:  90%|█████████ | 9034/10000 [01:03<00:06, 155.06it/s]Running 10000 simulations.:  90%|█████████ | 9050/10000 [01:03<00:06, 154.84it/s]Running 10000 simulations.:  91%|█████████ | 9066/10000 [01:03<00:06, 154.77it/s]Running 10000 simulations.:  91%|█████████ | 9082/10000 [01:04<00:05, 154.69it/s]Running 10000 simulations.:  91%|█████████ | 9098/10000 [01:04<00:05, 154.73it/s]Running 10000 simulations.:  91%|█████████ | 9114/10000 [01:04<00:05, 154.87it/s]Running 10000 simulations.:  91%|█████████▏| 9130/10000 [01:04<00:05, 155.14it/s]Running 10000 simulations.:  91%|█████████▏| 9146/10000 [01:04<00:05, 155.02it/s]Running 10000 simulations.:  92%|█████████▏| 9162/10000 [01:04<00:05, 155.02it/s]Running 10000 simulations.:  92%|█████████▏| 9178/10000 [01:04<00:05, 154.84it/s]Running 10000 simulations.:  92%|█████████▏| 9194/10000 [01:04<00:05, 155.29it/s]Running 10000 simulations.:  92%|█████████▏| 9210/10000 [01:04<00:05, 155.55it/s]Running 10000 simulations.:  92%|█████████▏| 9226/10000 [01:04<00:04, 155.29it/s]Running 10000 simulations.:  92%|█████████▏| 9242/10000 [01:05<00:04, 155.09it/s]Running 10000 simulations.:  93%|█████████▎| 9258/10000 [01:05<00:04, 155.27it/s]Running 10000 simulations.:  93%|█████████▎| 9274/10000 [01:05<00:04, 155.30it/s]Running 10000 simulations.:  93%|█████████▎| 9290/10000 [01:05<00:04, 155.10it/s]Running 10000 simulations.:  93%|█████████▎| 9306/10000 [01:05<00:04, 155.64it/s]Running 10000 simulations.:  93%|█████████▎| 9322/10000 [01:05<00:04, 156.08it/s]Running 10000 simulations.:  93%|█████████▎| 9338/10000 [01:05<00:04, 156.10it/s]Running 10000 simulations.:  94%|█████████▎| 9354/10000 [01:05<00:04, 155.90it/s]Running 10000 simulations.:  94%|█████████▎| 9370/10000 [01:05<00:04, 156.12it/s]Running 10000 simulations.:  94%|█████████▍| 9386/10000 [01:05<00:03, 156.34it/s]Running 10000 simulations.:  94%|█████████▍| 9402/10000 [01:06<00:03, 156.19it/s]Running 10000 simulations.:  94%|█████████▍| 9418/10000 [01:06<00:03, 151.20it/s]Running 10000 simulations.:  94%|█████████▍| 9434/10000 [01:06<00:03, 149.13it/s]Running 10000 simulations.:  94%|█████████▍| 9449/10000 [01:06<00:03, 148.94it/s]Running 10000 simulations.:  95%|█████████▍| 9464/10000 [01:06<00:03, 146.09it/s]Running 10000 simulations.:  95%|█████████▍| 9479/10000 [01:06<00:03, 144.09it/s]Running 10000 simulations.:  95%|█████████▍| 9494/10000 [01:06<00:03, 142.13it/s]Running 10000 simulations.:  95%|█████████▌| 9509/10000 [01:06<00:03, 143.23it/s]Running 10000 simulations.:  95%|█████████▌| 9525/10000 [01:06<00:03, 146.28it/s]Running 10000 simulations.:  95%|█████████▌| 9540/10000 [01:07<00:03, 140.31it/s]Running 10000 simulations.:  96%|█████████▌| 9555/10000 [01:07<00:03, 131.46it/s]Running 10000 simulations.:  96%|█████████▌| 9569/10000 [01:07<00:03, 123.76it/s]Running 10000 simulations.:  96%|█████████▌| 9582/10000 [01:07<00:03, 122.63it/s]Running 10000 simulations.:  96%|█████████▌| 9597/10000 [01:07<00:03, 128.74it/s]Running 10000 simulations.:  96%|█████████▌| 9612/10000 [01:07<00:02, 133.36it/s]Running 10000 simulations.:  96%|█████████▋| 9627/10000 [01:07<00:02, 136.83it/s]Running 10000 simulations.:  96%|█████████▋| 9641/10000 [01:07<00:02, 137.62it/s]Running 10000 simulations.:  97%|█████████▋| 9656/10000 [01:07<00:02, 139.59it/s]Running 10000 simulations.:  97%|█████████▋| 9671/10000 [01:08<00:02, 139.47it/s]Running 10000 simulations.:  97%|█████████▋| 9686/10000 [01:08<00:02, 141.55it/s]Running 10000 simulations.:  97%|█████████▋| 9701/10000 [01:08<00:02, 141.58it/s]Running 10000 simulations.:  97%|█████████▋| 9716/10000 [01:08<00:02, 141.00it/s]Running 10000 simulations.:  97%|█████████▋| 9731/10000 [01:08<00:01, 140.92it/s]Running 10000 simulations.:  97%|█████████▋| 9746/10000 [01:08<00:01, 142.07it/s]Running 10000 simulations.:  98%|█████████▊| 9761/10000 [01:08<00:01, 142.66it/s]Running 10000 simulations.:  98%|█████████▊| 9776/10000 [01:08<00:01, 143.45it/s]Running 10000 simulations.:  98%|█████████▊| 9791/10000 [01:08<00:01, 141.96it/s]Running 10000 simulations.:  98%|█████████▊| 9806/10000 [01:09<00:01, 134.75it/s]Running 10000 simulations.:  98%|█████████▊| 9820/10000 [01:09<00:01, 129.21it/s]Running 10000 simulations.:  98%|█████████▊| 9834/10000 [01:09<00:01, 124.80it/s]Running 10000 simulations.:  98%|█████████▊| 9847/10000 [01:09<00:01, 120.66it/s]Running 10000 simulations.:  99%|█████████▊| 9860/10000 [01:09<00:01, 119.14it/s]Running 10000 simulations.:  99%|█████████▊| 9872/10000 [01:09<00:01, 117.41it/s]Running 10000 simulations.:  99%|█████████▉| 9884/10000 [01:09<00:00, 116.30it/s]Running 10000 simulations.:  99%|█████████▉| 9896/10000 [01:09<00:00, 115.68it/s]Running 10000 simulations.:  99%|█████████▉| 9908/10000 [01:09<00:00, 113.53it/s]Running 10000 simulations.:  99%|█████████▉| 9920/10000 [01:10<00:00, 113.61it/s]Running 10000 simulations.:  99%|█████████▉| 9932/10000 [01:10<00:00, 112.09it/s]Running 10000 simulations.:  99%|█████████▉| 9944/10000 [01:10<00:00, 113.86it/s]Running 10000 simulations.: 100%|█████████▉| 9956/10000 [01:10<00:00, 114.47it/s]Running 10000 simulations.: 100%|█████████▉| 9968/10000 [01:10<00:00, 111.76it/s]Running 10000 simulations.: 100%|█████████▉| 9980/10000 [01:10<00:00, 109.08it/s]Running 10000 simulations.: 100%|█████████▉| 9991/10000 [01:10<00:00, 106.86it/s]Running 10000 simulations.: 100%|██████████| 10000/10000 [01:10<00:00, 141.32it/s]
Running 10000 simulations.:   0%|          | 0/10000 [00:00<?, ?it/s]Running 10000 simulations.:   0%|          | 16/10000 [00:00<01:03, 156.78it/s]Running 10000 simulations.:   0%|          | 32/10000 [00:00<01:03, 156.22it/s]Running 10000 simulations.:   0%|          | 48/10000 [00:00<01:03, 155.56it/s]Running 10000 simulations.:   1%|          | 64/10000 [00:00<01:04, 154.98it/s]Running 10000 simulations.:   1%|          | 80/10000 [00:00<01:04, 154.90it/s]Running 10000 simulations.:   1%|          | 96/10000 [00:00<01:03, 154.96it/s]Running 10000 simulations.:   1%|          | 112/10000 [00:00<01:03, 154.80it/s]Running 10000 simulations.:   1%|▏         | 128/10000 [00:00<01:03, 154.65it/s]Running 10000 simulations.:   1%|▏         | 144/10000 [00:00<01:04, 153.79it/s]Running 10000 simulations.:   2%|▏         | 160/10000 [00:01<01:04, 153.73it/s]Running 10000 simulations.:   2%|▏         | 176/10000 [00:01<01:04, 153.14it/s]Running 10000 simulations.:   2%|▏         | 192/10000 [00:01<01:03, 153.32it/s]Running 10000 simulations.:   2%|▏         | 208/10000 [00:01<01:03, 153.39it/s]Running 10000 simulations.:   2%|▏         | 224/10000 [00:01<01:03, 153.55it/s]Running 10000 simulations.:   2%|▏         | 240/10000 [00:01<01:03, 153.55it/s]Running 10000 simulations.:   3%|▎         | 256/10000 [00:01<01:03, 153.58it/s]Running 10000 simulations.:   3%|▎         | 272/10000 [00:01<01:03, 153.12it/s]Running 10000 simulations.:   3%|▎         | 288/10000 [00:01<01:03, 152.97it/s]Running 10000 simulations.:   3%|▎         | 304/10000 [00:01<01:03, 153.47it/s]Running 10000 simulations.:   3%|▎         | 320/10000 [00:02<01:03, 153.39it/s]Running 10000 simulations.:   3%|▎         | 336/10000 [00:02<01:02, 153.74it/s]Running 10000 simulations.:   4%|▎         | 352/10000 [00:02<01:03, 153.11it/s]Running 10000 simulations.:   4%|▎         | 368/10000 [00:02<01:02, 153.07it/s]Running 10000 simulations.:   4%|▍         | 384/10000 [00:02<01:02, 152.66it/s]Running 10000 simulations.:   4%|▍         | 400/10000 [00:02<01:02, 152.97it/s]Running 10000 simulations.:   4%|▍         | 416/10000 [00:02<01:02, 152.64it/s]Running 10000 simulations.:   4%|▍         | 432/10000 [00:02<01:02, 152.99it/s]Running 10000 simulations.:   4%|▍         | 448/10000 [00:02<01:02, 152.41it/s]Running 10000 simulations.:   5%|▍         | 464/10000 [00:03<01:02, 152.24it/s]Running 10000 simulations.:   5%|▍         | 480/10000 [00:03<01:02, 152.19it/s]Running 10000 simulations.:   5%|▍         | 496/10000 [00:03<01:02, 152.37it/s]Running 10000 simulations.:   5%|▌         | 512/10000 [00:03<01:02, 152.40it/s]Running 10000 simulations.:   5%|▌         | 528/10000 [00:03<01:02, 152.22it/s]Running 10000 simulations.:   5%|▌         | 544/10000 [00:03<01:02, 152.16it/s]Running 10000 simulations.:   6%|▌         | 560/10000 [00:03<01:02, 151.69it/s]Running 10000 simulations.:   6%|▌         | 576/10000 [00:03<01:02, 151.34it/s]Running 10000 simulations.:   6%|▌         | 592/10000 [00:03<01:02, 150.83it/s]Running 10000 simulations.:   6%|▌         | 608/10000 [00:03<01:02, 150.72it/s]Running 10000 simulations.:   6%|▌         | 624/10000 [00:04<01:02, 151.02it/s]Running 10000 simulations.:   6%|▋         | 640/10000 [00:04<01:01, 150.98it/s]Running 10000 simulations.:   7%|▋         | 656/10000 [00:04<01:01, 151.24it/s]Running 10000 simulations.:   7%|▋         | 672/10000 [00:04<01:01, 151.43it/s]Running 10000 simulations.:   7%|▋         | 688/10000 [00:04<01:01, 151.38it/s]Running 10000 simulations.:   7%|▋         | 704/10000 [00:04<01:01, 151.16it/s]Running 10000 simulations.:   7%|▋         | 720/10000 [00:04<01:01, 151.17it/s]Running 10000 simulations.:   7%|▋         | 736/10000 [00:04<01:01, 151.37it/s]Running 10000 simulations.:   8%|▊         | 752/10000 [00:04<01:00, 151.69it/s]Running 10000 simulations.:   8%|▊         | 768/10000 [00:05<01:00, 151.82it/s]Running 10000 simulations.:   8%|▊         | 784/10000 [00:05<01:00, 151.81it/s]Running 10000 simulations.:   8%|▊         | 800/10000 [00:05<01:00, 151.78it/s]Running 10000 simulations.:   8%|▊         | 816/10000 [00:05<01:00, 152.19it/s]Running 10000 simulations.:   8%|▊         | 832/10000 [00:05<01:00, 152.23it/s]Running 10000 simulations.:   8%|▊         | 848/10000 [00:05<01:00, 152.21it/s]Running 10000 simulations.:   9%|▊         | 864/10000 [00:05<01:00, 152.06it/s]Running 10000 simulations.:   9%|▉         | 880/10000 [00:05<00:59, 152.13it/s]Running 10000 simulations.:   9%|▉         | 896/10000 [00:05<00:59, 152.01it/s]Running 10000 simulations.:   9%|▉         | 912/10000 [00:05<00:59, 151.88it/s]Running 10000 simulations.:   9%|▉         | 928/10000 [00:06<00:59, 151.55it/s]Running 10000 simulations.:   9%|▉         | 944/10000 [00:06<00:59, 151.80it/s]Running 10000 simulations.:  10%|▉         | 960/10000 [00:06<00:59, 151.16it/s]Running 10000 simulations.:  10%|▉         | 976/10000 [00:06<00:59, 151.08it/s]Running 10000 simulations.:  10%|▉         | 992/10000 [00:06<00:59, 151.47it/s]Running 10000 simulations.:  10%|█         | 1008/10000 [00:06<00:59, 151.43it/s]Running 10000 simulations.:  10%|█         | 1024/10000 [00:06<00:59, 151.16it/s]Running 10000 simulations.:  10%|█         | 1040/10000 [00:06<00:59, 150.99it/s]Running 10000 simulations.:  11%|█         | 1056/10000 [00:06<00:59, 150.61it/s]Running 10000 simulations.:  11%|█         | 1072/10000 [00:07<00:59, 150.90it/s]Running 10000 simulations.:  11%|█         | 1088/10000 [00:07<00:58, 151.25it/s]Running 10000 simulations.:  11%|█         | 1104/10000 [00:07<00:58, 150.89it/s]Running 10000 simulations.:  11%|█         | 1120/10000 [00:07<00:58, 150.95it/s]Running 10000 simulations.:  11%|█▏        | 1136/10000 [00:07<00:58, 151.13it/s]Running 10000 simulations.:  12%|█▏        | 1152/10000 [00:07<00:58, 151.09it/s]Running 10000 simulations.:  12%|█▏        | 1168/10000 [00:07<00:58, 151.09it/s]Running 10000 simulations.:  12%|█▏        | 1184/10000 [00:07<00:58, 151.35it/s]Running 10000 simulations.:  12%|█▏        | 1200/10000 [00:07<00:58, 151.32it/s]Running 10000 simulations.:  12%|█▏        | 1216/10000 [00:07<00:57, 151.70it/s]Running 10000 simulations.:  12%|█▏        | 1232/10000 [00:08<00:57, 151.81it/s]Running 10000 simulations.:  12%|█▏        | 1248/10000 [00:08<00:57, 151.49it/s]Running 10000 simulations.:  13%|█▎        | 1264/10000 [00:08<00:57, 151.44it/s]Running 10000 simulations.:  13%|█▎        | 1280/10000 [00:08<00:57, 150.86it/s]Running 10000 simulations.:  13%|█▎        | 1296/10000 [00:08<00:57, 150.72it/s]Running 10000 simulations.:  13%|█▎        | 1312/10000 [00:08<00:57, 150.06it/s]Running 10000 simulations.:  13%|█▎        | 1328/10000 [00:08<00:57, 150.66it/s]Running 10000 simulations.:  13%|█▎        | 1344/10000 [00:08<00:57, 150.55it/s]Running 10000 simulations.:  14%|█▎        | 1360/10000 [00:08<00:57, 150.38it/s]Running 10000 simulations.:  14%|█▍        | 1376/10000 [00:09<00:57, 150.57it/s]Running 10000 simulations.:  14%|█▍        | 1392/10000 [00:09<00:57, 150.72it/s]Running 10000 simulations.:  14%|█▍        | 1408/10000 [00:09<00:56, 150.79it/s]Running 10000 simulations.:  14%|█▍        | 1424/10000 [00:09<00:56, 150.48it/s]Running 10000 simulations.:  14%|█▍        | 1440/10000 [00:09<00:57, 150.01it/s]Running 10000 simulations.:  15%|█▍        | 1456/10000 [00:09<00:56, 150.23it/s]Running 10000 simulations.:  15%|█▍        | 1472/10000 [00:09<00:56, 150.37it/s]Running 10000 simulations.:  15%|█▍        | 1488/10000 [00:09<00:56, 150.35it/s]Running 10000 simulations.:  15%|█▌        | 1504/10000 [00:09<00:56, 150.94it/s]Running 10000 simulations.:  15%|█▌        | 1520/10000 [00:10<00:56, 150.52it/s]Running 10000 simulations.:  15%|█▌        | 1536/10000 [00:10<00:56, 150.46it/s]Running 10000 simulations.:  16%|█▌        | 1552/10000 [00:10<00:56, 150.74it/s]Running 10000 simulations.:  16%|█▌        | 1568/10000 [00:10<00:56, 150.56it/s]Running 10000 simulations.:  16%|█▌        | 1584/10000 [00:10<00:55, 150.85it/s]Running 10000 simulations.:  16%|█▌        | 1600/10000 [00:10<00:55, 150.51it/s]Running 10000 simulations.:  16%|█▌        | 1616/10000 [00:10<00:55, 150.48it/s]Running 10000 simulations.:  16%|█▋        | 1632/10000 [00:10<00:55, 150.50it/s]Running 10000 simulations.:  16%|█▋        | 1648/10000 [00:10<00:55, 150.47it/s]Running 10000 simulations.:  17%|█▋        | 1664/10000 [00:10<00:55, 150.64it/s]Running 10000 simulations.:  17%|█▋        | 1680/10000 [00:11<00:55, 151.26it/s]Running 10000 simulations.:  17%|█▋        | 1697/10000 [00:11<00:53, 153.77it/s]Running 10000 simulations.:  17%|█▋        | 1713/10000 [00:11<00:53, 155.39it/s]Running 10000 simulations.:  17%|█▋        | 1729/10000 [00:11<00:53, 155.76it/s]Running 10000 simulations.:  17%|█▋        | 1745/10000 [00:11<00:53, 153.76it/s]Running 10000 simulations.:  18%|█▊        | 1761/10000 [00:11<00:54, 151.12it/s]Running 10000 simulations.:  18%|█▊        | 1777/10000 [00:11<00:54, 149.53it/s]Running 10000 simulations.:  18%|█▊        | 1792/10000 [00:11<00:55, 148.10it/s]Running 10000 simulations.:  18%|█▊        | 1807/10000 [00:11<00:55, 146.47it/s]Running 10000 simulations.:  18%|█▊        | 1822/10000 [00:12<00:55, 147.45it/s]Running 10000 simulations.:  18%|█▊        | 1837/10000 [00:12<00:55, 146.92it/s]Running 10000 simulations.:  19%|█▊        | 1853/10000 [00:12<00:54, 148.79it/s]Running 10000 simulations.:  19%|█▊        | 1869/10000 [00:12<00:54, 149.60it/s]Running 10000 simulations.:  19%|█▉        | 1885/10000 [00:12<00:54, 149.95it/s]Running 10000 simulations.:  19%|█▉        | 1901/10000 [00:12<00:53, 150.12it/s]Running 10000 simulations.:  19%|█▉        | 1917/10000 [00:12<00:53, 150.05it/s]Running 10000 simulations.:  19%|█▉        | 1933/10000 [00:12<00:53, 150.28it/s]Running 10000 simulations.:  19%|█▉        | 1949/10000 [00:12<00:53, 150.65it/s]Running 10000 simulations.:  20%|█▉        | 1965/10000 [00:12<00:53, 150.19it/s]Running 10000 simulations.:  20%|█▉        | 1981/10000 [00:13<00:53, 150.31it/s]Running 10000 simulations.:  20%|█▉        | 1997/10000 [00:13<00:53, 150.64it/s]Running 10000 simulations.:  20%|██        | 2013/10000 [00:13<00:52, 151.02it/s]Running 10000 simulations.:  20%|██        | 2029/10000 [00:13<00:52, 150.96it/s]Running 10000 simulations.:  20%|██        | 2045/10000 [00:13<00:52, 151.10it/s]Running 10000 simulations.:  21%|██        | 2061/10000 [00:13<00:52, 150.95it/s]Running 10000 simulations.:  21%|██        | 2077/10000 [00:13<00:52, 150.86it/s]Running 10000 simulations.:  21%|██        | 2093/10000 [00:13<00:52, 150.76it/s]Running 10000 simulations.:  21%|██        | 2109/10000 [00:13<00:52, 150.63it/s]Running 10000 simulations.:  21%|██▏       | 2125/10000 [00:14<00:52, 150.96it/s]Running 10000 simulations.:  21%|██▏       | 2141/10000 [00:14<00:52, 150.90it/s]Running 10000 simulations.:  22%|██▏       | 2157/10000 [00:14<00:51, 151.13it/s]Running 10000 simulations.:  22%|██▏       | 2173/10000 [00:14<00:51, 150.89it/s]Running 10000 simulations.:  22%|██▏       | 2189/10000 [00:14<00:51, 150.59it/s]Running 10000 simulations.:  22%|██▏       | 2205/10000 [00:14<00:51, 150.16it/s]Running 10000 simulations.:  22%|██▏       | 2221/10000 [00:14<00:51, 149.81it/s]Running 10000 simulations.:  22%|██▏       | 2237/10000 [00:14<00:51, 149.96it/s]Running 10000 simulations.:  23%|██▎       | 2253/10000 [00:14<00:51, 150.33it/s]Running 10000 simulations.:  23%|██▎       | 2269/10000 [00:14<00:51, 150.77it/s]Running 10000 simulations.:  23%|██▎       | 2285/10000 [00:15<00:51, 150.78it/s]Running 10000 simulations.:  23%|██▎       | 2301/10000 [00:15<00:50, 150.99it/s]Running 10000 simulations.:  23%|██▎       | 2317/10000 [00:15<00:50, 151.29it/s]Running 10000 simulations.:  23%|██▎       | 2333/10000 [00:15<00:50, 151.49it/s]Running 10000 simulations.:  23%|██▎       | 2349/10000 [00:15<00:50, 151.43it/s]Running 10000 simulations.:  24%|██▎       | 2365/10000 [00:15<00:50, 151.71it/s]Running 10000 simulations.:  24%|██▍       | 2381/10000 [00:15<00:50, 150.81it/s]Running 10000 simulations.:  24%|██▍       | 2397/10000 [00:15<00:50, 150.80it/s]Running 10000 simulations.:  24%|██▍       | 2413/10000 [00:15<00:50, 150.88it/s]Running 10000 simulations.:  24%|██▍       | 2429/10000 [00:16<00:50, 150.32it/s]Running 10000 simulations.:  24%|██▍       | 2445/10000 [00:16<00:50, 150.49it/s]Running 10000 simulations.:  25%|██▍       | 2461/10000 [00:16<00:49, 151.06it/s]Running 10000 simulations.:  25%|██▍       | 2477/10000 [00:16<00:49, 150.88it/s]Running 10000 simulations.:  25%|██▍       | 2493/10000 [00:16<00:49, 150.78it/s]Running 10000 simulations.:  25%|██▌       | 2509/10000 [00:16<00:49, 150.87it/s]Running 10000 simulations.:  25%|██▌       | 2525/10000 [00:16<00:49, 150.93it/s]Running 10000 simulations.:  25%|██▌       | 2541/10000 [00:16<00:49, 150.85it/s]Running 10000 simulations.:  26%|██▌       | 2557/10000 [00:16<00:49, 150.99it/s]Running 10000 simulations.:  26%|██▌       | 2573/10000 [00:16<00:49, 150.76it/s]Running 10000 simulations.:  26%|██▌       | 2589/10000 [00:17<00:49, 150.45it/s]Running 10000 simulations.:  26%|██▌       | 2605/10000 [00:17<00:50, 147.29it/s]Running 10000 simulations.:  26%|██▌       | 2620/10000 [00:17<00:50, 145.32it/s]Running 10000 simulations.:  26%|██▋       | 2635/10000 [00:17<00:51, 143.75it/s]Running 10000 simulations.:  26%|██▋       | 2650/10000 [00:17<00:51, 142.95it/s]Running 10000 simulations.:  27%|██▋       | 2665/10000 [00:17<00:51, 142.16it/s]Running 10000 simulations.:  27%|██▋       | 2680/10000 [00:17<00:51, 141.53it/s]Running 10000 simulations.:  27%|██▋       | 2695/10000 [00:17<00:51, 141.33it/s]Running 10000 simulations.:  27%|██▋       | 2710/10000 [00:17<00:51, 141.21it/s]Running 10000 simulations.:  27%|██▋       | 2725/10000 [00:18<00:51, 141.06it/s]Running 10000 simulations.:  27%|██▋       | 2740/10000 [00:18<00:51, 141.06it/s]Running 10000 simulations.:  28%|██▊       | 2755/10000 [00:18<00:51, 141.45it/s]Running 10000 simulations.:  28%|██▊       | 2770/10000 [00:18<00:51, 141.23it/s]Running 10000 simulations.:  28%|██▊       | 2785/10000 [00:18<00:51, 141.03it/s]Running 10000 simulations.:  28%|██▊       | 2800/10000 [00:18<00:50, 141.35it/s]Running 10000 simulations.:  28%|██▊       | 2815/10000 [00:18<00:50, 141.88it/s]Running 10000 simulations.:  28%|██▊       | 2830/10000 [00:18<00:50, 142.40it/s]Running 10000 simulations.:  28%|██▊       | 2845/10000 [00:18<00:49, 143.74it/s]Running 10000 simulations.:  29%|██▊       | 2860/10000 [00:19<00:49, 143.59it/s]Running 10000 simulations.:  29%|██▉       | 2875/10000 [00:19<00:49, 143.06it/s]Running 10000 simulations.:  29%|██▉       | 2890/10000 [00:19<00:49, 143.07it/s]Running 10000 simulations.:  29%|██▉       | 2905/10000 [00:19<00:49, 143.30it/s]Running 10000 simulations.:  29%|██▉       | 2920/10000 [00:19<00:49, 143.52it/s]Running 10000 simulations.:  29%|██▉       | 2935/10000 [00:19<00:49, 144.05it/s]Running 10000 simulations.:  30%|██▉       | 2950/10000 [00:19<00:48, 144.12it/s]Running 10000 simulations.:  30%|██▉       | 2965/10000 [00:19<00:48, 143.95it/s]Running 10000 simulations.:  30%|██▉       | 2980/10000 [00:19<00:48, 143.39it/s]Running 10000 simulations.:  30%|██▉       | 2995/10000 [00:19<00:48, 143.12it/s]Running 10000 simulations.:  30%|███       | 3010/10000 [00:20<00:49, 142.23it/s]Running 10000 simulations.:  30%|███       | 3025/10000 [00:20<00:49, 142.07it/s]Running 10000 simulations.:  30%|███       | 3040/10000 [00:20<00:48, 142.43it/s]Running 10000 simulations.:  31%|███       | 3055/10000 [00:20<00:48, 142.41it/s]Running 10000 simulations.:  31%|███       | 3070/10000 [00:20<00:48, 142.00it/s]Running 10000 simulations.:  31%|███       | 3085/10000 [00:20<00:48, 142.00it/s]Running 10000 simulations.:  31%|███       | 3100/10000 [00:20<00:48, 141.53it/s]Running 10000 simulations.:  31%|███       | 3115/10000 [00:20<00:48, 141.33it/s]Running 10000 simulations.:  31%|███▏      | 3130/10000 [00:20<00:48, 141.86it/s]Running 10000 simulations.:  31%|███▏      | 3145/10000 [00:21<00:48, 142.50it/s]Running 10000 simulations.:  32%|███▏      | 3160/10000 [00:21<00:48, 142.33it/s]Running 10000 simulations.:  32%|███▏      | 3175/10000 [00:21<00:48, 141.36it/s]Running 10000 simulations.:  32%|███▏      | 3190/10000 [00:21<00:48, 140.81it/s]Running 10000 simulations.:  32%|███▏      | 3205/10000 [00:21<00:48, 139.39it/s]Running 10000 simulations.:  32%|███▏      | 3220/10000 [00:21<00:48, 139.75it/s]Running 10000 simulations.:  32%|███▏      | 3235/10000 [00:21<00:47, 140.98it/s]Running 10000 simulations.:  32%|███▎      | 3250/10000 [00:21<00:47, 141.61it/s]Running 10000 simulations.:  33%|███▎      | 3265/10000 [00:21<00:47, 141.50it/s]Running 10000 simulations.:  33%|███▎      | 3280/10000 [00:21<00:47, 141.38it/s]Running 10000 simulations.:  33%|███▎      | 3295/10000 [00:22<00:47, 140.80it/s]Running 10000 simulations.:  33%|███▎      | 3310/10000 [00:22<00:47, 140.48it/s]Running 10000 simulations.:  33%|███▎      | 3325/10000 [00:22<00:47, 140.17it/s]Running 10000 simulations.:  33%|███▎      | 3340/10000 [00:22<00:47, 140.00it/s]Running 10000 simulations.:  34%|███▎      | 3355/10000 [00:22<00:47, 140.36it/s]Running 10000 simulations.:  34%|███▎      | 3370/10000 [00:22<00:47, 139.52it/s]Running 10000 simulations.:  34%|███▍      | 3384/10000 [00:22<00:47, 139.14it/s]Running 10000 simulations.:  34%|███▍      | 3398/10000 [00:22<00:47, 139.03it/s]Running 10000 simulations.:  34%|███▍      | 3413/10000 [00:22<00:47, 139.42it/s]Running 10000 simulations.:  34%|███▍      | 3428/10000 [00:23<00:47, 139.65it/s]Running 10000 simulations.:  34%|███▍      | 3442/10000 [00:23<00:47, 139.39it/s]Running 10000 simulations.:  35%|███▍      | 3457/10000 [00:23<00:46, 139.91it/s]Running 10000 simulations.:  35%|███▍      | 3472/10000 [00:23<00:46, 140.12it/s]Running 10000 simulations.:  35%|███▍      | 3487/10000 [00:23<00:46, 140.18it/s]Running 10000 simulations.:  35%|███▌      | 3502/10000 [00:23<00:46, 140.09it/s]Running 10000 simulations.:  35%|███▌      | 3517/10000 [00:23<00:46, 139.80it/s]Running 10000 simulations.:  35%|███▌      | 3532/10000 [00:23<00:46, 140.36it/s]Running 10000 simulations.:  35%|███▌      | 3547/10000 [00:23<00:45, 140.53it/s]Running 10000 simulations.:  36%|███▌      | 3562/10000 [00:23<00:45, 140.68it/s]Running 10000 simulations.:  36%|███▌      | 3577/10000 [00:24<00:45, 140.35it/s]Running 10000 simulations.:  36%|███▌      | 3592/10000 [00:24<00:45, 140.13it/s]Running 10000 simulations.:  36%|███▌      | 3607/10000 [00:24<00:45, 139.87it/s]Running 10000 simulations.:  36%|███▌      | 3621/10000 [00:24<00:45, 139.76it/s]Running 10000 simulations.:  36%|███▋      | 3636/10000 [00:24<00:45, 139.90it/s]Running 10000 simulations.:  37%|███▋      | 3651/10000 [00:24<00:45, 140.39it/s]Running 10000 simulations.:  37%|███▋      | 3666/10000 [00:24<00:45, 139.96it/s]Running 10000 simulations.:  37%|███▋      | 3680/10000 [00:24<00:45, 139.34it/s]Running 10000 simulations.:  37%|███▋      | 3694/10000 [00:24<00:46, 137.08it/s]Running 10000 simulations.:  37%|███▋      | 3708/10000 [00:25<00:45, 137.32it/s]Running 10000 simulations.:  37%|███▋      | 3723/10000 [00:25<00:45, 138.21it/s]Running 10000 simulations.:  37%|███▋      | 3737/10000 [00:25<00:45, 138.56it/s]Running 10000 simulations.:  38%|███▊      | 3751/10000 [00:25<00:45, 138.66it/s]Running 10000 simulations.:  38%|███▊      | 3765/10000 [00:25<00:45, 138.22it/s]Running 10000 simulations.:  38%|███▊      | 3779/10000 [00:25<00:44, 138.43it/s]Running 10000 simulations.:  38%|███▊      | 3793/10000 [00:25<00:44, 138.85it/s]Running 10000 simulations.:  38%|███▊      | 3808/10000 [00:25<00:44, 139.49it/s]Running 10000 simulations.:  38%|███▊      | 3822/10000 [00:25<00:44, 139.42it/s]Running 10000 simulations.:  38%|███▊      | 3837/10000 [00:25<00:44, 139.58it/s]Running 10000 simulations.:  39%|███▊      | 3851/10000 [00:26<00:44, 138.99it/s]Running 10000 simulations.:  39%|███▊      | 3865/10000 [00:26<00:44, 139.27it/s]Running 10000 simulations.:  39%|███▉      | 3880/10000 [00:26<00:43, 139.55it/s]Running 10000 simulations.:  39%|███▉      | 3894/10000 [00:26<00:43, 139.11it/s]Running 10000 simulations.:  39%|███▉      | 3908/10000 [00:26<00:43, 138.75it/s]Running 10000 simulations.:  39%|███▉      | 3922/10000 [00:26<00:43, 138.95it/s]Running 10000 simulations.:  39%|███▉      | 3936/10000 [00:26<00:43, 139.08it/s]Running 10000 simulations.:  40%|███▉      | 3951/10000 [00:26<00:43, 139.42it/s]Running 10000 simulations.:  40%|███▉      | 3966/10000 [00:26<00:43, 140.03it/s]Running 10000 simulations.:  40%|███▉      | 3981/10000 [00:27<00:42, 140.00it/s]Running 10000 simulations.:  40%|███▉      | 3996/10000 [00:27<00:43, 139.09it/s]Running 10000 simulations.:  40%|████      | 4011/10000 [00:27<00:42, 139.42it/s]Running 10000 simulations.:  40%|████      | 4026/10000 [00:27<00:42, 140.00it/s]Running 10000 simulations.:  40%|████      | 4042/10000 [00:27<00:41, 143.27it/s]Running 10000 simulations.:  41%|████      | 4058/10000 [00:27<00:40, 147.36it/s]Running 10000 simulations.:  41%|████      | 4074/10000 [00:27<00:39, 150.35it/s]Running 10000 simulations.:  41%|████      | 4090/10000 [00:27<00:39, 151.18it/s]Running 10000 simulations.:  41%|████      | 4106/10000 [00:27<00:38, 152.61it/s]Running 10000 simulations.:  41%|████      | 4122/10000 [00:27<00:38, 152.85it/s]Running 10000 simulations.:  41%|████▏     | 4138/10000 [00:28<00:38, 152.77it/s]Running 10000 simulations.:  42%|████▏     | 4154/10000 [00:28<00:38, 152.42it/s]Running 10000 simulations.:  42%|████▏     | 4170/10000 [00:28<00:38, 151.89it/s]Running 10000 simulations.:  42%|████▏     | 4186/10000 [00:28<00:40, 142.67it/s]Running 10000 simulations.:  42%|████▏     | 4202/10000 [00:28<00:39, 144.97it/s]Running 10000 simulations.:  42%|████▏     | 4217/10000 [00:28<00:43, 133.69it/s]Running 10000 simulations.:  42%|████▏     | 4231/10000 [00:28<00:46, 123.31it/s]Running 10000 simulations.:  42%|████▏     | 4244/10000 [00:28<00:49, 115.77it/s]Running 10000 simulations.:  43%|████▎     | 4256/10000 [00:29<00:51, 111.26it/s]Running 10000 simulations.:  43%|████▎     | 4268/10000 [00:29<00:52, 109.76it/s]Running 10000 simulations.:  43%|████▎     | 4280/10000 [00:29<00:52, 109.66it/s]Running 10000 simulations.:  43%|████▎     | 4292/10000 [00:29<00:51, 109.80it/s]Running 10000 simulations.:  43%|████▎     | 4304/10000 [00:29<00:51, 109.70it/s]Running 10000 simulations.:  43%|████▎     | 4316/10000 [00:29<00:52, 109.04it/s]Running 10000 simulations.:  43%|████▎     | 4327/10000 [00:29<00:52, 108.65it/s]Running 10000 simulations.:  43%|████▎     | 4338/10000 [00:29<00:52, 108.15it/s]Running 10000 simulations.:  43%|████▎     | 4349/10000 [00:29<00:52, 107.74it/s]Running 10000 simulations.:  44%|████▎     | 4360/10000 [00:29<00:52, 107.70it/s]Running 10000 simulations.:  44%|████▎     | 4372/10000 [00:30<00:51, 108.57it/s]Running 10000 simulations.:  44%|████▍     | 4383/10000 [00:30<00:51, 108.76it/s]Running 10000 simulations.:  44%|████▍     | 4395/10000 [00:30<00:51, 109.34it/s]Running 10000 simulations.:  44%|████▍     | 4406/10000 [00:30<00:51, 109.33it/s]Running 10000 simulations.:  44%|████▍     | 4417/10000 [00:30<00:51, 109.40it/s]Running 10000 simulations.:  44%|████▍     | 4428/10000 [00:30<00:51, 108.43it/s]Running 10000 simulations.:  44%|████▍     | 4439/10000 [00:30<00:51, 107.99it/s]Running 10000 simulations.:  45%|████▍     | 4451/10000 [00:30<00:51, 108.42it/s]Running 10000 simulations.:  45%|████▍     | 4462/10000 [00:30<00:50, 108.62it/s]Running 10000 simulations.:  45%|████▍     | 4473/10000 [00:31<00:50, 108.73it/s]Running 10000 simulations.:  45%|████▍     | 4484/10000 [00:31<00:50, 108.81it/s]Running 10000 simulations.:  45%|████▍     | 4496/10000 [00:31<00:50, 109.37it/s]Running 10000 simulations.:  45%|████▌     | 4507/10000 [00:31<00:50, 108.79it/s]Running 10000 simulations.:  45%|████▌     | 4518/10000 [00:31<00:50, 108.17it/s]Running 10000 simulations.:  45%|████▌     | 4529/10000 [00:31<00:50, 107.62it/s]Running 10000 simulations.:  45%|████▌     | 4542/10000 [00:31<00:48, 111.77it/s]Running 10000 simulations.:  46%|████▌     | 4555/10000 [00:31<00:47, 115.06it/s]Running 10000 simulations.:  46%|████▌     | 4568/10000 [00:31<00:46, 117.13it/s]Running 10000 simulations.:  46%|████▌     | 4581/10000 [00:31<00:45, 118.79it/s]Running 10000 simulations.:  46%|████▌     | 4594/10000 [00:32<00:45, 120.06it/s]Running 10000 simulations.:  46%|████▌     | 4607/10000 [00:32<00:44, 120.67it/s]Running 10000 simulations.:  46%|████▌     | 4620/10000 [00:32<00:44, 121.35it/s]Running 10000 simulations.:  46%|████▋     | 4633/10000 [00:32<00:44, 121.36it/s]Running 10000 simulations.:  46%|████▋     | 4646/10000 [00:32<00:44, 121.56it/s]Running 10000 simulations.:  47%|████▋     | 4659/10000 [00:32<00:43, 121.89it/s]Running 10000 simulations.:  47%|████▋     | 4672/10000 [00:32<00:43, 122.37it/s]Running 10000 simulations.:  47%|████▋     | 4685/10000 [00:32<00:43, 122.62it/s]Running 10000 simulations.:  47%|████▋     | 4698/10000 [00:32<00:43, 122.50it/s]Running 10000 simulations.:  47%|████▋     | 4711/10000 [00:33<00:43, 122.46it/s]Running 10000 simulations.:  47%|████▋     | 4724/10000 [00:33<00:43, 121.62it/s]Running 10000 simulations.:  47%|████▋     | 4737/10000 [00:33<00:43, 121.97it/s]Running 10000 simulations.:  48%|████▊     | 4750/10000 [00:33<00:42, 122.22it/s]Running 10000 simulations.:  48%|████▊     | 4763/10000 [00:33<00:42, 122.07it/s]Running 10000 simulations.:  48%|████▊     | 4776/10000 [00:33<00:42, 122.57it/s]Running 10000 simulations.:  48%|████▊     | 4789/10000 [00:33<00:42, 122.50it/s]Running 10000 simulations.:  48%|████▊     | 4802/10000 [00:33<00:42, 122.32it/s]Running 10000 simulations.:  48%|████▊     | 4815/10000 [00:33<00:42, 122.62it/s]Running 10000 simulations.:  48%|████▊     | 4828/10000 [00:33<00:42, 122.99it/s]Running 10000 simulations.:  48%|████▊     | 4841/10000 [00:34<00:41, 123.24it/s]Running 10000 simulations.:  49%|████▊     | 4854/10000 [00:34<00:41, 123.38it/s]Running 10000 simulations.:  49%|████▊     | 4867/10000 [00:34<00:41, 123.70it/s]Running 10000 simulations.:  49%|████▉     | 4880/10000 [00:34<00:41, 123.44it/s]Running 10000 simulations.:  49%|████▉     | 4893/10000 [00:34<00:41, 123.01it/s]Running 10000 simulations.:  49%|████▉     | 4906/10000 [00:34<00:41, 123.53it/s]Running 10000 simulations.:  49%|████▉     | 4919/10000 [00:34<00:41, 123.90it/s]Running 10000 simulations.:  49%|████▉     | 4932/10000 [00:34<00:40, 123.92it/s]Running 10000 simulations.:  49%|████▉     | 4945/10000 [00:34<00:40, 123.32it/s]Running 10000 simulations.:  50%|████▉     | 4958/10000 [00:35<00:40, 123.16it/s]Running 10000 simulations.:  50%|████▉     | 4971/10000 [00:35<00:40, 123.34it/s]Running 10000 simulations.:  50%|████▉     | 4984/10000 [00:35<00:40, 123.23it/s]Running 10000 simulations.:  50%|████▉     | 4997/10000 [00:35<00:40, 122.77it/s]Running 10000 simulations.:  50%|█████     | 5010/10000 [00:35<00:40, 122.21it/s]Running 10000 simulations.:  50%|█████     | 5023/10000 [00:35<00:40, 122.36it/s]Running 10000 simulations.:  50%|█████     | 5036/10000 [00:35<00:40, 122.23it/s]Running 10000 simulations.:  50%|█████     | 5049/10000 [00:35<00:40, 121.59it/s]Running 10000 simulations.:  51%|█████     | 5062/10000 [00:35<00:40, 121.51it/s]Running 10000 simulations.:  51%|█████     | 5075/10000 [00:35<00:40, 121.36it/s]Running 10000 simulations.:  51%|█████     | 5088/10000 [00:36<00:40, 121.09it/s]Running 10000 simulations.:  51%|█████     | 5101/10000 [00:36<00:40, 121.35it/s]Running 10000 simulations.:  51%|█████     | 5114/10000 [00:36<00:40, 121.45it/s]Running 10000 simulations.:  51%|█████▏    | 5127/10000 [00:36<00:40, 120.90it/s]Running 10000 simulations.:  51%|█████▏    | 5140/10000 [00:36<00:40, 120.93it/s]Running 10000 simulations.:  52%|█████▏    | 5153/10000 [00:36<00:39, 121.49it/s]Running 10000 simulations.:  52%|█████▏    | 5166/10000 [00:36<00:39, 121.65it/s]Running 10000 simulations.:  52%|█████▏    | 5179/10000 [00:36<00:39, 121.97it/s]Running 10000 simulations.:  52%|█████▏    | 5192/10000 [00:36<00:39, 121.82it/s]Running 10000 simulations.:  52%|█████▏    | 5205/10000 [00:37<00:39, 121.21it/s]Running 10000 simulations.:  52%|█████▏    | 5218/10000 [00:37<00:39, 120.85it/s]Running 10000 simulations.:  52%|█████▏    | 5231/10000 [00:37<00:39, 120.90it/s]Running 10000 simulations.:  52%|█████▏    | 5244/10000 [00:37<00:39, 121.05it/s]Running 10000 simulations.:  53%|█████▎    | 5257/10000 [00:37<00:39, 121.22it/s]Running 10000 simulations.:  53%|█████▎    | 5270/10000 [00:37<00:39, 120.46it/s]Running 10000 simulations.:  53%|█████▎    | 5283/10000 [00:37<00:39, 119.87it/s]Running 10000 simulations.:  53%|█████▎    | 5295/10000 [00:37<00:39, 119.75it/s]Running 10000 simulations.:  53%|█████▎    | 5308/10000 [00:37<00:38, 120.33it/s]Running 10000 simulations.:  53%|█████▎    | 5321/10000 [00:38<00:38, 120.24it/s]Running 10000 simulations.:  53%|█████▎    | 5334/10000 [00:38<00:38, 120.04it/s]Running 10000 simulations.:  53%|█████▎    | 5347/10000 [00:38<00:38, 120.26it/s]Running 10000 simulations.:  54%|█████▎    | 5360/10000 [00:38<00:38, 120.34it/s]Running 10000 simulations.:  54%|█████▎    | 5373/10000 [00:38<00:38, 120.75it/s]Running 10000 simulations.:  54%|█████▍    | 5386/10000 [00:38<00:38, 121.09it/s]Running 10000 simulations.:  54%|█████▍    | 5399/10000 [00:38<00:38, 120.99it/s]Running 10000 simulations.:  54%|█████▍    | 5412/10000 [00:38<00:38, 120.48it/s]Running 10000 simulations.:  54%|█████▍    | 5425/10000 [00:38<00:38, 120.38it/s]Running 10000 simulations.:  54%|█████▍    | 5438/10000 [00:38<00:37, 120.55it/s]Running 10000 simulations.:  55%|█████▍    | 5451/10000 [00:39<00:37, 121.09it/s]Running 10000 simulations.:  55%|█████▍    | 5464/10000 [00:39<00:37, 120.91it/s]Running 10000 simulations.:  55%|█████▍    | 5477/10000 [00:39<00:37, 120.66it/s]Running 10000 simulations.:  55%|█████▍    | 5490/10000 [00:39<00:37, 119.25it/s]Running 10000 simulations.:  55%|█████▌    | 5502/10000 [00:39<00:37, 118.99it/s]Running 10000 simulations.:  55%|█████▌    | 5514/10000 [00:39<00:37, 119.12it/s]Running 10000 simulations.:  55%|█████▌    | 5527/10000 [00:39<00:37, 119.95it/s]Running 10000 simulations.:  55%|█████▌    | 5540/10000 [00:39<00:36, 120.63it/s]Running 10000 simulations.:  56%|█████▌    | 5553/10000 [00:39<00:36, 120.94it/s]Running 10000 simulations.:  56%|█████▌    | 5566/10000 [00:40<00:36, 120.30it/s]Running 10000 simulations.:  56%|█████▌    | 5579/10000 [00:40<00:36, 119.72it/s]Running 10000 simulations.:  56%|█████▌    | 5591/10000 [00:40<00:36, 119.79it/s]Running 10000 simulations.:  56%|█████▌    | 5604/10000 [00:40<00:36, 119.96it/s]Running 10000 simulations.:  56%|█████▌    | 5616/10000 [00:40<00:36, 119.87it/s]Running 10000 simulations.:  56%|█████▋    | 5629/10000 [00:40<00:36, 120.46it/s]Running 10000 simulations.:  56%|█████▋    | 5642/10000 [00:40<00:36, 120.54it/s]Running 10000 simulations.:  57%|█████▋    | 5655/10000 [00:40<00:36, 120.63it/s]Running 10000 simulations.:  57%|█████▋    | 5668/10000 [00:40<00:35, 120.77it/s]Running 10000 simulations.:  57%|█████▋    | 5681/10000 [00:41<00:35, 120.96it/s]Running 10000 simulations.:  57%|█████▋    | 5695/10000 [00:41<00:34, 124.93it/s]Running 10000 simulations.:  57%|█████▋    | 5709/10000 [00:41<00:33, 128.42it/s]Running 10000 simulations.:  57%|█████▋    | 5723/10000 [00:41<00:33, 129.24it/s]Running 10000 simulations.:  57%|█████▋    | 5736/10000 [00:41<00:32, 129.25it/s]Running 10000 simulations.:  57%|█████▋    | 5749/10000 [00:41<00:32, 129.28it/s]Running 10000 simulations.:  58%|█████▊    | 5763/10000 [00:41<00:32, 130.06it/s]Running 10000 simulations.:  58%|█████▊    | 5777/10000 [00:41<00:32, 130.58it/s]Running 10000 simulations.:  58%|█████▊    | 5791/10000 [00:41<00:31, 131.68it/s]Running 10000 simulations.:  58%|█████▊    | 5805/10000 [00:41<00:31, 131.93it/s]Running 10000 simulations.:  58%|█████▊    | 5819/10000 [00:42<00:31, 131.98it/s]Running 10000 simulations.:  58%|█████▊    | 5833/10000 [00:42<00:31, 130.57it/s]Running 10000 simulations.:  58%|█████▊    | 5847/10000 [00:42<00:32, 127.22it/s]Running 10000 simulations.:  59%|█████▊    | 5860/10000 [00:42<00:33, 125.13it/s]Running 10000 simulations.:  59%|█████▊    | 5873/10000 [00:42<00:33, 124.30it/s]Running 10000 simulations.:  59%|█████▉    | 5886/10000 [00:42<00:33, 123.46it/s]Running 10000 simulations.:  59%|█████▉    | 5899/10000 [00:42<00:33, 122.24it/s]Running 10000 simulations.:  59%|█████▉    | 5912/10000 [00:42<00:33, 122.46it/s]Running 10000 simulations.:  59%|█████▉    | 5925/10000 [00:42<00:33, 122.57it/s]Running 10000 simulations.:  59%|█████▉    | 5938/10000 [00:43<00:33, 122.46it/s]Running 10000 simulations.:  60%|█████▉    | 5951/10000 [00:43<00:33, 122.70it/s]Running 10000 simulations.:  60%|█████▉    | 5964/10000 [00:43<00:32, 122.46it/s]Running 10000 simulations.:  60%|█████▉    | 5977/10000 [00:43<00:33, 121.85it/s]Running 10000 simulations.:  60%|█████▉    | 5990/10000 [00:43<00:32, 122.08it/s]Running 10000 simulations.:  60%|██████    | 6003/10000 [00:43<00:32, 122.18it/s]Running 10000 simulations.:  60%|██████    | 6016/10000 [00:43<00:32, 121.94it/s]Running 10000 simulations.:  60%|██████    | 6029/10000 [00:43<00:32, 121.42it/s]Running 10000 simulations.:  60%|██████    | 6042/10000 [00:43<00:32, 121.79it/s]Running 10000 simulations.:  61%|██████    | 6055/10000 [00:43<00:32, 121.79it/s]Running 10000 simulations.:  61%|██████    | 6068/10000 [00:44<00:32, 122.08it/s]Running 10000 simulations.:  61%|██████    | 6081/10000 [00:44<00:32, 122.11it/s]Running 10000 simulations.:  61%|██████    | 6094/10000 [00:44<00:31, 122.44it/s]Running 10000 simulations.:  61%|██████    | 6107/10000 [00:44<00:31, 121.71it/s]Running 10000 simulations.:  61%|██████    | 6120/10000 [00:44<00:31, 121.52it/s]Running 10000 simulations.:  61%|██████▏   | 6133/10000 [00:44<00:31, 121.69it/s]Running 10000 simulations.:  61%|██████▏   | 6146/10000 [00:44<00:31, 121.92it/s]Running 10000 simulations.:  62%|██████▏   | 6159/10000 [00:44<00:31, 121.77it/s]Running 10000 simulations.:  62%|██████▏   | 6174/10000 [00:44<00:29, 127.65it/s]Running 10000 simulations.:  62%|██████▏   | 6190/10000 [00:45<00:28, 134.73it/s]Running 10000 simulations.:  62%|██████▏   | 6206/10000 [00:45<00:26, 141.11it/s]Running 10000 simulations.:  62%|██████▏   | 6222/10000 [00:45<00:26, 144.12it/s]Running 10000 simulations.:  62%|██████▏   | 6237/10000 [00:45<00:25, 145.60it/s]Running 10000 simulations.:  63%|██████▎   | 6253/10000 [00:45<00:25, 146.93it/s]Running 10000 simulations.:  63%|██████▎   | 6269/10000 [00:45<00:25, 147.91it/s]Running 10000 simulations.:  63%|██████▎   | 6284/10000 [00:45<00:25, 147.53it/s]Running 10000 simulations.:  63%|██████▎   | 6299/10000 [00:45<00:25, 147.85it/s]Running 10000 simulations.:  63%|██████▎   | 6315/10000 [00:45<00:24, 149.27it/s]Running 10000 simulations.:  63%|██████▎   | 6331/10000 [00:45<00:24, 149.95it/s]Running 10000 simulations.:  63%|██████▎   | 6347/10000 [00:46<00:24, 151.14it/s]Running 10000 simulations.:  64%|██████▎   | 6363/10000 [00:46<00:23, 151.92it/s]Running 10000 simulations.:  64%|██████▍   | 6379/10000 [00:46<00:23, 151.71it/s]Running 10000 simulations.:  64%|██████▍   | 6395/10000 [00:46<00:23, 151.99it/s]Running 10000 simulations.:  64%|██████▍   | 6411/10000 [00:46<00:23, 152.84it/s]Running 10000 simulations.:  64%|██████▍   | 6427/10000 [00:46<00:23, 153.03it/s]Running 10000 simulations.:  64%|██████▍   | 6443/10000 [00:46<00:23, 153.25it/s]Running 10000 simulations.:  65%|██████▍   | 6459/10000 [00:46<00:23, 153.10it/s]Running 10000 simulations.:  65%|██████▍   | 6475/10000 [00:46<00:23, 152.45it/s]Running 10000 simulations.:  65%|██████▍   | 6491/10000 [00:47<00:22, 152.67it/s]Running 10000 simulations.:  65%|██████▌   | 6507/10000 [00:47<00:22, 153.49it/s]Running 10000 simulations.:  65%|██████▌   | 6523/10000 [00:47<00:22, 153.92it/s]Running 10000 simulations.:  65%|██████▌   | 6539/10000 [00:47<00:22, 153.80it/s]Running 10000 simulations.:  66%|██████▌   | 6555/10000 [00:47<00:22, 153.84it/s]Running 10000 simulations.:  66%|██████▌   | 6571/10000 [00:47<00:22, 153.18it/s]Running 10000 simulations.:  66%|██████▌   | 6587/10000 [00:47<00:22, 152.45it/s]Running 10000 simulations.:  66%|██████▌   | 6603/10000 [00:47<00:22, 152.79it/s]Running 10000 simulations.:  66%|██████▌   | 6619/10000 [00:47<00:22, 153.46it/s]Running 10000 simulations.:  66%|██████▋   | 6635/10000 [00:47<00:21, 154.28it/s]Running 10000 simulations.:  67%|██████▋   | 6651/10000 [00:48<00:21, 154.86it/s]Running 10000 simulations.:  67%|██████▋   | 6667/10000 [00:48<00:21, 154.66it/s]Running 10000 simulations.:  67%|██████▋   | 6683/10000 [00:48<00:21, 154.44it/s]Running 10000 simulations.:  67%|██████▋   | 6699/10000 [00:48<00:21, 154.51it/s]Running 10000 simulations.:  67%|██████▋   | 6715/10000 [00:48<00:21, 154.66it/s]Running 10000 simulations.:  67%|██████▋   | 6731/10000 [00:48<00:21, 154.58it/s]Running 10000 simulations.:  67%|██████▋   | 6747/10000 [00:48<00:20, 155.02it/s]Running 10000 simulations.:  68%|██████▊   | 6763/10000 [00:48<00:20, 155.01it/s]Running 10000 simulations.:  68%|██████▊   | 6779/10000 [00:48<00:20, 154.09it/s]Running 10000 simulations.:  68%|██████▊   | 6795/10000 [00:48<00:20, 153.31it/s]Running 10000 simulations.:  68%|██████▊   | 6811/10000 [00:49<00:20, 153.07it/s]Running 10000 simulations.:  68%|██████▊   | 6827/10000 [00:49<00:20, 153.02it/s]Running 10000 simulations.:  68%|██████▊   | 6843/10000 [00:49<00:20, 153.08it/s]Running 10000 simulations.:  69%|██████▊   | 6859/10000 [00:49<00:20, 153.25it/s]Running 10000 simulations.:  69%|██████▉   | 6875/10000 [00:49<00:20, 153.29it/s]Running 10000 simulations.:  69%|██████▉   | 6891/10000 [00:49<00:20, 152.74it/s]Running 10000 simulations.:  69%|██████▉   | 6907/10000 [00:49<00:20, 152.52it/s]Running 10000 simulations.:  69%|██████▉   | 6923/10000 [00:49<00:20, 151.72it/s]Running 10000 simulations.:  69%|██████▉   | 6939/10000 [00:49<00:20, 151.79it/s]Running 10000 simulations.:  70%|██████▉   | 6955/10000 [00:50<00:19, 152.65it/s]Running 10000 simulations.:  70%|██████▉   | 6971/10000 [00:50<00:19, 153.60it/s]Running 10000 simulations.:  70%|██████▉   | 6987/10000 [00:50<00:19, 154.07it/s]Running 10000 simulations.:  70%|███████   | 7003/10000 [00:50<00:19, 153.57it/s]Running 10000 simulations.:  70%|███████   | 7019/10000 [00:50<00:19, 153.35it/s]Running 10000 simulations.:  70%|███████   | 7035/10000 [00:50<00:19, 153.65it/s]Running 10000 simulations.:  71%|███████   | 7051/10000 [00:50<00:19, 154.32it/s]Running 10000 simulations.:  71%|███████   | 7067/10000 [00:50<00:19, 153.92it/s]Running 10000 simulations.:  71%|███████   | 7083/10000 [00:50<00:18, 153.97it/s]Running 10000 simulations.:  71%|███████   | 7099/10000 [00:50<00:18, 154.49it/s]Running 10000 simulations.:  71%|███████   | 7115/10000 [00:51<00:18, 154.59it/s]Running 10000 simulations.:  71%|███████▏  | 7131/10000 [00:51<00:18, 154.48it/s]Running 10000 simulations.:  71%|███████▏  | 7147/10000 [00:51<00:18, 154.45it/s]Running 10000 simulations.:  72%|███████▏  | 7163/10000 [00:51<00:18, 154.60it/s]Running 10000 simulations.:  72%|███████▏  | 7179/10000 [00:51<00:18, 154.31it/s]Running 10000 simulations.:  72%|███████▏  | 7195/10000 [00:51<00:18, 154.23it/s]Running 10000 simulations.:  72%|███████▏  | 7211/10000 [00:51<00:18, 154.33it/s]Running 10000 simulations.:  72%|███████▏  | 7227/10000 [00:51<00:18, 153.69it/s]Running 10000 simulations.:  72%|███████▏  | 7243/10000 [00:51<00:17, 153.85it/s]Running 10000 simulations.:  73%|███████▎  | 7259/10000 [00:52<00:17, 154.32it/s]Running 10000 simulations.:  73%|███████▎  | 7275/10000 [00:52<00:17, 154.12it/s]Running 10000 simulations.:  73%|███████▎  | 7291/10000 [00:52<00:17, 153.94it/s]Running 10000 simulations.:  73%|███████▎  | 7307/10000 [00:52<00:17, 153.57it/s]Running 10000 simulations.:  73%|███████▎  | 7323/10000 [00:52<00:17, 153.03it/s]Running 10000 simulations.:  73%|███████▎  | 7339/10000 [00:52<00:17, 153.56it/s]Running 10000 simulations.:  74%|███████▎  | 7355/10000 [00:52<00:17, 153.78it/s]Running 10000 simulations.:  74%|███████▎  | 7371/10000 [00:52<00:17, 154.24it/s]Running 10000 simulations.:  74%|███████▍  | 7387/10000 [00:52<00:16, 154.28it/s]Running 10000 simulations.:  74%|███████▍  | 7403/10000 [00:52<00:16, 153.69it/s]Running 10000 simulations.:  74%|███████▍  | 7419/10000 [00:53<00:16, 152.64it/s]Running 10000 simulations.:  74%|███████▍  | 7435/10000 [00:53<00:16, 153.18it/s]Running 10000 simulations.:  75%|███████▍  | 7451/10000 [00:53<00:16, 153.47it/s]Running 10000 simulations.:  75%|███████▍  | 7467/10000 [00:53<00:16, 153.34it/s]Running 10000 simulations.:  75%|███████▍  | 7483/10000 [00:53<00:16, 153.51it/s]Running 10000 simulations.:  75%|███████▍  | 7499/10000 [00:53<00:16, 152.97it/s]Running 10000 simulations.:  75%|███████▌  | 7515/10000 [00:53<00:16, 148.15it/s]Running 10000 simulations.:  75%|███████▌  | 7530/10000 [00:53<00:16, 146.16it/s]Running 10000 simulations.:  75%|███████▌  | 7545/10000 [00:53<00:16, 145.55it/s]Running 10000 simulations.:  76%|███████▌  | 7560/10000 [00:54<00:17, 142.57it/s]Running 10000 simulations.:  76%|███████▌  | 7575/10000 [00:54<00:17, 139.98it/s]Running 10000 simulations.:  76%|███████▌  | 7590/10000 [00:54<00:17, 138.33it/s]Running 10000 simulations.:  76%|███████▌  | 7605/10000 [00:54<00:17, 139.50it/s]Running 10000 simulations.:  76%|███████▌  | 7620/10000 [00:54<00:16, 142.38it/s]Running 10000 simulations.:  76%|███████▋  | 7635/10000 [00:54<00:16, 139.99it/s]Running 10000 simulations.:  76%|███████▋  | 7650/10000 [00:54<00:16, 139.54it/s]Running 10000 simulations.:  77%|███████▋  | 7665/10000 [00:54<00:16, 139.95it/s]Running 10000 simulations.:  77%|███████▋  | 7680/10000 [00:54<00:16, 140.74it/s]Running 10000 simulations.:  77%|███████▋  | 7695/10000 [00:54<00:16, 140.13it/s]Running 10000 simulations.:  77%|███████▋  | 7710/10000 [00:55<00:16, 141.17it/s]Running 10000 simulations.:  77%|███████▋  | 7725/10000 [00:55<00:16, 139.01it/s]Running 10000 simulations.:  77%|███████▋  | 7740/10000 [00:55<00:16, 139.49it/s]Running 10000 simulations.:  78%|███████▊  | 7754/10000 [00:55<00:16, 136.27it/s]Running 10000 simulations.:  78%|███████▊  | 7769/10000 [00:55<00:16, 138.09it/s]Running 10000 simulations.:  78%|███████▊  | 7784/10000 [00:55<00:15, 139.71it/s]Running 10000 simulations.:  78%|███████▊  | 7799/10000 [00:55<00:15, 141.00it/s]Running 10000 simulations.:  78%|███████▊  | 7814/10000 [00:55<00:15, 139.98it/s]Running 10000 simulations.:  78%|███████▊  | 7829/10000 [00:55<00:15, 139.21it/s]Running 10000 simulations.:  78%|███████▊  | 7844/10000 [00:56<00:15, 140.60it/s]Running 10000 simulations.:  79%|███████▊  | 7859/10000 [00:56<00:15, 141.74it/s]Running 10000 simulations.:  79%|███████▊  | 7874/10000 [00:56<00:15, 141.71it/s]Running 10000 simulations.:  79%|███████▉  | 7889/10000 [00:56<00:14, 141.04it/s]Running 10000 simulations.:  79%|███████▉  | 7904/10000 [00:56<00:14, 139.85it/s]Running 10000 simulations.:  79%|███████▉  | 7918/10000 [00:56<00:14, 138.88it/s]Running 10000 simulations.:  79%|███████▉  | 7933/10000 [00:56<00:14, 140.21it/s]Running 10000 simulations.:  79%|███████▉  | 7948/10000 [00:56<00:14, 140.98it/s]Running 10000 simulations.:  80%|███████▉  | 7963/10000 [00:56<00:14, 141.12it/s]Running 10000 simulations.:  80%|███████▉  | 7978/10000 [00:56<00:14, 141.41it/s]Running 10000 simulations.:  80%|███████▉  | 7993/10000 [00:57<00:14, 140.93it/s]Running 10000 simulations.:  80%|████████  | 8008/10000 [00:57<00:14, 141.08it/s]Running 10000 simulations.:  80%|████████  | 8023/10000 [00:57<00:13, 141.56it/s]Running 10000 simulations.:  80%|████████  | 8038/10000 [00:57<00:13, 140.85it/s]Running 10000 simulations.:  81%|████████  | 8053/10000 [00:57<00:13, 140.68it/s]Running 10000 simulations.:  81%|████████  | 8068/10000 [00:57<00:13, 141.60it/s]Running 10000 simulations.:  81%|████████  | 8083/10000 [00:57<00:13, 141.72it/s]Running 10000 simulations.:  81%|████████  | 8098/10000 [00:57<00:13, 141.95it/s]Running 10000 simulations.:  81%|████████  | 8113/10000 [00:57<00:13, 141.04it/s]Running 10000 simulations.:  81%|████████▏ | 8128/10000 [00:58<00:13, 141.83it/s]Running 10000 simulations.:  81%|████████▏ | 8143/10000 [00:58<00:13, 140.94it/s]Running 10000 simulations.:  82%|████████▏ | 8158/10000 [00:58<00:13, 141.50it/s]Running 10000 simulations.:  82%|████████▏ | 8173/10000 [00:58<00:13, 132.59it/s]Running 10000 simulations.:  82%|████████▏ | 8188/10000 [00:58<00:13, 135.92it/s]Running 10000 simulations.:  82%|████████▏ | 8203/10000 [00:58<00:13, 137.86it/s]Running 10000 simulations.:  82%|████████▏ | 8217/10000 [00:58<00:12, 138.46it/s]Running 10000 simulations.:  82%|████████▏ | 8232/10000 [00:58<00:12, 139.46it/s]Running 10000 simulations.:  82%|████████▏ | 8246/10000 [00:58<00:12, 138.55it/s]Running 10000 simulations.:  83%|████████▎ | 8261/10000 [00:59<00:12, 139.91it/s]Running 10000 simulations.:  83%|████████▎ | 8276/10000 [00:59<00:12, 141.22it/s]Running 10000 simulations.:  83%|████████▎ | 8291/10000 [00:59<00:12, 141.43it/s]Running 10000 simulations.:  83%|████████▎ | 8306/10000 [00:59<00:12, 140.89it/s]Running 10000 simulations.:  83%|████████▎ | 8321/10000 [00:59<00:11, 140.07it/s]Running 10000 simulations.:  83%|████████▎ | 8336/10000 [00:59<00:11, 141.03it/s]Running 10000 simulations.:  84%|████████▎ | 8351/10000 [00:59<00:11, 141.28it/s]Running 10000 simulations.:  84%|████████▎ | 8366/10000 [00:59<00:11, 142.14it/s]Running 10000 simulations.:  84%|████████▍ | 8381/10000 [00:59<00:11, 141.22it/s]Running 10000 simulations.:  84%|████████▍ | 8396/10000 [00:59<00:11, 139.92it/s]Running 10000 simulations.:  84%|████████▍ | 8410/10000 [01:00<00:11, 139.32it/s]Running 10000 simulations.:  84%|████████▍ | 8424/10000 [01:00<00:11, 138.47it/s]Running 10000 simulations.:  84%|████████▍ | 8439/10000 [01:00<00:11, 140.00it/s]Running 10000 simulations.:  85%|████████▍ | 8454/10000 [01:00<00:11, 139.55it/s]Running 10000 simulations.:  85%|████████▍ | 8468/10000 [01:00<00:11, 138.27it/s]Running 10000 simulations.:  85%|████████▍ | 8483/10000 [01:00<00:10, 139.37it/s]Running 10000 simulations.:  85%|████████▍ | 8498/10000 [01:00<00:10, 140.72it/s]Running 10000 simulations.:  85%|████████▌ | 8513/10000 [01:00<00:10, 141.26it/s]Running 10000 simulations.:  85%|████████▌ | 8528/10000 [01:00<00:10, 141.67it/s]Running 10000 simulations.:  85%|████████▌ | 8543/10000 [01:01<00:10, 142.42it/s]Running 10000 simulations.:  86%|████████▌ | 8558/10000 [01:01<00:10, 140.78it/s]Running 10000 simulations.:  86%|████████▌ | 8573/10000 [01:01<00:10, 141.16it/s]Running 10000 simulations.:  86%|████████▌ | 8588/10000 [01:01<00:10, 140.77it/s]Running 10000 simulations.:  86%|████████▌ | 8603/10000 [01:01<00:10, 139.31it/s]Running 10000 simulations.:  86%|████████▌ | 8618/10000 [01:01<00:09, 139.82it/s]Running 10000 simulations.:  86%|████████▋ | 8633/10000 [01:01<00:09, 140.72it/s]Running 10000 simulations.:  86%|████████▋ | 8648/10000 [01:01<00:09, 135.80it/s]Running 10000 simulations.:  87%|████████▋ | 8662/10000 [01:01<00:11, 120.03it/s]Running 10000 simulations.:  87%|████████▋ | 8675/10000 [01:02<00:11, 110.59it/s]Running 10000 simulations.:  87%|████████▋ | 8687/10000 [01:02<00:12, 102.72it/s]Running 10000 simulations.:  87%|████████▋ | 8698/10000 [01:02<00:13, 99.73it/s] Running 10000 simulations.:  87%|████████▋ | 8709/10000 [01:02<00:13, 96.91it/s]Running 10000 simulations.:  87%|████████▋ | 8719/10000 [01:02<00:13, 96.05it/s]Running 10000 simulations.:  87%|████████▋ | 8729/10000 [01:02<00:13, 95.28it/s]Running 10000 simulations.:  87%|████████▋ | 8739/10000 [01:02<00:13, 95.12it/s]Running 10000 simulations.:  87%|████████▋ | 8749/10000 [01:02<00:13, 95.18it/s]Running 10000 simulations.:  88%|████████▊ | 8759/10000 [01:02<00:13, 93.46it/s]Running 10000 simulations.:  88%|████████▊ | 8769/10000 [01:03<00:13, 93.34it/s]Running 10000 simulations.:  88%|████████▊ | 8779/10000 [01:03<00:13, 93.84it/s]Running 10000 simulations.:  88%|████████▊ | 8789/10000 [01:03<00:13, 93.06it/s]Running 10000 simulations.:  88%|████████▊ | 8799/10000 [01:03<00:13, 90.57it/s]Running 10000 simulations.:  88%|████████▊ | 8809/10000 [01:03<00:13, 91.50it/s]Running 10000 simulations.:  88%|████████▊ | 8819/10000 [01:03<00:12, 93.28it/s]Running 10000 simulations.:  88%|████████▊ | 8834/10000 [01:03<00:11, 104.40it/s]Running 10000 simulations.:  88%|████████▊ | 8849/10000 [01:03<00:10, 113.86it/s]Running 10000 simulations.:  89%|████████▊ | 8864/10000 [01:03<00:09, 121.36it/s]Running 10000 simulations.:  89%|████████▉ | 8879/10000 [01:04<00:08, 126.85it/s]Running 10000 simulations.:  89%|████████▉ | 8894/10000 [01:04<00:08, 131.74it/s]Running 10000 simulations.:  89%|████████▉ | 8909/10000 [01:04<00:08, 135.73it/s]Running 10000 simulations.:  89%|████████▉ | 8924/10000 [01:04<00:07, 138.46it/s]Running 10000 simulations.:  89%|████████▉ | 8939/10000 [01:04<00:07, 140.21it/s]Running 10000 simulations.:  90%|████████▉ | 8954/10000 [01:04<00:07, 141.93it/s]Running 10000 simulations.:  90%|████████▉ | 8969/10000 [01:04<00:07, 142.90it/s]Running 10000 simulations.:  90%|████████▉ | 8984/10000 [01:04<00:07, 143.60it/s]Running 10000 simulations.:  90%|████████▉ | 8999/10000 [01:04<00:06, 143.93it/s]Running 10000 simulations.:  90%|█████████ | 9014/10000 [01:04<00:06, 143.65it/s]Running 10000 simulations.:  90%|█████████ | 9029/10000 [01:05<00:06, 143.64it/s]Running 10000 simulations.:  90%|█████████ | 9044/10000 [01:05<00:06, 144.12it/s]Running 10000 simulations.:  91%|█████████ | 9059/10000 [01:05<00:06, 144.09it/s]Running 10000 simulations.:  91%|█████████ | 9074/10000 [01:05<00:06, 144.59it/s]Running 10000 simulations.:  91%|█████████ | 9089/10000 [01:05<00:06, 144.59it/s]Running 10000 simulations.:  91%|█████████ | 9104/10000 [01:05<00:06, 144.07it/s]Running 10000 simulations.:  91%|█████████ | 9119/10000 [01:05<00:06, 143.57it/s]Running 10000 simulations.:  91%|█████████▏| 9134/10000 [01:05<00:06, 143.51it/s]Running 10000 simulations.:  91%|█████████▏| 9149/10000 [01:05<00:05, 143.52it/s]Running 10000 simulations.:  92%|█████████▏| 9164/10000 [01:06<00:05, 144.16it/s]Running 10000 simulations.:  92%|█████████▏| 9179/10000 [01:06<00:05, 144.54it/s]Running 10000 simulations.:  92%|█████████▏| 9194/10000 [01:06<00:05, 143.91it/s]Running 10000 simulations.:  92%|█████████▏| 9209/10000 [01:06<00:05, 143.67it/s]Running 10000 simulations.:  92%|█████████▏| 9224/10000 [01:06<00:05, 144.04it/s]Running 10000 simulations.:  92%|█████████▏| 9239/10000 [01:06<00:05, 144.22it/s]Running 10000 simulations.:  93%|█████████▎| 9254/10000 [01:06<00:05, 144.41it/s]Running 10000 simulations.:  93%|█████████▎| 9269/10000 [01:06<00:05, 144.39it/s]Running 10000 simulations.:  93%|█████████▎| 9284/10000 [01:06<00:04, 143.72it/s]Running 10000 simulations.:  93%|█████████▎| 9299/10000 [01:06<00:04, 143.66it/s]Running 10000 simulations.:  93%|█████████▎| 9314/10000 [01:07<00:04, 143.87it/s]Running 10000 simulations.:  93%|█████████▎| 9329/10000 [01:07<00:04, 144.31it/s]Running 10000 simulations.:  93%|█████████▎| 9344/10000 [01:07<00:04, 143.99it/s]Running 10000 simulations.:  94%|█████████▎| 9359/10000 [01:07<00:04, 143.70it/s]Running 10000 simulations.:  94%|█████████▎| 9374/10000 [01:07<00:04, 143.26it/s]Running 10000 simulations.:  94%|█████████▍| 9389/10000 [01:07<00:04, 143.04it/s]Running 10000 simulations.:  94%|█████████▍| 9404/10000 [01:07<00:04, 143.19it/s]Running 10000 simulations.:  94%|█████████▍| 9419/10000 [01:07<00:04, 143.33it/s]Running 10000 simulations.:  94%|█████████▍| 9434/10000 [01:07<00:03, 143.33it/s]Running 10000 simulations.:  94%|█████████▍| 9449/10000 [01:08<00:03, 144.11it/s]Running 10000 simulations.:  95%|█████████▍| 9464/10000 [01:08<00:03, 144.15it/s]Running 10000 simulations.:  95%|█████████▍| 9479/10000 [01:08<00:03, 143.43it/s]Running 10000 simulations.:  95%|█████████▍| 9494/10000 [01:08<00:03, 139.47it/s]Running 10000 simulations.:  95%|█████████▌| 9509/10000 [01:08<00:03, 141.20it/s]Running 10000 simulations.:  95%|█████████▌| 9524/10000 [01:08<00:03, 142.73it/s]Running 10000 simulations.:  95%|█████████▌| 9539/10000 [01:08<00:03, 143.39it/s]Running 10000 simulations.:  96%|█████████▌| 9554/10000 [01:08<00:03, 143.80it/s]Running 10000 simulations.:  96%|█████████▌| 9569/10000 [01:08<00:03, 143.42it/s]Running 10000 simulations.:  96%|█████████▌| 9584/10000 [01:08<00:02, 143.01it/s]Running 10000 simulations.:  96%|█████████▌| 9599/10000 [01:09<00:02, 143.24it/s]Running 10000 simulations.:  96%|█████████▌| 9614/10000 [01:09<00:02, 143.34it/s]Running 10000 simulations.:  96%|█████████▋| 9629/10000 [01:09<00:02, 143.45it/s]Running 10000 simulations.:  96%|█████████▋| 9644/10000 [01:09<00:02, 143.84it/s]Running 10000 simulations.:  97%|█████████▋| 9659/10000 [01:09<00:02, 143.71it/s]Running 10000 simulations.:  97%|█████████▋| 9674/10000 [01:09<00:02, 143.36it/s]Running 10000 simulations.:  97%|█████████▋| 9689/10000 [01:09<00:02, 143.52it/s]Running 10000 simulations.:  97%|█████████▋| 9704/10000 [01:09<00:02, 143.75it/s]Running 10000 simulations.:  97%|█████████▋| 9719/10000 [01:09<00:01, 143.78it/s]Running 10000 simulations.:  97%|█████████▋| 9734/10000 [01:09<00:01, 143.85it/s]Running 10000 simulations.:  97%|█████████▋| 9749/10000 [01:10<00:01, 143.69it/s]Running 10000 simulations.:  98%|█████████▊| 9764/10000 [01:10<00:01, 143.16it/s]Running 10000 simulations.:  98%|█████████▊| 9779/10000 [01:10<00:01, 143.63it/s]Running 10000 simulations.:  98%|█████████▊| 9794/10000 [01:10<00:01, 143.29it/s]Running 10000 simulations.:  98%|█████████▊| 9809/10000 [01:10<00:01, 142.81it/s]Running 10000 simulations.:  98%|█████████▊| 9824/10000 [01:10<00:01, 143.00it/s]Running 10000 simulations.:  98%|█████████▊| 9839/10000 [01:10<00:01, 142.09it/s]Running 10000 simulations.:  99%|█████████▊| 9854/10000 [01:10<00:01, 142.19it/s]Running 10000 simulations.:  99%|█████████▊| 9869/10000 [01:10<00:00, 143.23it/s]Running 10000 simulations.:  99%|█████████▉| 9884/10000 [01:11<00:00, 143.19it/s]Running 10000 simulations.:  99%|█████████▉| 9900/10000 [01:11<00:00, 146.42it/s]Running 10000 simulations.:  99%|█████████▉| 9916/10000 [01:11<00:00, 148.07it/s]Running 10000 simulations.:  99%|█████████▉| 9932/10000 [01:11<00:00, 148.71it/s]Running 10000 simulations.:  99%|█████████▉| 9947/10000 [01:11<00:00, 145.24it/s]Running 10000 simulations.: 100%|█████████▉| 9962/10000 [01:11<00:00, 143.63it/s]Running 10000 simulations.: 100%|█████████▉| 9977/10000 [01:11<00:00, 141.85it/s]Running 10000 simulations.: 100%|█████████▉| 9992/10000 [01:11<00:00, 140.97it/s]Running 10000 simulations.: 100%|██████████| 10000/10000 [01:11<00:00, 139.17it/s]
Running 10000 simulations.:   0%|          | 0/10000 [00:00<?, ?it/s]Running 10000 simulations.:   0%|          | 16/10000 [00:00<01:05, 152.88it/s]Running 10000 simulations.:   0%|          | 32/10000 [00:00<01:05, 152.93it/s]Running 10000 simulations.:   0%|          | 48/10000 [00:00<01:05, 152.79it/s]Running 10000 simulations.:   1%|          | 64/10000 [00:00<01:05, 152.40it/s]Running 10000 simulations.:   1%|          | 80/10000 [00:00<01:04, 152.90it/s]Running 10000 simulations.:   1%|          | 96/10000 [00:00<01:04, 152.83it/s]Running 10000 simulations.:   1%|          | 112/10000 [00:00<01:04, 153.05it/s]Running 10000 simulations.:   1%|▏         | 128/10000 [00:00<01:04, 153.29it/s]Running 10000 simulations.:   1%|▏         | 144/10000 [00:00<01:04, 152.55it/s]Running 10000 simulations.:   2%|▏         | 159/10000 [00:01<01:04, 151.41it/s]Running 10000 simulations.:   2%|▏         | 175/10000 [00:01<01:04, 151.78it/s]Running 10000 simulations.:   2%|▏         | 191/10000 [00:01<01:04, 152.11it/s]Running 10000 simulations.:   2%|▏         | 207/10000 [00:01<01:04, 152.61it/s]Running 10000 simulations.:   2%|▏         | 223/10000 [00:01<01:03, 153.23it/s]Running 10000 simulations.:   2%|▏         | 239/10000 [00:01<01:03, 152.69it/s]Running 10000 simulations.:   3%|▎         | 255/10000 [00:01<01:04, 150.21it/s]Running 10000 simulations.:   3%|▎         | 271/10000 [00:01<01:04, 150.28it/s]Running 10000 simulations.:   3%|▎         | 287/10000 [00:01<01:04, 150.91it/s]Running 10000 simulations.:   3%|▎         | 303/10000 [00:01<01:04, 150.38it/s]Running 10000 simulations.:   3%|▎         | 319/10000 [00:02<01:04, 149.74it/s]Running 10000 simulations.:   3%|▎         | 334/10000 [00:02<01:04, 149.73it/s]Running 10000 simulations.:   4%|▎         | 350/10000 [00:02<01:04, 150.72it/s]Running 10000 simulations.:   4%|▎         | 366/10000 [00:02<01:03, 151.43it/s]Running 10000 simulations.:   4%|▍         | 382/10000 [00:02<01:03, 151.25it/s]Running 10000 simulations.:   4%|▍         | 398/10000 [00:02<01:03, 151.12it/s]Running 10000 simulations.:   4%|▍         | 414/10000 [00:02<01:03, 151.95it/s]Running 10000 simulations.:   4%|▍         | 430/10000 [00:02<01:03, 151.84it/s]Running 10000 simulations.:   4%|▍         | 446/10000 [00:02<01:02, 152.14it/s]Running 10000 simulations.:   5%|▍         | 462/10000 [00:03<01:02, 152.04it/s]Running 10000 simulations.:   5%|▍         | 478/10000 [00:03<01:03, 151.06it/s]Running 10000 simulations.:   5%|▍         | 494/10000 [00:03<01:03, 150.79it/s]Running 10000 simulations.:   5%|▌         | 510/10000 [00:03<01:03, 150.53it/s]Running 10000 simulations.:   5%|▌         | 526/10000 [00:03<01:03, 150.06it/s]Running 10000 simulations.:   5%|▌         | 542/10000 [00:03<01:06, 142.69it/s]Running 10000 simulations.:   6%|▌         | 557/10000 [00:03<01:05, 144.12it/s]Running 10000 simulations.:   6%|▌         | 573/10000 [00:03<01:04, 145.87it/s]Running 10000 simulations.:   6%|▌         | 588/10000 [00:03<01:04, 146.94it/s]Running 10000 simulations.:   6%|▌         | 604/10000 [00:04<01:03, 147.89it/s]Running 10000 simulations.:   6%|▌         | 620/10000 [00:04<01:03, 148.52it/s]Running 10000 simulations.:   6%|▋         | 635/10000 [00:04<01:02, 148.95it/s]Running 10000 simulations.:   6%|▋         | 650/10000 [00:04<01:03, 147.75it/s]Running 10000 simulations.:   7%|▋         | 665/10000 [00:04<01:02, 148.26it/s]Running 10000 simulations.:   7%|▋         | 681/10000 [00:04<01:02, 148.92it/s]Running 10000 simulations.:   7%|▋         | 697/10000 [00:04<01:02, 149.38it/s]Running 10000 simulations.:   7%|▋         | 712/10000 [00:04<01:02, 149.49it/s]Running 10000 simulations.:   7%|▋         | 728/10000 [00:04<01:01, 149.76it/s]Running 10000 simulations.:   7%|▋         | 743/10000 [00:04<01:02, 148.89it/s]Running 10000 simulations.:   8%|▊         | 759/10000 [00:05<01:01, 149.34it/s]Running 10000 simulations.:   8%|▊         | 775/10000 [00:05<01:01, 149.90it/s]Running 10000 simulations.:   8%|▊         | 790/10000 [00:05<01:01, 149.16it/s]Running 10000 simulations.:   8%|▊         | 805/10000 [00:05<01:01, 149.18it/s]Running 10000 simulations.:   8%|▊         | 821/10000 [00:05<01:01, 150.09it/s]Running 10000 simulations.:   8%|▊         | 837/10000 [00:05<01:01, 149.94it/s]Running 10000 simulations.:   9%|▊         | 853/10000 [00:05<01:00, 150.68it/s]Running 10000 simulations.:   9%|▊         | 869/10000 [00:05<01:00, 151.35it/s]Running 10000 simulations.:   9%|▉         | 885/10000 [00:05<01:00, 151.31it/s]Running 10000 simulations.:   9%|▉         | 901/10000 [00:05<01:00, 150.24it/s]Running 10000 simulations.:   9%|▉         | 917/10000 [00:06<01:00, 149.57it/s]Running 10000 simulations.:   9%|▉         | 932/10000 [00:06<01:00, 149.26it/s]Running 10000 simulations.:   9%|▉         | 948/10000 [00:06<01:00, 149.64it/s]Running 10000 simulations.:  10%|▉         | 964/10000 [00:06<01:00, 150.37it/s]Running 10000 simulations.:  10%|▉         | 980/10000 [00:06<00:59, 150.67it/s]Running 10000 simulations.:  10%|▉         | 996/10000 [00:06<01:00, 149.98it/s]Running 10000 simulations.:  10%|█         | 1012/10000 [00:06<01:00, 149.10it/s]Running 10000 simulations.:  10%|█         | 1027/10000 [00:06<01:01, 145.89it/s]Running 10000 simulations.:  10%|█         | 1042/10000 [00:06<01:03, 140.21it/s]Running 10000 simulations.:  11%|█         | 1057/10000 [00:07<01:05, 137.45it/s]Running 10000 simulations.:  11%|█         | 1071/10000 [00:07<01:05, 137.31it/s]Running 10000 simulations.:  11%|█         | 1085/10000 [00:07<01:04, 138.02it/s]Running 10000 simulations.:  11%|█         | 1099/10000 [00:07<01:04, 138.49it/s]Running 10000 simulations.:  11%|█         | 1113/10000 [00:07<01:04, 138.28it/s]Running 10000 simulations.:  11%|█▏        | 1127/10000 [00:07<01:04, 136.52it/s]Running 10000 simulations.:  11%|█▏        | 1141/10000 [00:07<01:05, 136.16it/s]Running 10000 simulations.:  12%|█▏        | 1155/10000 [00:07<01:05, 135.21it/s]Running 10000 simulations.:  12%|█▏        | 1169/10000 [00:07<01:05, 135.09it/s]Running 10000 simulations.:  12%|█▏        | 1183/10000 [00:08<01:05, 135.53it/s]Running 10000 simulations.:  12%|█▏        | 1198/10000 [00:08<01:04, 137.46it/s]Running 10000 simulations.:  12%|█▏        | 1212/10000 [00:08<01:03, 137.51it/s]Running 10000 simulations.:  12%|█▏        | 1227/10000 [00:08<01:03, 138.12it/s]Running 10000 simulations.:  12%|█▏        | 1241/10000 [00:08<01:03, 138.10it/s]Running 10000 simulations.:  13%|█▎        | 1255/10000 [00:08<01:03, 137.25it/s]Running 10000 simulations.:  13%|█▎        | 1270/10000 [00:08<01:02, 138.91it/s]Running 10000 simulations.:  13%|█▎        | 1284/10000 [00:08<01:02, 139.19it/s]Running 10000 simulations.:  13%|█▎        | 1299/10000 [00:08<01:02, 139.60it/s]Running 10000 simulations.:  13%|█▎        | 1313/10000 [00:08<01:03, 137.79it/s]Running 10000 simulations.:  13%|█▎        | 1327/10000 [00:09<01:03, 137.21it/s]Running 10000 simulations.:  13%|█▎        | 1341/10000 [00:09<01:03, 136.67it/s]Running 10000 simulations.:  14%|█▎        | 1355/10000 [00:09<01:03, 137.06it/s]Running 10000 simulations.:  14%|█▎        | 1370/10000 [00:09<01:02, 138.16it/s]Running 10000 simulations.:  14%|█▍        | 1385/10000 [00:09<01:02, 138.86it/s]Running 10000 simulations.:  14%|█▍        | 1399/10000 [00:09<01:01, 139.07it/s]Running 10000 simulations.:  14%|█▍        | 1413/10000 [00:09<01:02, 137.28it/s]Running 10000 simulations.:  14%|█▍        | 1427/10000 [00:09<01:02, 137.31it/s]Running 10000 simulations.:  14%|█▍        | 1441/10000 [00:09<01:02, 136.85it/s]Running 10000 simulations.:  15%|█▍        | 1455/10000 [00:09<01:02, 137.41it/s]Running 10000 simulations.:  15%|█▍        | 1469/10000 [00:10<01:01, 138.02it/s]Running 10000 simulations.:  15%|█▍        | 1484/10000 [00:10<01:01, 138.85it/s]Running 10000 simulations.:  15%|█▍        | 1498/10000 [00:10<01:01, 137.88it/s]Running 10000 simulations.:  15%|█▌        | 1512/10000 [00:10<01:01, 137.14it/s]Running 10000 simulations.:  15%|█▌        | 1526/10000 [00:10<01:02, 136.40it/s]Running 10000 simulations.:  15%|█▌        | 1540/10000 [00:10<01:01, 136.97it/s]Running 10000 simulations.:  16%|█▌        | 1554/10000 [00:10<01:01, 137.37it/s]Running 10000 simulations.:  16%|█▌        | 1569/10000 [00:10<01:00, 138.72it/s]Running 10000 simulations.:  16%|█▌        | 1584/10000 [00:10<01:00, 139.34it/s]Running 10000 simulations.:  16%|█▌        | 1598/10000 [00:11<01:00, 138.01it/s]Running 10000 simulations.:  16%|█▌        | 1612/10000 [00:11<01:01, 136.52it/s]Running 10000 simulations.:  16%|█▋        | 1626/10000 [00:11<01:01, 137.03it/s]Running 10000 simulations.:  16%|█▋        | 1641/10000 [00:11<01:00, 138.29it/s]Running 10000 simulations.:  17%|█▋        | 1656/10000 [00:11<01:00, 138.83it/s]Running 10000 simulations.:  17%|█▋        | 1671/10000 [00:11<00:59, 139.24it/s]Running 10000 simulations.:  17%|█▋        | 1685/10000 [00:11<01:00, 138.03it/s]Running 10000 simulations.:  17%|█▋        | 1699/10000 [00:11<01:01, 135.78it/s]Running 10000 simulations.:  17%|█▋        | 1714/10000 [00:11<01:00, 137.22it/s]Running 10000 simulations.:  17%|█▋        | 1729/10000 [00:11<00:59, 138.42it/s]Running 10000 simulations.:  17%|█▋        | 1743/10000 [00:12<00:59, 137.96it/s]Running 10000 simulations.:  18%|█▊        | 1757/10000 [00:12<00:59, 137.61it/s]Running 10000 simulations.:  18%|█▊        | 1772/10000 [00:12<00:59, 138.58it/s]Running 10000 simulations.:  18%|█▊        | 1786/10000 [00:12<01:00, 136.81it/s]Running 10000 simulations.:  18%|█▊        | 1800/10000 [00:12<01:00, 136.50it/s]Running 10000 simulations.:  18%|█▊        | 1814/10000 [00:12<01:00, 136.04it/s]Running 10000 simulations.:  18%|█▊        | 1828/10000 [00:12<01:00, 135.88it/s]Running 10000 simulations.:  18%|█▊        | 1842/10000 [00:12<01:00, 135.74it/s]Running 10000 simulations.:  19%|█▊        | 1857/10000 [00:12<00:59, 137.16it/s]Running 10000 simulations.:  19%|█▊        | 1872/10000 [00:12<00:58, 138.21it/s]Running 10000 simulations.:  19%|█▉        | 1886/10000 [00:13<00:58, 138.42it/s]Running 10000 simulations.:  19%|█▉        | 1900/10000 [00:13<00:58, 138.79it/s]Running 10000 simulations.:  19%|█▉        | 1914/10000 [00:13<00:58, 139.11it/s]Running 10000 simulations.:  19%|█▉        | 1928/10000 [00:13<00:59, 134.83it/s]Running 10000 simulations.:  19%|█▉        | 1942/10000 [00:13<00:59, 134.86it/s]Running 10000 simulations.:  20%|█▉        | 1957/10000 [00:13<00:58, 136.45it/s]Running 10000 simulations.:  20%|█▉        | 1972/10000 [00:13<00:58, 137.93it/s]Running 10000 simulations.:  20%|█▉        | 1987/10000 [00:13<00:57, 138.45it/s]Running 10000 simulations.:  20%|██        | 2002/10000 [00:13<00:57, 139.31it/s]Running 10000 simulations.:  20%|██        | 2016/10000 [00:14<00:57, 138.02it/s]Running 10000 simulations.:  20%|██        | 2030/10000 [00:14<00:58, 136.95it/s]Running 10000 simulations.:  20%|██        | 2045/10000 [00:14<00:57, 138.05it/s]Running 10000 simulations.:  21%|██        | 2060/10000 [00:14<00:57, 138.70it/s]Running 10000 simulations.:  21%|██        | 2074/10000 [00:14<00:57, 138.77it/s]Running 10000 simulations.:  21%|██        | 2088/10000 [00:14<00:56, 139.02it/s]Running 10000 simulations.:  21%|██        | 2102/10000 [00:14<00:57, 137.23it/s]Running 10000 simulations.:  21%|██        | 2116/10000 [00:14<00:57, 136.11it/s]Running 10000 simulations.:  21%|██▏       | 2130/10000 [00:14<00:57, 136.95it/s]Running 10000 simulations.:  21%|██▏       | 2145/10000 [00:14<00:56, 138.88it/s]Running 10000 simulations.:  22%|██▏       | 2160/10000 [00:15<00:56, 139.67it/s]Running 10000 simulations.:  22%|██▏       | 2175/10000 [00:15<00:55, 140.41it/s]Running 10000 simulations.:  22%|██▏       | 2190/10000 [00:15<00:56, 138.72it/s]Running 10000 simulations.:  22%|██▏       | 2204/10000 [00:15<00:56, 137.86it/s]Running 10000 simulations.:  22%|██▏       | 2218/10000 [00:15<00:56, 137.68it/s]Running 10000 simulations.:  22%|██▏       | 2232/10000 [00:15<00:56, 137.74it/s]Running 10000 simulations.:  22%|██▏       | 2246/10000 [00:15<00:56, 138.21it/s]Running 10000 simulations.:  23%|██▎       | 2260/10000 [00:15<00:55, 138.51it/s]Running 10000 simulations.:  23%|██▎       | 2274/10000 [00:15<00:56, 136.26it/s]Running 10000 simulations.:  23%|██▎       | 2288/10000 [00:16<00:56, 135.46it/s]Running 10000 simulations.:  23%|██▎       | 2302/10000 [00:16<00:57, 134.14it/s]Running 10000 simulations.:  23%|██▎       | 2317/10000 [00:16<00:56, 136.55it/s]Running 10000 simulations.:  23%|██▎       | 2332/10000 [00:16<00:54, 139.88it/s]Running 10000 simulations.:  23%|██▎       | 2347/10000 [00:16<00:54, 141.51it/s]Running 10000 simulations.:  24%|██▎       | 2363/10000 [00:16<00:52, 144.30it/s]Running 10000 simulations.:  24%|██▍       | 2378/10000 [00:16<00:52, 143.92it/s]Running 10000 simulations.:  24%|██▍       | 2393/10000 [00:16<00:52, 144.74it/s]Running 10000 simulations.:  24%|██▍       | 2408/10000 [00:16<00:52, 143.57it/s]Running 10000 simulations.:  24%|██▍       | 2423/10000 [00:16<00:53, 141.15it/s]Running 10000 simulations.:  24%|██▍       | 2438/10000 [00:17<00:53, 140.33it/s]Running 10000 simulations.:  25%|██▍       | 2453/10000 [00:17<00:54, 138.18it/s]Running 10000 simulations.:  25%|██▍       | 2467/10000 [00:17<00:54, 137.52it/s]Running 10000 simulations.:  25%|██▍       | 2481/10000 [00:17<00:54, 137.37it/s]Running 10000 simulations.:  25%|██▍       | 2495/10000 [00:17<00:55, 136.38it/s]Running 10000 simulations.:  25%|██▌       | 2510/10000 [00:17<00:54, 137.67it/s]Running 10000 simulations.:  25%|██▌       | 2525/10000 [00:17<00:53, 138.76it/s]Running 10000 simulations.:  25%|██▌       | 2539/10000 [00:17<00:54, 137.58it/s]Running 10000 simulations.:  26%|██▌       | 2553/10000 [00:17<00:54, 136.92it/s]Running 10000 simulations.:  26%|██▌       | 2567/10000 [00:18<00:54, 137.07it/s]Running 10000 simulations.:  26%|██▌       | 2581/10000 [00:18<00:54, 136.78it/s]Running 10000 simulations.:  26%|██▌       | 2596/10000 [00:18<00:53, 138.18it/s]Running 10000 simulations.:  26%|██▌       | 2612/10000 [00:18<00:51, 143.80it/s]Running 10000 simulations.:  26%|██▋       | 2628/10000 [00:18<00:49, 147.77it/s]Running 10000 simulations.:  26%|██▋       | 2644/10000 [00:18<00:49, 149.17it/s]Running 10000 simulations.:  27%|██▋       | 2660/10000 [00:18<00:48, 150.81it/s]Running 10000 simulations.:  27%|██▋       | 2676/10000 [00:18<00:48, 151.13it/s]Running 10000 simulations.:  27%|██▋       | 2692/10000 [00:18<00:48, 151.05it/s]Running 10000 simulations.:  27%|██▋       | 2708/10000 [00:18<00:48, 151.40it/s]Running 10000 simulations.:  27%|██▋       | 2724/10000 [00:19<00:48, 151.46it/s]Running 10000 simulations.:  27%|██▋       | 2740/10000 [00:19<00:48, 150.44it/s]Running 10000 simulations.:  28%|██▊       | 2756/10000 [00:19<00:48, 150.20it/s]Running 10000 simulations.:  28%|██▊       | 2772/10000 [00:19<00:51, 139.57it/s]Running 10000 simulations.:  28%|██▊       | 2787/10000 [00:19<00:58, 122.72it/s]Running 10000 simulations.:  28%|██▊       | 2800/10000 [00:19<01:03, 113.78it/s]Running 10000 simulations.:  28%|██▊       | 2812/10000 [00:19<01:05, 109.26it/s]Running 10000 simulations.:  28%|██▊       | 2824/10000 [00:19<01:08, 104.37it/s]Running 10000 simulations.:  28%|██▊       | 2835/10000 [00:20<01:10, 102.08it/s]Running 10000 simulations.:  28%|██▊       | 2846/10000 [00:20<01:10, 101.76it/s]Running 10000 simulations.:  29%|██▊       | 2857/10000 [00:20<01:10, 101.72it/s]Running 10000 simulations.:  29%|██▊       | 2868/10000 [00:20<01:11, 100.01it/s]Running 10000 simulations.:  29%|██▉       | 2879/10000 [00:20<01:11, 98.99it/s] Running 10000 simulations.:  29%|██▉       | 2890/10000 [00:20<01:11, 100.06it/s]Running 10000 simulations.:  29%|██▉       | 2901/10000 [00:20<01:10, 100.24it/s]Running 10000 simulations.:  29%|██▉       | 2912/10000 [00:20<01:11, 98.83it/s] Running 10000 simulations.:  29%|██▉       | 2922/10000 [00:20<01:11, 98.73it/s]Running 10000 simulations.:  29%|██▉       | 2933/10000 [00:21<01:10, 99.97it/s]Running 10000 simulations.:  29%|██▉       | 2944/10000 [00:21<01:09, 101.09it/s]Running 10000 simulations.:  30%|██▉       | 2955/10000 [00:21<01:11, 99.21it/s] Running 10000 simulations.:  30%|██▉       | 2965/10000 [00:21<01:11, 98.72it/s]Running 10000 simulations.:  30%|██▉       | 2975/10000 [00:21<01:11, 98.93it/s]Running 10000 simulations.:  30%|██▉       | 2986/10000 [00:21<01:10, 99.27it/s]Running 10000 simulations.:  30%|██▉       | 2996/10000 [00:21<01:11, 97.99it/s]Running 10000 simulations.:  30%|███       | 3006/10000 [00:21<01:11, 97.77it/s]Running 10000 simulations.:  30%|███       | 3017/10000 [00:21<01:10, 98.48it/s]Running 10000 simulations.:  30%|███       | 3028/10000 [00:22<01:10, 99.28it/s]Running 10000 simulations.:  30%|███       | 3038/10000 [00:22<01:10, 99.30it/s]Running 10000 simulations.:  30%|███       | 3048/10000 [00:22<01:11, 97.89it/s]Running 10000 simulations.:  31%|███       | 3058/10000 [00:22<01:10, 98.29it/s]Running 10000 simulations.:  31%|███       | 3068/10000 [00:22<01:10, 97.92it/s]Running 10000 simulations.:  31%|███       | 3078/10000 [00:22<01:10, 97.68it/s]Running 10000 simulations.:  31%|███       | 3088/10000 [00:22<01:11, 96.66it/s]Running 10000 simulations.:  31%|███       | 3100/10000 [00:22<01:07, 102.25it/s]Running 10000 simulations.:  31%|███       | 3113/10000 [00:22<01:04, 107.21it/s]Running 10000 simulations.:  31%|███▏      | 3125/10000 [00:22<01:02, 110.53it/s]Running 10000 simulations.:  31%|███▏      | 3137/10000 [00:23<01:00, 112.52it/s]Running 10000 simulations.:  31%|███▏      | 3149/10000 [00:23<01:00, 113.08it/s]Running 10000 simulations.:  32%|███▏      | 3161/10000 [00:23<00:59, 114.16it/s]Running 10000 simulations.:  32%|███▏      | 3173/10000 [00:23<00:59, 115.51it/s]Running 10000 simulations.:  32%|███▏      | 3186/10000 [00:23<00:58, 116.96it/s]Running 10000 simulations.:  32%|███▏      | 3198/10000 [00:23<00:58, 117.23it/s]Running 10000 simulations.:  32%|███▏      | 3210/10000 [00:23<00:57, 117.67it/s]Running 10000 simulations.:  32%|███▏      | 3223/10000 [00:23<00:57, 118.39it/s]Running 10000 simulations.:  32%|███▏      | 3236/10000 [00:23<00:56, 118.99it/s]Running 10000 simulations.:  32%|███▏      | 3248/10000 [00:23<00:57, 118.16it/s]Running 10000 simulations.:  33%|███▎      | 3260/10000 [00:24<00:56, 118.59it/s]Running 10000 simulations.:  33%|███▎      | 3272/10000 [00:24<00:56, 118.51it/s]Running 10000 simulations.:  33%|███▎      | 3284/10000 [00:24<00:57, 116.76it/s]Running 10000 simulations.:  33%|███▎      | 3296/10000 [00:24<00:57, 116.91it/s]Running 10000 simulations.:  33%|███▎      | 3308/10000 [00:24<00:56, 117.58it/s]Running 10000 simulations.:  33%|███▎      | 3321/10000 [00:24<00:56, 118.34it/s]Running 10000 simulations.:  33%|███▎      | 3333/10000 [00:24<00:56, 118.53it/s]Running 10000 simulations.:  33%|███▎      | 3345/10000 [00:24<00:56, 118.80it/s]Running 10000 simulations.:  34%|███▎      | 3357/10000 [00:24<00:55, 119.06it/s]Running 10000 simulations.:  34%|███▎      | 3369/10000 [00:24<00:55, 118.44it/s]Running 10000 simulations.:  34%|███▍      | 3381/10000 [00:25<00:56, 117.56it/s]Running 10000 simulations.:  34%|███▍      | 3393/10000 [00:25<00:55, 118.26it/s]Running 10000 simulations.:  34%|███▍      | 3406/10000 [00:25<00:55, 118.87it/s]Running 10000 simulations.:  34%|███▍      | 3418/10000 [00:25<00:55, 119.20it/s]Running 10000 simulations.:  34%|███▍      | 3431/10000 [00:25<00:54, 119.63it/s]Running 10000 simulations.:  34%|███▍      | 3443/10000 [00:25<00:55, 118.02it/s]Running 10000 simulations.:  35%|███▍      | 3455/10000 [00:25<00:55, 117.49it/s]Running 10000 simulations.:  35%|███▍      | 3467/10000 [00:25<00:55, 117.32it/s]Running 10000 simulations.:  35%|███▍      | 3479/10000 [00:25<00:55, 117.71it/s]Running 10000 simulations.:  35%|███▍      | 3492/10000 [00:26<00:54, 118.64it/s]Running 10000 simulations.:  35%|███▌      | 3504/10000 [00:26<00:54, 118.96it/s]Running 10000 simulations.:  35%|███▌      | 3517/10000 [00:26<00:54, 119.34it/s]Running 10000 simulations.:  35%|███▌      | 3529/10000 [00:26<00:54, 117.96it/s]Running 10000 simulations.:  35%|███▌      | 3541/10000 [00:26<00:54, 118.32it/s]Running 10000 simulations.:  36%|███▌      | 3553/10000 [00:26<00:54, 117.56it/s]Running 10000 simulations.:  36%|███▌      | 3566/10000 [00:26<00:54, 118.35it/s]Running 10000 simulations.:  36%|███▌      | 3579/10000 [00:26<00:53, 119.16it/s]Running 10000 simulations.:  36%|███▌      | 3592/10000 [00:26<00:53, 120.11it/s]Running 10000 simulations.:  36%|███▌      | 3605/10000 [00:26<00:53, 120.47it/s]Running 10000 simulations.:  36%|███▌      | 3618/10000 [00:27<00:53, 119.15it/s]Running 10000 simulations.:  36%|███▋      | 3630/10000 [00:27<00:53, 119.29it/s]Running 10000 simulations.:  36%|███▋      | 3642/10000 [00:27<00:53, 118.58it/s]Running 10000 simulations.:  37%|███▋      | 3655/10000 [00:27<00:53, 119.36it/s]Running 10000 simulations.:  37%|███▋      | 3668/10000 [00:27<00:52, 119.82it/s]Running 10000 simulations.:  37%|███▋      | 3681/10000 [00:27<00:52, 120.17it/s]Running 10000 simulations.:  37%|███▋      | 3694/10000 [00:27<00:52, 119.44it/s]Running 10000 simulations.:  37%|███▋      | 3706/10000 [00:27<00:52, 119.45it/s]Running 10000 simulations.:  37%|███▋      | 3718/10000 [00:27<00:53, 118.51it/s]Running 10000 simulations.:  37%|███▋      | 3731/10000 [00:28<00:52, 119.07it/s]Running 10000 simulations.:  37%|███▋      | 3744/10000 [00:28<00:52, 119.65it/s]Running 10000 simulations.:  38%|███▊      | 3757/10000 [00:28<00:51, 120.51it/s]Running 10000 simulations.:  38%|███▊      | 3770/10000 [00:28<00:52, 119.70it/s]Running 10000 simulations.:  38%|███▊      | 3782/10000 [00:28<00:52, 118.46it/s]Running 10000 simulations.:  38%|███▊      | 3794/10000 [00:28<00:53, 117.03it/s]Running 10000 simulations.:  38%|███▊      | 3806/10000 [00:28<00:52, 117.21it/s]Running 10000 simulations.:  38%|███▊      | 3819/10000 [00:28<00:52, 118.25it/s]Running 10000 simulations.:  38%|███▊      | 3832/10000 [00:28<00:51, 119.17it/s]Running 10000 simulations.:  38%|███▊      | 3845/10000 [00:28<00:51, 119.65it/s]Running 10000 simulations.:  39%|███▊      | 3857/10000 [00:29<00:51, 118.48it/s]Running 10000 simulations.:  39%|███▊      | 3869/10000 [00:29<00:52, 117.59it/s]Running 10000 simulations.:  39%|███▉      | 3881/10000 [00:29<00:51, 118.03it/s]Running 10000 simulations.:  39%|███▉      | 3894/10000 [00:29<00:51, 118.64it/s]Running 10000 simulations.:  39%|███▉      | 3906/10000 [00:29<00:51, 117.60it/s]Running 10000 simulations.:  39%|███▉      | 3918/10000 [00:29<00:52, 116.57it/s]Running 10000 simulations.:  39%|███▉      | 3930/10000 [00:29<00:51, 116.88it/s]Running 10000 simulations.:  39%|███▉      | 3942/10000 [00:29<00:51, 117.22it/s]Running 10000 simulations.:  40%|███▉      | 3955/10000 [00:29<00:51, 118.15it/s]Running 10000 simulations.:  40%|███▉      | 3968/10000 [00:30<00:50, 118.99it/s]Running 10000 simulations.:  40%|███▉      | 3980/10000 [00:30<00:50, 119.27it/s]Running 10000 simulations.:  40%|███▉      | 3992/10000 [00:30<00:50, 117.91it/s]Running 10000 simulations.:  40%|████      | 4004/10000 [00:30<00:51, 116.88it/s]Running 10000 simulations.:  40%|████      | 4017/10000 [00:30<00:50, 117.97it/s]Running 10000 simulations.:  40%|████      | 4030/10000 [00:30<00:50, 119.15it/s]Running 10000 simulations.:  40%|████      | 4042/10000 [00:30<00:50, 117.51it/s]Running 10000 simulations.:  41%|████      | 4055/10000 [00:30<00:50, 118.61it/s]Running 10000 simulations.:  41%|████      | 4067/10000 [00:30<00:50, 117.86it/s]Running 10000 simulations.:  41%|████      | 4079/10000 [00:30<00:50, 116.74it/s]Running 10000 simulations.:  41%|████      | 4091/10000 [00:31<00:50, 117.22it/s]Running 10000 simulations.:  41%|████      | 4104/10000 [00:31<00:49, 118.49it/s]Running 10000 simulations.:  41%|████      | 4117/10000 [00:31<00:49, 119.28it/s]Running 10000 simulations.:  41%|████▏     | 4130/10000 [00:31<00:48, 119.92it/s]Running 10000 simulations.:  41%|████▏     | 4143/10000 [00:31<00:48, 119.88it/s]Running 10000 simulations.:  42%|████▏     | 4155/10000 [00:31<00:49, 118.17it/s]Running 10000 simulations.:  42%|████▏     | 4167/10000 [00:31<00:49, 117.06it/s]Running 10000 simulations.:  42%|████▏     | 4179/10000 [00:31<00:49, 117.77it/s]Running 10000 simulations.:  42%|████▏     | 4192/10000 [00:31<00:48, 118.88it/s]Running 10000 simulations.:  42%|████▏     | 4205/10000 [00:32<00:48, 120.17it/s]Running 10000 simulations.:  42%|████▏     | 4218/10000 [00:32<00:48, 120.17it/s]Running 10000 simulations.:  42%|████▏     | 4231/10000 [00:32<00:48, 119.27it/s]Running 10000 simulations.:  42%|████▏     | 4243/10000 [00:32<00:49, 117.38it/s]Running 10000 simulations.:  43%|████▎     | 4255/10000 [00:32<00:48, 118.09it/s]Running 10000 simulations.:  43%|████▎     | 4267/10000 [00:32<00:48, 118.33it/s]Running 10000 simulations.:  43%|████▎     | 4279/10000 [00:32<00:48, 117.68it/s]Running 10000 simulations.:  43%|████▎     | 4292/10000 [00:32<00:47, 119.17it/s]Running 10000 simulations.:  43%|████▎     | 4305/10000 [00:32<00:47, 120.07it/s]Running 10000 simulations.:  43%|████▎     | 4318/10000 [00:32<00:47, 119.25it/s]Running 10000 simulations.:  43%|████▎     | 4330/10000 [00:33<00:47, 118.76it/s]Running 10000 simulations.:  43%|████▎     | 4343/10000 [00:33<00:47, 119.75it/s]Running 10000 simulations.:  44%|████▎     | 4356/10000 [00:33<00:46, 120.68it/s]Running 10000 simulations.:  44%|████▎     | 4369/10000 [00:33<00:46, 121.15it/s]Running 10000 simulations.:  44%|████▍     | 4382/10000 [00:33<00:49, 114.64it/s]Running 10000 simulations.:  44%|████▍     | 4394/10000 [00:33<00:49, 113.68it/s]Running 10000 simulations.:  44%|████▍     | 4407/10000 [00:33<00:48, 115.59it/s]Running 10000 simulations.:  44%|████▍     | 4420/10000 [00:33<00:47, 117.38it/s]Running 10000 simulations.:  44%|████▍     | 4433/10000 [00:33<00:46, 118.72it/s]Running 10000 simulations.:  44%|████▍     | 4446/10000 [00:34<00:46, 119.93it/s]Running 10000 simulations.:  45%|████▍     | 4459/10000 [00:34<00:45, 120.76it/s]Running 10000 simulations.:  45%|████▍     | 4472/10000 [00:34<00:46, 118.38it/s]Running 10000 simulations.:  45%|████▍     | 4485/10000 [00:34<00:46, 118.93it/s]Running 10000 simulations.:  45%|████▍     | 4498/10000 [00:34<00:45, 119.83it/s]Running 10000 simulations.:  45%|████▌     | 4511/10000 [00:34<00:45, 120.58it/s]Running 10000 simulations.:  45%|████▌     | 4524/10000 [00:34<00:45, 121.18it/s]Running 10000 simulations.:  45%|████▌     | 4537/10000 [00:34<00:44, 121.66it/s]Running 10000 simulations.:  46%|████▌     | 4550/10000 [00:34<00:45, 120.63it/s]Running 10000 simulations.:  46%|████▌     | 4563/10000 [00:35<00:45, 119.49it/s]Running 10000 simulations.:  46%|████▌     | 4575/10000 [00:35<00:45, 119.42it/s]Running 10000 simulations.:  46%|████▌     | 4587/10000 [00:35<00:45, 118.76it/s]Running 10000 simulations.:  46%|████▌     | 4600/10000 [00:35<00:45, 119.39it/s]Running 10000 simulations.:  46%|████▌     | 4613/10000 [00:35<00:44, 120.15it/s]Running 10000 simulations.:  46%|████▋     | 4626/10000 [00:35<00:44, 120.94it/s]Running 10000 simulations.:  46%|████▋     | 4639/10000 [00:35<00:43, 122.95it/s]Running 10000 simulations.:  47%|████▋     | 4655/10000 [00:35<00:40, 130.74it/s]Running 10000 simulations.:  47%|████▋     | 4672/10000 [00:35<00:38, 138.64it/s]Running 10000 simulations.:  47%|████▋     | 4687/10000 [00:35<00:38, 137.71it/s]Running 10000 simulations.:  47%|████▋     | 4702/10000 [00:36<00:37, 141.05it/s]Running 10000 simulations.:  47%|████▋     | 4718/10000 [00:36<00:36, 144.03it/s]Running 10000 simulations.:  47%|████▋     | 4734/10000 [00:36<00:35, 146.47it/s]Running 10000 simulations.:  48%|████▊     | 4750/10000 [00:36<00:35, 148.21it/s]Running 10000 simulations.:  48%|████▊     | 4766/10000 [00:36<00:35, 148.72it/s]Running 10000 simulations.:  48%|████▊     | 4781/10000 [00:36<00:35, 148.60it/s]Running 10000 simulations.:  48%|████▊     | 4796/10000 [00:36<00:35, 145.69it/s]Running 10000 simulations.:  48%|████▊     | 4811/10000 [00:36<00:35, 144.78it/s]Running 10000 simulations.:  48%|████▊     | 4826/10000 [00:36<00:35, 145.75it/s]Running 10000 simulations.:  48%|████▊     | 4841/10000 [00:37<00:35, 144.58it/s]Running 10000 simulations.:  49%|████▊     | 4856/10000 [00:37<00:36, 142.07it/s]Running 10000 simulations.:  49%|████▊     | 4871/10000 [00:37<00:36, 140.77it/s]Running 10000 simulations.:  49%|████▉     | 4886/10000 [00:37<00:36, 140.80it/s]Running 10000 simulations.:  49%|████▉     | 4902/10000 [00:37<00:35, 143.77it/s]Running 10000 simulations.:  49%|████▉     | 4917/10000 [00:37<00:35, 142.87it/s]Running 10000 simulations.:  49%|████▉     | 4932/10000 [00:37<00:35, 142.57it/s]Running 10000 simulations.:  49%|████▉     | 4947/10000 [00:37<00:35, 142.46it/s]Running 10000 simulations.:  50%|████▉     | 4962/10000 [00:37<00:35, 142.35it/s]Running 10000 simulations.:  50%|████▉     | 4977/10000 [00:38<00:35, 142.33it/s]Running 10000 simulations.:  50%|████▉     | 4992/10000 [00:38<00:35, 142.94it/s]Running 10000 simulations.:  50%|█████     | 5007/10000 [00:38<00:34, 143.17it/s]Running 10000 simulations.:  50%|█████     | 5022/10000 [00:38<00:34, 143.15it/s]Running 10000 simulations.:  50%|█████     | 5037/10000 [00:38<00:34, 142.66it/s]Running 10000 simulations.:  51%|█████     | 5052/10000 [00:38<00:35, 141.17it/s]Running 10000 simulations.:  51%|█████     | 5067/10000 [00:38<00:35, 140.93it/s]Running 10000 simulations.:  51%|█████     | 5082/10000 [00:38<00:34, 141.71it/s]Running 10000 simulations.:  51%|█████     | 5097/10000 [00:38<00:34, 142.65it/s]Running 10000 simulations.:  51%|█████     | 5112/10000 [00:38<00:34, 142.79it/s]Running 10000 simulations.:  51%|█████▏    | 5127/10000 [00:39<00:34, 141.17it/s]Running 10000 simulations.:  51%|█████▏    | 5142/10000 [00:39<00:34, 141.42it/s]Running 10000 simulations.:  52%|█████▏    | 5157/10000 [00:39<00:34, 140.32it/s]Running 10000 simulations.:  52%|█████▏    | 5172/10000 [00:39<00:34, 141.17it/s]Running 10000 simulations.:  52%|█████▏    | 5187/10000 [00:39<00:34, 141.34it/s]Running 10000 simulations.:  52%|█████▏    | 5202/10000 [00:39<00:33, 142.47it/s]Running 10000 simulations.:  52%|█████▏    | 5217/10000 [00:39<00:33, 140.92it/s]Running 10000 simulations.:  52%|█████▏    | 5232/10000 [00:39<00:33, 141.53it/s]Running 10000 simulations.:  52%|█████▏    | 5247/10000 [00:39<00:33, 141.26it/s]Running 10000 simulations.:  53%|█████▎    | 5262/10000 [00:40<00:33, 141.56it/s]Running 10000 simulations.:  53%|█████▎    | 5277/10000 [00:40<00:33, 139.98it/s]Running 10000 simulations.:  53%|█████▎    | 5292/10000 [00:40<00:33, 140.29it/s]Running 10000 simulations.:  53%|█████▎    | 5307/10000 [00:40<00:33, 141.08it/s]Running 10000 simulations.:  53%|█████▎    | 5322/10000 [00:40<00:32, 141.99it/s]Running 10000 simulations.:  53%|█████▎    | 5337/10000 [00:40<00:32, 141.49it/s]Running 10000 simulations.:  54%|█████▎    | 5352/10000 [00:40<00:32, 141.99it/s]Running 10000 simulations.:  54%|█████▎    | 5367/10000 [00:40<00:32, 141.50it/s]Running 10000 simulations.:  54%|█████▍    | 5382/10000 [00:40<00:32, 141.30it/s]Running 10000 simulations.:  54%|█████▍    | 5397/10000 [00:40<00:32, 141.17it/s]Running 10000 simulations.:  54%|█████▍    | 5412/10000 [00:41<00:32, 141.67it/s]Running 10000 simulations.:  54%|█████▍    | 5427/10000 [00:41<00:32, 142.13it/s]Running 10000 simulations.:  54%|█████▍    | 5442/10000 [00:41<00:31, 142.63it/s]Running 10000 simulations.:  55%|█████▍    | 5457/10000 [00:41<00:31, 142.58it/s]Running 10000 simulations.:  55%|█████▍    | 5472/10000 [00:41<00:32, 140.89it/s]Running 10000 simulations.:  55%|█████▍    | 5487/10000 [00:41<00:32, 140.73it/s]Running 10000 simulations.:  55%|█████▌    | 5502/10000 [00:41<00:31, 141.76it/s]Running 10000 simulations.:  55%|█████▌    | 5517/10000 [00:41<00:31, 142.67it/s]Running 10000 simulations.:  55%|█████▌    | 5532/10000 [00:41<00:31, 142.18it/s]Running 10000 simulations.:  55%|█████▌    | 5547/10000 [00:42<00:31, 142.75it/s]Running 10000 simulations.:  56%|█████▌    | 5562/10000 [00:42<00:31, 142.24it/s]Running 10000 simulations.:  56%|█████▌    | 5577/10000 [00:42<00:31, 142.06it/s]Running 10000 simulations.:  56%|█████▌    | 5592/10000 [00:42<00:30, 142.91it/s]Running 10000 simulations.:  56%|█████▌    | 5607/10000 [00:42<00:30, 142.61it/s]Running 10000 simulations.:  56%|█████▌    | 5622/10000 [00:42<00:31, 140.51it/s]Running 10000 simulations.:  56%|█████▋    | 5637/10000 [00:42<00:31, 140.74it/s]Running 10000 simulations.:  57%|█████▋    | 5652/10000 [00:42<00:30, 140.84it/s]Running 10000 simulations.:  57%|█████▋    | 5667/10000 [00:42<00:30, 141.42it/s]Running 10000 simulations.:  57%|█████▋    | 5682/10000 [00:42<00:30, 142.26it/s]Running 10000 simulations.:  57%|█████▋    | 5697/10000 [00:43<00:30, 141.16it/s]Running 10000 simulations.:  57%|█████▋    | 5712/10000 [00:43<00:30, 141.11it/s]Running 10000 simulations.:  57%|█████▋    | 5727/10000 [00:43<00:30, 141.98it/s]Running 10000 simulations.:  57%|█████▋    | 5742/10000 [00:43<00:30, 141.91it/s]Running 10000 simulations.:  58%|█████▊    | 5757/10000 [00:43<00:30, 140.65it/s]Running 10000 simulations.:  58%|█████▊    | 5772/10000 [00:43<00:29, 141.81it/s]Running 10000 simulations.:  58%|█████▊    | 5787/10000 [00:43<00:29, 142.41it/s]Running 10000 simulations.:  58%|█████▊    | 5802/10000 [00:43<00:29, 141.93it/s]Running 10000 simulations.:  58%|█████▊    | 5817/10000 [00:43<00:29, 141.88it/s]Running 10000 simulations.:  58%|█████▊    | 5832/10000 [00:44<00:29, 140.88it/s]Running 10000 simulations.:  58%|█████▊    | 5847/10000 [00:44<00:29, 140.02it/s]Running 10000 simulations.:  59%|█████▊    | 5862/10000 [00:44<00:29, 139.77it/s]Running 10000 simulations.:  59%|█████▉    | 5877/10000 [00:44<00:29, 141.33it/s]Running 10000 simulations.:  59%|█████▉    | 5892/10000 [00:44<00:29, 140.66it/s]Running 10000 simulations.:  59%|█████▉    | 5907/10000 [00:44<00:29, 139.59it/s]Running 10000 simulations.:  59%|█████▉    | 5921/10000 [00:44<00:29, 139.45it/s]Running 10000 simulations.:  59%|█████▉    | 5936/10000 [00:44<00:28, 140.21it/s]Running 10000 simulations.:  60%|█████▉    | 5951/10000 [00:44<00:28, 141.35it/s]Running 10000 simulations.:  60%|█████▉    | 5966/10000 [00:44<00:28, 140.36it/s]Running 10000 simulations.:  60%|█████▉    | 5981/10000 [00:45<00:28, 139.71it/s]Running 10000 simulations.:  60%|█████▉    | 5996/10000 [00:45<00:28, 141.08it/s]Running 10000 simulations.:  60%|██████    | 6011/10000 [00:45<00:28, 139.13it/s]Running 10000 simulations.:  60%|██████    | 6025/10000 [00:45<00:28, 139.10it/s]Running 10000 simulations.:  60%|██████    | 6039/10000 [00:45<00:28, 138.62it/s]Running 10000 simulations.:  61%|██████    | 6054/10000 [00:45<00:28, 140.47it/s]Running 10000 simulations.:  61%|██████    | 6070/10000 [00:45<00:27, 143.37it/s]Running 10000 simulations.:  61%|██████    | 6085/10000 [00:45<00:27, 141.93it/s]Running 10000 simulations.:  61%|██████    | 6100/10000 [00:45<00:27, 141.66it/s]Running 10000 simulations.:  61%|██████    | 6115/10000 [00:46<00:27, 142.00it/s]Running 10000 simulations.:  61%|██████▏   | 6130/10000 [00:46<00:27, 142.57it/s]Running 10000 simulations.:  61%|██████▏   | 6145/10000 [00:46<00:27, 141.19it/s]Running 10000 simulations.:  62%|██████▏   | 6160/10000 [00:46<00:27, 141.29it/s]Running 10000 simulations.:  62%|██████▏   | 6175/10000 [00:46<00:27, 140.87it/s]Running 10000 simulations.:  62%|██████▏   | 6190/10000 [00:46<00:27, 140.02it/s]Running 10000 simulations.:  62%|██████▏   | 6205/10000 [00:46<00:27, 139.29it/s]Running 10000 simulations.:  62%|██████▏   | 6220/10000 [00:46<00:26, 141.59it/s]Running 10000 simulations.:  62%|██████▏   | 6235/10000 [00:46<00:26, 140.98it/s]Running 10000 simulations.:  62%|██████▎   | 6250/10000 [00:47<00:26, 142.57it/s]Running 10000 simulations.:  63%|██████▎   | 6265/10000 [00:47<00:26, 141.23it/s]Running 10000 simulations.:  63%|██████▎   | 6280/10000 [00:47<00:26, 141.19it/s]Running 10000 simulations.:  63%|██████▎   | 6295/10000 [00:47<00:26, 139.98it/s]Running 10000 simulations.:  63%|██████▎   | 6310/10000 [00:47<00:26, 139.68it/s]Running 10000 simulations.:  63%|██████▎   | 6324/10000 [00:47<00:26, 138.77it/s]Running 10000 simulations.:  63%|██████▎   | 6338/10000 [00:47<00:27, 134.76it/s]Running 10000 simulations.:  64%|██████▎   | 6352/10000 [00:47<00:29, 125.67it/s]Running 10000 simulations.:  64%|██████▎   | 6365/10000 [00:47<00:30, 118.40it/s]Running 10000 simulations.:  64%|██████▍   | 6378/10000 [00:48<00:31, 113.27it/s]Running 10000 simulations.:  64%|██████▍   | 6390/10000 [00:48<00:33, 107.84it/s]Running 10000 simulations.:  64%|██████▍   | 6401/10000 [00:48<00:34, 104.59it/s]Running 10000 simulations.:  64%|██████▍   | 6413/10000 [00:48<00:33, 106.52it/s]Running 10000 simulations.:  64%|██████▍   | 6424/10000 [00:48<00:33, 107.41it/s]Running 10000 simulations.:  64%|██████▍   | 6435/10000 [00:48<00:33, 106.82it/s]Running 10000 simulations.:  64%|██████▍   | 6447/10000 [00:48<00:32, 108.34it/s]Running 10000 simulations.:  65%|██████▍   | 6458/10000 [00:48<00:32, 107.37it/s]Running 10000 simulations.:  65%|██████▍   | 6469/10000 [00:48<00:33, 105.31it/s]Running 10000 simulations.:  65%|██████▍   | 6480/10000 [00:49<00:33, 104.45it/s]Running 10000 simulations.:  65%|██████▍   | 6491/10000 [00:49<00:33, 105.11it/s]Running 10000 simulations.:  65%|██████▌   | 6502/10000 [00:49<00:33, 105.66it/s]Running 10000 simulations.:  65%|██████▌   | 6513/10000 [00:49<00:32, 105.98it/s]Running 10000 simulations.:  65%|██████▌   | 6524/10000 [00:49<00:32, 106.50it/s]Running 10000 simulations.:  65%|██████▌   | 6535/10000 [00:49<00:33, 103.58it/s]Running 10000 simulations.:  65%|██████▌   | 6546/10000 [00:49<00:33, 104.13it/s]Running 10000 simulations.:  66%|██████▌   | 6557/10000 [00:49<00:32, 105.57it/s]Running 10000 simulations.:  66%|██████▌   | 6573/10000 [00:49<00:29, 116.18it/s]Running 10000 simulations.:  66%|██████▌   | 6589/10000 [00:49<00:27, 125.24it/s]Running 10000 simulations.:  66%|██████▌   | 6605/10000 [00:50<00:25, 132.60it/s]Running 10000 simulations.:  66%|██████▌   | 6621/10000 [00:50<00:24, 137.78it/s]Running 10000 simulations.:  66%|██████▋   | 6636/10000 [00:50<00:24, 139.36it/s]Running 10000 simulations.:  67%|██████▋   | 6652/10000 [00:50<00:23, 143.11it/s]Running 10000 simulations.:  67%|██████▋   | 6668/10000 [00:50<00:22, 145.92it/s]Running 10000 simulations.:  67%|██████▋   | 6683/10000 [00:50<00:22, 147.08it/s]Running 10000 simulations.:  67%|██████▋   | 6699/10000 [00:50<00:22, 148.23it/s]Running 10000 simulations.:  67%|██████▋   | 6715/10000 [00:50<00:22, 149.16it/s]Running 10000 simulations.:  67%|██████▋   | 6731/10000 [00:50<00:21, 150.57it/s]Running 10000 simulations.:  67%|██████▋   | 6747/10000 [00:50<00:21, 151.96it/s]Running 10000 simulations.:  68%|██████▊   | 6763/10000 [00:51<00:21, 152.52it/s]Running 10000 simulations.:  68%|██████▊   | 6779/10000 [00:51<00:21, 149.98it/s]Running 10000 simulations.:  68%|██████▊   | 6795/10000 [00:51<00:21, 149.96it/s]Running 10000 simulations.:  68%|██████▊   | 6811/10000 [00:51<00:21, 151.76it/s]Running 10000 simulations.:  68%|██████▊   | 6827/10000 [00:51<00:20, 152.44it/s]Running 10000 simulations.:  68%|██████▊   | 6843/10000 [00:51<00:20, 152.54it/s]Running 10000 simulations.:  69%|██████▊   | 6859/10000 [00:51<00:20, 152.93it/s]Running 10000 simulations.:  69%|██████▉   | 6875/10000 [00:51<00:20, 149.74it/s]Running 10000 simulations.:  69%|██████▉   | 6890/10000 [00:51<00:20, 149.33it/s]Running 10000 simulations.:  69%|██████▉   | 6906/10000 [00:52<00:20, 150.49it/s]Running 10000 simulations.:  69%|██████▉   | 6922/10000 [00:52<00:20, 151.38it/s]Running 10000 simulations.:  69%|██████▉   | 6938/10000 [00:52<00:20, 152.50it/s]Running 10000 simulations.:  70%|██████▉   | 6954/10000 [00:52<00:19, 153.27it/s]Running 10000 simulations.:  70%|██████▉   | 6970/10000 [00:52<00:19, 152.53it/s]Running 10000 simulations.:  70%|██████▉   | 6986/10000 [00:52<00:20, 149.94it/s]Running 10000 simulations.:  70%|███████   | 7002/10000 [00:52<00:19, 150.91it/s]Running 10000 simulations.:  70%|███████   | 7018/10000 [00:52<00:19, 151.97it/s]Running 10000 simulations.:  70%|███████   | 7034/10000 [00:52<00:19, 152.70it/s]Running 10000 simulations.:  70%|███████   | 7050/10000 [00:52<00:19, 153.32it/s]Running 10000 simulations.:  71%|███████   | 7066/10000 [00:53<00:19, 153.54it/s]Running 10000 simulations.:  71%|███████   | 7082/10000 [00:53<00:19, 151.07it/s]Running 10000 simulations.:  71%|███████   | 7098/10000 [00:53<00:19, 151.84it/s]Running 10000 simulations.:  71%|███████   | 7114/10000 [00:53<00:18, 152.25it/s]Running 10000 simulations.:  71%|███████▏  | 7130/10000 [00:53<00:18, 152.36it/s]Running 10000 simulations.:  71%|███████▏  | 7146/10000 [00:53<00:18, 152.96it/s]Running 10000 simulations.:  72%|███████▏  | 7162/10000 [00:53<00:18, 153.05it/s]Running 10000 simulations.:  72%|███████▏  | 7178/10000 [00:53<00:18, 150.11it/s]Running 10000 simulations.:  72%|███████▏  | 7194/10000 [00:53<00:18, 151.21it/s]Running 10000 simulations.:  72%|███████▏  | 7210/10000 [00:54<00:18, 152.32it/s]Running 10000 simulations.:  72%|███████▏  | 7226/10000 [00:54<00:18, 153.14it/s]Running 10000 simulations.:  72%|███████▏  | 7242/10000 [00:54<00:17, 153.99it/s]Running 10000 simulations.:  73%|███████▎  | 7258/10000 [00:54<00:17, 152.87it/s]Running 10000 simulations.:  73%|███████▎  | 7274/10000 [00:54<00:18, 151.14it/s]Running 10000 simulations.:  73%|███████▎  | 7290/10000 [00:54<00:17, 151.33it/s]Running 10000 simulations.:  73%|███████▎  | 7306/10000 [00:54<00:17, 151.86it/s]Running 10000 simulations.:  73%|███████▎  | 7322/10000 [00:54<00:17, 152.51it/s]Running 10000 simulations.:  73%|███████▎  | 7338/10000 [00:54<00:17, 152.67it/s]Running 10000 simulations.:  74%|███████▎  | 7354/10000 [00:54<00:17, 149.61it/s]Running 10000 simulations.:  74%|███████▎  | 7370/10000 [00:55<00:17, 150.25it/s]Running 10000 simulations.:  74%|███████▍  | 7386/10000 [00:55<00:17, 150.96it/s]Running 10000 simulations.:  74%|███████▍  | 7402/10000 [00:55<00:17, 151.57it/s]Running 10000 simulations.:  74%|███████▍  | 7418/10000 [00:55<00:16, 152.09it/s]Running 10000 simulations.:  74%|███████▍  | 7434/10000 [00:55<00:17, 150.85it/s]Running 10000 simulations.:  74%|███████▍  | 7450/10000 [00:55<00:17, 149.72it/s]Running 10000 simulations.:  75%|███████▍  | 7465/10000 [00:55<00:16, 149.66it/s]Running 10000 simulations.:  75%|███████▍  | 7480/10000 [00:55<00:16, 149.63it/s]Running 10000 simulations.:  75%|███████▍  | 7495/10000 [00:55<00:16, 147.84it/s]Running 10000 simulations.:  75%|███████▌  | 7510/10000 [00:56<00:16, 148.29it/s]Running 10000 simulations.:  75%|███████▌  | 7526/10000 [00:56<00:16, 148.99it/s]Running 10000 simulations.:  75%|███████▌  | 7542/10000 [00:56<00:16, 150.22it/s]Running 10000 simulations.:  76%|███████▌  | 7558/10000 [00:56<00:16, 150.66it/s]Running 10000 simulations.:  76%|███████▌  | 7574/10000 [00:56<00:16, 151.04it/s]Running 10000 simulations.:  76%|███████▌  | 7590/10000 [00:56<00:16, 150.03it/s]Running 10000 simulations.:  76%|███████▌  | 7606/10000 [00:56<00:15, 149.88it/s]Running 10000 simulations.:  76%|███████▌  | 7621/10000 [00:56<00:15, 148.81it/s]Running 10000 simulations.:  76%|███████▋  | 7637/10000 [00:56<00:15, 150.06it/s]Running 10000 simulations.:  77%|███████▋  | 7653/10000 [00:56<00:15, 150.42it/s]Running 10000 simulations.:  77%|███████▋  | 7669/10000 [00:57<00:15, 150.54it/s]Running 10000 simulations.:  77%|███████▋  | 7685/10000 [00:57<00:15, 149.09it/s]Running 10000 simulations.:  77%|███████▋  | 7700/10000 [00:57<00:15, 149.20it/s]Running 10000 simulations.:  77%|███████▋  | 7715/10000 [00:57<00:15, 149.15it/s]Running 10000 simulations.:  77%|███████▋  | 7731/10000 [00:57<00:15, 150.16it/s]Running 10000 simulations.:  77%|███████▋  | 7747/10000 [00:57<00:14, 150.93it/s]Running 10000 simulations.:  78%|███████▊  | 7763/10000 [00:57<00:14, 151.39it/s]Running 10000 simulations.:  78%|███████▊  | 7779/10000 [00:57<00:15, 146.37it/s]Running 10000 simulations.:  78%|███████▊  | 7794/10000 [00:57<00:15, 144.72it/s]Running 10000 simulations.:  78%|███████▊  | 7809/10000 [00:58<00:15, 144.41it/s]Running 10000 simulations.:  78%|███████▊  | 7824/10000 [00:58<00:15, 141.95it/s]Running 10000 simulations.:  78%|███████▊  | 7839/10000 [00:58<00:15, 140.90it/s]Running 10000 simulations.:  79%|███████▊  | 7854/10000 [00:58<00:15, 138.84it/s]Running 10000 simulations.:  79%|███████▊  | 7869/10000 [00:58<00:15, 140.31it/s]Running 10000 simulations.:  79%|███████▉  | 7884/10000 [00:58<00:14, 142.14it/s]Running 10000 simulations.:  79%|███████▉  | 7899/10000 [00:58<00:15, 135.05it/s]Running 10000 simulations.:  79%|███████▉  | 7913/10000 [00:58<00:16, 124.00it/s]Running 10000 simulations.:  79%|███████▉  | 7926/10000 [00:58<00:18, 115.11it/s]Running 10000 simulations.:  79%|███████▉  | 7938/10000 [00:59<00:19, 107.49it/s]Running 10000 simulations.:  80%|███████▉  | 7950/10000 [00:59<00:19, 106.42it/s]Running 10000 simulations.:  80%|███████▉  | 7961/10000 [00:59<00:19, 105.68it/s]Running 10000 simulations.:  80%|███████▉  | 7972/10000 [00:59<00:19, 103.96it/s]Running 10000 simulations.:  80%|███████▉  | 7983/10000 [00:59<00:19, 102.52it/s]Running 10000 simulations.:  80%|███████▉  | 7994/10000 [00:59<00:19, 102.68it/s]Running 10000 simulations.:  80%|████████  | 8005/10000 [00:59<00:19, 102.61it/s]Running 10000 simulations.:  80%|████████  | 8016/10000 [00:59<00:19, 102.50it/s]Running 10000 simulations.:  80%|████████  | 8027/10000 [00:59<00:19, 103.01it/s]Running 10000 simulations.:  80%|████████  | 8038/10000 [01:00<00:19, 101.84it/s]Running 10000 simulations.:  80%|████████  | 8049/10000 [01:00<00:19, 102.48it/s]Running 10000 simulations.:  81%|████████  | 8060/10000 [01:00<00:19, 100.10it/s]Running 10000 simulations.:  81%|████████  | 8071/10000 [01:00<00:19, 100.65it/s]Running 10000 simulations.:  81%|████████  | 8082/10000 [01:00<00:19, 98.42it/s] Running 10000 simulations.:  81%|████████  | 8092/10000 [01:00<00:19, 98.80it/s]Running 10000 simulations.:  81%|████████  | 8103/10000 [01:00<00:18, 99.93it/s]Running 10000 simulations.:  81%|████████  | 8114/10000 [01:00<00:18, 100.67it/s]Running 10000 simulations.:  81%|████████▏ | 8125/10000 [01:00<00:18, 100.94it/s]Running 10000 simulations.:  81%|████████▏ | 8136/10000 [01:01<00:18, 99.41it/s] Running 10000 simulations.:  81%|████████▏ | 8147/10000 [01:01<00:18, 100.43it/s]Running 10000 simulations.:  82%|████████▏ | 8158/10000 [01:01<00:18, 99.77it/s] Running 10000 simulations.:  82%|████████▏ | 8169/10000 [01:01<00:18, 100.78it/s]Running 10000 simulations.:  82%|████████▏ | 8180/10000 [01:01<00:18, 95.81it/s] Running 10000 simulations.:  82%|████████▏ | 8190/10000 [01:01<00:19, 93.97it/s]Running 10000 simulations.:  82%|████████▏ | 8200/10000 [01:01<00:19, 92.74it/s]Running 10000 simulations.:  82%|████████▏ | 8210/10000 [01:01<00:19, 92.28it/s]Running 10000 simulations.:  82%|████████▏ | 8220/10000 [01:01<00:19, 92.10it/s]Running 10000 simulations.:  82%|████████▏ | 8230/10000 [01:02<00:19, 92.14it/s]Running 10000 simulations.:  82%|████████▏ | 8240/10000 [01:02<00:19, 92.21it/s]Running 10000 simulations.:  82%|████████▎ | 8250/10000 [01:02<00:18, 92.33it/s]Running 10000 simulations.:  83%|████████▎ | 8260/10000 [01:02<00:19, 91.21it/s]Running 10000 simulations.:  83%|████████▎ | 8270/10000 [01:02<00:19, 89.54it/s]Running 10000 simulations.:  83%|████████▎ | 8279/10000 [01:02<00:19, 88.95it/s]Running 10000 simulations.:  83%|████████▎ | 8289/10000 [01:02<00:19, 89.78it/s]Running 10000 simulations.:  83%|████████▎ | 8299/10000 [01:02<00:18, 90.35it/s]Running 10000 simulations.:  83%|████████▎ | 8309/10000 [01:02<00:18, 90.88it/s]Running 10000 simulations.:  83%|████████▎ | 8319/10000 [01:03<00:18, 90.74it/s]Running 10000 simulations.:  83%|████████▎ | 8329/10000 [01:03<00:18, 91.34it/s]Running 10000 simulations.:  83%|████████▎ | 8339/10000 [01:03<00:18, 88.84it/s]Running 10000 simulations.:  84%|████████▎ | 8351/10000 [01:03<00:17, 94.88it/s]Running 10000 simulations.:  84%|████████▎ | 8365/10000 [01:03<00:15, 102.44it/s]Running 10000 simulations.:  84%|████████▍ | 8379/10000 [01:03<00:14, 110.87it/s]Running 10000 simulations.:  84%|████████▍ | 8394/10000 [01:03<00:13, 119.72it/s]Running 10000 simulations.:  84%|████████▍ | 8409/10000 [01:03<00:12, 125.99it/s]Running 10000 simulations.:  84%|████████▍ | 8424/10000 [01:03<00:12, 130.86it/s]Running 10000 simulations.:  84%|████████▍ | 8439/10000 [01:04<00:11, 134.01it/s]Running 10000 simulations.:  85%|████████▍ | 8454/10000 [01:04<00:11, 137.25it/s]Running 10000 simulations.:  85%|████████▍ | 8469/10000 [01:04<00:10, 139.44it/s]Running 10000 simulations.:  85%|████████▍ | 8484/10000 [01:04<00:10, 141.41it/s]Running 10000 simulations.:  85%|████████▍ | 8499/10000 [01:04<00:10, 141.03it/s]Running 10000 simulations.:  85%|████████▌ | 8514/10000 [01:04<00:10, 141.96it/s]Running 10000 simulations.:  85%|████████▌ | 8529/10000 [01:04<00:10, 141.66it/s]Running 10000 simulations.:  85%|████████▌ | 8544/10000 [01:04<00:10, 142.95it/s]Running 10000 simulations.:  86%|████████▌ | 8559/10000 [01:04<00:10, 143.94it/s]Running 10000 simulations.:  86%|████████▌ | 8574/10000 [01:04<00:09, 144.90it/s]Running 10000 simulations.:  86%|████████▌ | 8589/10000 [01:05<00:09, 144.05it/s]Running 10000 simulations.:  86%|████████▌ | 8604/10000 [01:05<00:09, 143.51it/s]Running 10000 simulations.:  86%|████████▌ | 8619/10000 [01:05<00:09, 142.79it/s]Running 10000 simulations.:  86%|████████▋ | 8634/10000 [01:05<00:09, 143.39it/s]Running 10000 simulations.:  86%|████████▋ | 8649/10000 [01:05<00:09, 144.07it/s]Running 10000 simulations.:  87%|████████▋ | 8664/10000 [01:05<00:09, 144.68it/s]Running 10000 simulations.:  87%|████████▋ | 8679/10000 [01:05<00:09, 144.38it/s]Running 10000 simulations.:  87%|████████▋ | 8694/10000 [01:05<00:09, 143.89it/s]Running 10000 simulations.:  87%|████████▋ | 8709/10000 [01:05<00:09, 143.20it/s]Running 10000 simulations.:  87%|████████▋ | 8724/10000 [01:05<00:08, 143.46it/s]Running 10000 simulations.:  87%|████████▋ | 8739/10000 [01:06<00:08, 144.30it/s]Running 10000 simulations.:  88%|████████▊ | 8754/10000 [01:06<00:08, 144.88it/s]Running 10000 simulations.:  88%|████████▊ | 8769/10000 [01:06<00:08, 143.77it/s]Running 10000 simulations.:  88%|████████▊ | 8784/10000 [01:06<00:08, 142.66it/s]Running 10000 simulations.:  88%|████████▊ | 8799/10000 [01:06<00:08, 141.82it/s]Running 10000 simulations.:  88%|████████▊ | 8814/10000 [01:06<00:08, 142.48it/s]Running 10000 simulations.:  88%|████████▊ | 8829/10000 [01:06<00:08, 143.75it/s]Running 10000 simulations.:  88%|████████▊ | 8844/10000 [01:06<00:08, 144.24it/s]Running 10000 simulations.:  89%|████████▊ | 8859/10000 [01:06<00:07, 142.76it/s]Running 10000 simulations.:  89%|████████▊ | 8874/10000 [01:07<00:08, 139.81it/s]Running 10000 simulations.:  89%|████████▉ | 8888/10000 [01:07<00:08, 137.97it/s]Running 10000 simulations.:  89%|████████▉ | 8902/10000 [01:07<00:07, 138.17it/s]Running 10000 simulations.:  89%|████████▉ | 8917/10000 [01:07<00:07, 139.44it/s]Running 10000 simulations.:  89%|████████▉ | 8932/10000 [01:07<00:07, 140.25it/s]Running 10000 simulations.:  89%|████████▉ | 8947/10000 [01:07<00:07, 141.11it/s]Running 10000 simulations.:  90%|████████▉ | 8962/10000 [01:07<00:07, 142.08it/s]Running 10000 simulations.:  90%|████████▉ | 8977/10000 [01:07<00:07, 142.97it/s]Running 10000 simulations.:  90%|████████▉ | 8992/10000 [01:07<00:07, 142.34it/s]Running 10000 simulations.:  90%|█████████ | 9007/10000 [01:07<00:07, 139.79it/s]Running 10000 simulations.:  90%|█████████ | 9022/10000 [01:08<00:06, 140.70it/s]Running 10000 simulations.:  90%|█████████ | 9037/10000 [01:08<00:06, 141.72it/s]Running 10000 simulations.:  91%|█████████ | 9052/10000 [01:08<00:06, 142.42it/s]Running 10000 simulations.:  91%|█████████ | 9067/10000 [01:08<00:06, 143.17it/s]Running 10000 simulations.:  91%|█████████ | 9082/10000 [01:08<00:06, 143.77it/s]Running 10000 simulations.:  91%|█████████ | 9097/10000 [01:08<00:06, 140.93it/s]Running 10000 simulations.:  91%|█████████ | 9112/10000 [01:08<00:06, 141.93it/s]Running 10000 simulations.:  91%|█████████▏| 9127/10000 [01:08<00:06, 142.27it/s]Running 10000 simulations.:  91%|█████████▏| 9142/10000 [01:08<00:06, 142.78it/s]Running 10000 simulations.:  92%|█████████▏| 9157/10000 [01:09<00:05, 143.28it/s]Running 10000 simulations.:  92%|█████████▏| 9172/10000 [01:09<00:05, 142.56it/s]Running 10000 simulations.:  92%|█████████▏| 9187/10000 [01:09<00:05, 140.92it/s]Running 10000 simulations.:  92%|█████████▏| 9202/10000 [01:09<00:05, 142.52it/s]Running 10000 simulations.:  92%|█████████▏| 9217/10000 [01:09<00:05, 143.35it/s]Running 10000 simulations.:  92%|█████████▏| 9232/10000 [01:09<00:05, 143.52it/s]Running 10000 simulations.:  92%|█████████▏| 9247/10000 [01:09<00:05, 143.93it/s]Running 10000 simulations.:  93%|█████████▎| 9262/10000 [01:09<00:05, 142.33it/s]Running 10000 simulations.:  93%|█████████▎| 9277/10000 [01:09<00:05, 140.50it/s]Running 10000 simulations.:  93%|█████████▎| 9292/10000 [01:09<00:05, 141.39it/s]Running 10000 simulations.:  93%|█████████▎| 9307/10000 [01:10<00:04, 142.38it/s]Running 10000 simulations.:  93%|█████████▎| 9322/10000 [01:10<00:04, 143.33it/s]Running 10000 simulations.:  93%|█████████▎| 9337/10000 [01:10<00:04, 143.96it/s]Running 10000 simulations.:  94%|█████████▎| 9352/10000 [01:10<00:04, 142.84it/s]Running 10000 simulations.:  94%|█████████▎| 9367/10000 [01:10<00:04, 142.20it/s]Running 10000 simulations.:  94%|█████████▍| 9382/10000 [01:10<00:04, 143.01it/s]Running 10000 simulations.:  94%|█████████▍| 9397/10000 [01:10<00:04, 142.81it/s]Running 10000 simulations.:  94%|█████████▍| 9412/10000 [01:10<00:04, 143.18it/s]Running 10000 simulations.:  94%|█████████▍| 9427/10000 [01:10<00:04, 142.79it/s]Running 10000 simulations.:  94%|█████████▍| 9442/10000 [01:11<00:03, 142.27it/s]Running 10000 simulations.:  95%|█████████▍| 9457/10000 [01:11<00:03, 141.62it/s]Running 10000 simulations.:  95%|█████████▍| 9472/10000 [01:11<00:03, 142.48it/s]Running 10000 simulations.:  95%|█████████▍| 9487/10000 [01:11<00:03, 143.02it/s]Running 10000 simulations.:  95%|█████████▌| 9502/10000 [01:11<00:03, 143.47it/s]Running 10000 simulations.:  95%|█████████▌| 9517/10000 [01:11<00:03, 142.89it/s]Running 10000 simulations.:  95%|█████████▌| 9532/10000 [01:11<00:03, 143.27it/s]Running 10000 simulations.:  95%|█████████▌| 9547/10000 [01:11<00:03, 142.45it/s]Running 10000 simulations.:  96%|█████████▌| 9562/10000 [01:11<00:03, 142.71it/s]Running 10000 simulations.:  96%|█████████▌| 9577/10000 [01:11<00:02, 142.70it/s]Running 10000 simulations.:  96%|█████████▌| 9592/10000 [01:12<00:02, 142.03it/s]Running 10000 simulations.:  96%|█████████▌| 9607/10000 [01:12<00:02, 141.43it/s]Running 10000 simulations.:  96%|█████████▌| 9622/10000 [01:12<00:02, 141.75it/s]Running 10000 simulations.:  96%|█████████▋| 9637/10000 [01:12<00:02, 142.77it/s]Running 10000 simulations.:  97%|█████████▋| 9652/10000 [01:12<00:02, 143.16it/s]Running 10000 simulations.:  97%|█████████▋| 9667/10000 [01:12<00:02, 142.66it/s]Running 10000 simulations.:  97%|█████████▋| 9682/10000 [01:12<00:02, 117.31it/s]Running 10000 simulations.:  97%|█████████▋| 9695/10000 [01:12<00:03, 98.91it/s] Running 10000 simulations.:  97%|█████████▋| 9706/10000 [01:13<00:03, 89.41it/s]Running 10000 simulations.:  97%|█████████▋| 9716/10000 [01:13<00:03, 84.05it/s]Running 10000 simulations.:  97%|█████████▋| 9726/10000 [01:13<00:03, 79.36it/s]Running 10000 simulations.:  97%|█████████▋| 9735/10000 [01:13<00:03, 77.00it/s]Running 10000 simulations.:  97%|█████████▋| 9744/10000 [01:13<00:03, 74.95it/s]Running 10000 simulations.:  98%|█████████▊| 9752/10000 [01:13<00:03, 74.52it/s]Running 10000 simulations.:  98%|█████████▊| 9760/10000 [01:13<00:03, 73.64it/s]Running 10000 simulations.:  98%|█████████▊| 9768/10000 [01:13<00:03, 74.45it/s]Running 10000 simulations.:  98%|█████████▊| 9776/10000 [01:14<00:03, 73.97it/s]Running 10000 simulations.:  98%|█████████▊| 9784/10000 [01:14<00:02, 72.69it/s]Running 10000 simulations.:  98%|█████████▊| 9792/10000 [01:14<00:02, 72.83it/s]Running 10000 simulations.:  98%|█████████▊| 9800/10000 [01:14<00:02, 71.85it/s]Running 10000 simulations.:  98%|█████████▊| 9808/10000 [01:14<00:02, 71.33it/s]Running 10000 simulations.:  98%|█████████▊| 9816/10000 [01:14<00:02, 72.38it/s]Running 10000 simulations.:  98%|█████████▊| 9824/10000 [01:14<00:02, 73.06it/s]Running 10000 simulations.:  98%|█████████▊| 9832/10000 [01:14<00:02, 72.76it/s]Running 10000 simulations.:  98%|█████████▊| 9840/10000 [01:14<00:02, 72.17it/s]Running 10000 simulations.:  98%|█████████▊| 9848/10000 [01:15<00:02, 72.03it/s]Running 10000 simulations.:  99%|█████████▊| 9856/10000 [01:15<00:02, 71.38it/s]Running 10000 simulations.:  99%|█████████▊| 9864/10000 [01:15<00:01, 71.62it/s]Running 10000 simulations.:  99%|█████████▊| 9872/10000 [01:15<00:01, 72.21it/s]Running 10000 simulations.:  99%|█████████▉| 9880/10000 [01:15<00:01, 72.32it/s]Running 10000 simulations.:  99%|█████████▉| 9888/10000 [01:15<00:01, 71.92it/s]Running 10000 simulations.:  99%|█████████▉| 9896/10000 [01:15<00:01, 71.36it/s]Running 10000 simulations.:  99%|█████████▉| 9904/10000 [01:15<00:01, 71.85it/s]Running 10000 simulations.:  99%|█████████▉| 9912/10000 [01:15<00:01, 71.50it/s]Running 10000 simulations.:  99%|█████████▉| 9920/10000 [01:16<00:01, 71.35it/s]Running 10000 simulations.:  99%|█████████▉| 9930/10000 [01:16<00:00, 77.51it/s]Running 10000 simulations.:  99%|█████████▉| 9943/10000 [01:16<00:00, 86.23it/s]Running 10000 simulations.: 100%|█████████▉| 9955/10000 [01:16<00:00, 93.89it/s]Running 10000 simulations.: 100%|█████████▉| 9967/10000 [01:16<00:00, 100.27it/s]Running 10000 simulations.: 100%|█████████▉| 9978/10000 [01:16<00:00, 101.98it/s]Running 10000 simulations.: 100%|█████████▉| 9989/10000 [01:16<00:00, 103.77it/s]Running 10000 simulations.: 100%|██████████| 10000/10000 [01:16<00:00, 130.16it/s]
Running 10000 simulations.:   0%|          | 0/10000 [00:00<?, ?it/s]Running 10000 simulations.:   0%|          | 16/10000 [00:00<01:03, 156.97it/s]Running 10000 simulations.:   0%|          | 29/10000 [00:00<01:07, 147.63it/s]Running 10000 simulations.:   0%|          | 41/10000 [00:00<01:12, 138.00it/s]Running 10000 simulations.:   1%|          | 54/10000 [00:00<01:15, 132.47it/s]Running 10000 simulations.:   1%|          | 67/10000 [00:00<01:16, 129.26it/s]Running 10000 simulations.:   1%|          | 79/10000 [00:00<01:18, 126.10it/s]Running 10000 simulations.:   1%|          | 91/10000 [00:00<01:20, 123.76it/s]Running 10000 simulations.:   1%|          | 104/10000 [00:00<01:19, 123.70it/s]Running 10000 simulations.:   1%|          | 117/10000 [00:00<01:20, 123.09it/s]Running 10000 simulations.:   1%|▏         | 130/10000 [00:01<01:20, 122.22it/s]Running 10000 simulations.:   1%|▏         | 143/10000 [00:01<01:20, 121.82it/s]Running 10000 simulations.:   2%|▏         | 156/10000 [00:01<01:20, 121.96it/s]Running 10000 simulations.:   2%|▏         | 169/10000 [00:01<01:20, 121.92it/s]Running 10000 simulations.:   2%|▏         | 182/10000 [00:01<01:20, 122.42it/s]Running 10000 simulations.:   2%|▏         | 195/10000 [00:01<01:21, 120.42it/s]Running 10000 simulations.:   2%|▏         | 207/10000 [00:01<01:21, 119.74it/s]Running 10000 simulations.:   2%|▏         | 219/10000 [00:01<01:21, 119.49it/s]Running 10000 simulations.:   2%|▏         | 232/10000 [00:01<01:21, 119.76it/s]Running 10000 simulations.:   2%|▏         | 245/10000 [00:01<01:21, 120.03it/s]Running 10000 simulations.:   3%|▎         | 258/10000 [00:02<01:21, 120.11it/s]Running 10000 simulations.:   3%|▎         | 271/10000 [00:02<01:20, 120.65it/s]Running 10000 simulations.:   3%|▎         | 284/10000 [00:02<01:20, 121.24it/s]Running 10000 simulations.:   3%|▎         | 297/10000 [00:02<01:19, 121.52it/s]Running 10000 simulations.:   3%|▎         | 310/10000 [00:02<01:20, 120.41it/s]Running 10000 simulations.:   3%|▎         | 323/10000 [00:02<01:20, 119.84it/s]Running 10000 simulations.:   3%|▎         | 335/10000 [00:02<01:20, 119.65it/s]Running 10000 simulations.:   3%|▎         | 347/10000 [00:02<01:20, 119.39it/s]Running 10000 simulations.:   4%|▎         | 359/10000 [00:02<01:20, 119.21it/s]Running 10000 simulations.:   4%|▎         | 372/10000 [00:03<01:20, 119.79it/s]Running 10000 simulations.:   4%|▍         | 385/10000 [00:03<01:19, 120.38it/s]Running 10000 simulations.:   4%|▍         | 398/10000 [00:03<01:19, 120.86it/s]Running 10000 simulations.:   4%|▍         | 411/10000 [00:03<01:19, 120.98it/s]Running 10000 simulations.:   4%|▍         | 424/10000 [00:03<01:19, 120.71it/s]Running 10000 simulations.:   4%|▍         | 437/10000 [00:03<01:19, 120.18it/s]Running 10000 simulations.:   4%|▍         | 450/10000 [00:03<01:19, 119.76it/s]Running 10000 simulations.:   5%|▍         | 462/10000 [00:03<01:20, 119.06it/s]Running 10000 simulations.:   5%|▍         | 474/10000 [00:03<01:19, 119.12it/s]Running 10000 simulations.:   5%|▍         | 486/10000 [00:04<01:19, 119.24it/s]Running 10000 simulations.:   5%|▍         | 499/10000 [00:04<01:19, 119.61it/s]Running 10000 simulations.:   5%|▌         | 511/10000 [00:04<01:19, 119.43it/s]Running 10000 simulations.:   5%|▌         | 523/10000 [00:04<01:19, 119.23it/s]Running 10000 simulations.:   5%|▌         | 535/10000 [00:04<01:19, 119.42it/s]Running 10000 simulations.:   5%|▌         | 548/10000 [00:04<01:18, 119.87it/s]Running 10000 simulations.:   6%|▌         | 561/10000 [00:04<01:18, 120.26it/s]Running 10000 simulations.:   6%|▌         | 574/10000 [00:04<01:18, 120.24it/s]Running 10000 simulations.:   6%|▌         | 587/10000 [00:04<01:18, 119.30it/s]Running 10000 simulations.:   6%|▌         | 599/10000 [00:04<01:18, 119.03it/s]Running 10000 simulations.:   6%|▌         | 612/10000 [00:05<01:18, 119.75it/s]Running 10000 simulations.:   6%|▌         | 624/10000 [00:05<01:22, 114.02it/s]Running 10000 simulations.:   6%|▋         | 636/10000 [00:05<01:21, 115.37it/s]Running 10000 simulations.:   6%|▋         | 649/10000 [00:05<01:19, 117.76it/s]Running 10000 simulations.:   7%|▋         | 662/10000 [00:05<01:18, 118.57it/s]Running 10000 simulations.:   7%|▋         | 674/10000 [00:05<01:18, 118.94it/s]Running 10000 simulations.:   7%|▋         | 686/10000 [00:05<01:18, 119.20it/s]Running 10000 simulations.:   7%|▋         | 698/10000 [00:05<01:18, 118.83it/s]Running 10000 simulations.:   7%|▋         | 710/10000 [00:05<01:18, 118.24it/s]Running 10000 simulations.:   7%|▋         | 722/10000 [00:05<01:18, 118.66it/s]Running 10000 simulations.:   7%|▋         | 735/10000 [00:06<01:17, 119.07it/s]Running 10000 simulations.:   7%|▋         | 747/10000 [00:06<01:17, 119.02it/s]Running 10000 simulations.:   8%|▊         | 759/10000 [00:06<01:17, 119.12it/s]Running 10000 simulations.:   8%|▊         | 771/10000 [00:06<01:17, 119.18it/s]Running 10000 simulations.:   8%|▊         | 784/10000 [00:06<01:17, 119.50it/s]Running 10000 simulations.:   8%|▊         | 796/10000 [00:06<01:17, 119.40it/s]Running 10000 simulations.:   8%|▊         | 808/10000 [00:06<01:17, 118.24it/s]Running 10000 simulations.:   8%|▊         | 820/10000 [00:06<01:17, 117.88it/s]Running 10000 simulations.:   8%|▊         | 832/10000 [00:06<01:17, 118.11it/s]Running 10000 simulations.:   8%|▊         | 844/10000 [00:07<01:17, 118.24it/s]Running 10000 simulations.:   9%|▊         | 856/10000 [00:07<01:17, 118.05it/s]Running 10000 simulations.:   9%|▊         | 869/10000 [00:07<01:16, 118.71it/s]Running 10000 simulations.:   9%|▉         | 882/10000 [00:07<01:16, 119.29it/s]Running 10000 simulations.:   9%|▉         | 895/10000 [00:07<01:15, 119.97it/s]Running 10000 simulations.:   9%|▉         | 908/10000 [00:07<01:15, 120.53it/s]Running 10000 simulations.:   9%|▉         | 921/10000 [00:07<01:15, 119.57it/s]Running 10000 simulations.:   9%|▉         | 933/10000 [00:07<01:16, 118.80it/s]Running 10000 simulations.:   9%|▉         | 945/10000 [00:07<01:16, 118.74it/s]Running 10000 simulations.:  10%|▉         | 957/10000 [00:07<01:16, 118.84it/s]Running 10000 simulations.:  10%|▉         | 969/10000 [00:08<01:16, 118.57it/s]Running 10000 simulations.:  10%|▉         | 981/10000 [00:08<01:16, 118.64it/s]Running 10000 simulations.:  10%|▉         | 998/10000 [00:08<01:09, 128.89it/s]Running 10000 simulations.:  10%|█         | 1015/10000 [00:08<01:04, 138.25it/s]Running 10000 simulations.:  10%|█         | 1032/10000 [00:08<01:01, 146.22it/s]Running 10000 simulations.:  10%|█         | 1049/10000 [00:08<00:59, 151.29it/s]Running 10000 simulations.:  11%|█         | 1066/10000 [00:08<00:57, 154.83it/s]Running 10000 simulations.:  11%|█         | 1083/10000 [00:08<00:56, 156.57it/s]Running 10000 simulations.:  11%|█         | 1100/10000 [00:08<00:56, 157.69it/s]Running 10000 simulations.:  11%|█         | 1116/10000 [00:08<00:56, 158.07it/s]Running 10000 simulations.:  11%|█▏        | 1132/10000 [00:09<00:56, 158.15it/s]Running 10000 simulations.:  11%|█▏        | 1148/10000 [00:09<00:55, 158.32it/s]Running 10000 simulations.:  12%|█▏        | 1164/10000 [00:09<00:55, 158.26it/s]Running 10000 simulations.:  12%|█▏        | 1180/10000 [00:09<01:00, 144.81it/s]Running 10000 simulations.:  12%|█▏        | 1195/10000 [00:09<01:07, 129.92it/s]Running 10000 simulations.:  12%|█▏        | 1209/10000 [00:09<01:13, 119.86it/s]Running 10000 simulations.:  12%|█▏        | 1225/10000 [00:09<01:08, 127.94it/s]Running 10000 simulations.:  12%|█▏        | 1241/10000 [00:09<01:05, 134.44it/s]Running 10000 simulations.:  13%|█▎        | 1256/10000 [00:10<01:03, 138.67it/s]Running 10000 simulations.:  13%|█▎        | 1272/10000 [00:10<01:01, 142.16it/s]Running 10000 simulations.:  13%|█▎        | 1288/10000 [00:10<00:59, 145.36it/s]Running 10000 simulations.:  13%|█▎        | 1304/10000 [00:10<00:58, 147.52it/s]Running 10000 simulations.:  13%|█▎        | 1320/10000 [00:10<00:58, 148.66it/s]Running 10000 simulations.:  13%|█▎        | 1336/10000 [00:10<00:58, 149.23it/s]Running 10000 simulations.:  14%|█▎        | 1351/10000 [00:10<00:57, 149.32it/s]Running 10000 simulations.:  14%|█▎        | 1367/10000 [00:10<00:57, 150.05it/s]Running 10000 simulations.:  14%|█▍        | 1383/10000 [00:10<00:57, 150.96it/s]Running 10000 simulations.:  14%|█▍        | 1399/10000 [00:10<00:57, 150.89it/s]Running 10000 simulations.:  14%|█▍        | 1415/10000 [00:11<00:56, 150.79it/s]Running 10000 simulations.:  14%|█▍        | 1431/10000 [00:11<00:56, 150.90it/s]Running 10000 simulations.:  14%|█▍        | 1447/10000 [00:11<00:56, 151.41it/s]Running 10000 simulations.:  15%|█▍        | 1463/10000 [00:11<00:56, 151.92it/s]Running 10000 simulations.:  15%|█▍        | 1479/10000 [00:11<00:56, 151.55it/s]Running 10000 simulations.:  15%|█▍        | 1495/10000 [00:11<00:56, 151.76it/s]Running 10000 simulations.:  15%|█▌        | 1511/10000 [00:11<00:55, 152.14it/s]Running 10000 simulations.:  15%|█▌        | 1527/10000 [00:11<00:55, 152.06it/s]Running 10000 simulations.:  15%|█▌        | 1543/10000 [00:11<00:55, 152.06it/s]Running 10000 simulations.:  16%|█▌        | 1559/10000 [00:12<00:55, 152.60it/s]Running 10000 simulations.:  16%|█▌        | 1575/10000 [00:12<00:55, 152.17it/s]Running 10000 simulations.:  16%|█▌        | 1591/10000 [00:12<00:58, 143.88it/s]Running 10000 simulations.:  16%|█▌        | 1606/10000 [00:12<01:02, 134.54it/s]Running 10000 simulations.:  16%|█▌        | 1620/10000 [00:12<01:04, 129.56it/s]Running 10000 simulations.:  16%|█▋        | 1634/10000 [00:12<01:07, 124.57it/s]Running 10000 simulations.:  16%|█▋        | 1647/10000 [00:12<01:07, 123.29it/s]Running 10000 simulations.:  17%|█▋        | 1660/10000 [00:12<01:08, 121.63it/s]Running 10000 simulations.:  17%|█▋        | 1673/10000 [00:12<01:09, 120.23it/s]Running 10000 simulations.:  17%|█▋        | 1686/10000 [00:13<01:09, 119.58it/s]Running 10000 simulations.:  17%|█▋        | 1699/10000 [00:13<01:09, 119.34it/s]Running 10000 simulations.:  17%|█▋        | 1711/10000 [00:13<01:09, 118.82it/s]Running 10000 simulations.:  17%|█▋        | 1723/10000 [00:13<01:09, 118.90it/s]Running 10000 simulations.:  17%|█▋        | 1735/10000 [00:13<01:09, 118.48it/s]Running 10000 simulations.:  17%|█▋        | 1747/10000 [00:13<01:09, 118.42it/s]Running 10000 simulations.:  18%|█▊        | 1759/10000 [00:13<01:09, 118.71it/s]Running 10000 simulations.:  18%|█▊        | 1771/10000 [00:13<01:09, 118.11it/s]Running 10000 simulations.:  18%|█▊        | 1783/10000 [00:13<01:09, 117.59it/s]Running 10000 simulations.:  18%|█▊        | 1795/10000 [00:13<01:09, 117.71it/s]Running 10000 simulations.:  18%|█▊        | 1807/10000 [00:14<01:09, 117.80it/s]Running 10000 simulations.:  18%|█▊        | 1819/10000 [00:14<01:09, 118.15it/s]Running 10000 simulations.:  18%|█▊        | 1832/10000 [00:14<01:07, 120.59it/s]Running 10000 simulations.:  18%|█▊        | 1849/10000 [00:14<01:01, 131.63it/s]Running 10000 simulations.:  19%|█▊        | 1866/10000 [00:14<00:57, 140.70it/s]Running 10000 simulations.:  19%|█▉        | 1883/10000 [00:14<00:55, 147.58it/s]Running 10000 simulations.:  19%|█▉        | 1899/10000 [00:14<00:54, 149.15it/s]Running 10000 simulations.:  19%|█▉        | 1915/10000 [00:14<00:53, 150.27it/s]Running 10000 simulations.:  19%|█▉        | 1931/10000 [00:14<00:53, 150.50it/s]Running 10000 simulations.:  19%|█▉        | 1947/10000 [00:15<00:52, 152.08it/s]Running 10000 simulations.:  20%|█▉        | 1963/10000 [00:15<00:54, 147.62it/s]Running 10000 simulations.:  20%|█▉        | 1978/10000 [00:15<00:55, 145.51it/s]Running 10000 simulations.:  20%|█▉        | 1993/10000 [00:15<00:55, 143.80it/s]Running 10000 simulations.:  20%|██        | 2008/10000 [00:15<00:56, 142.62it/s]Running 10000 simulations.:  20%|██        | 2023/10000 [00:15<00:55, 144.05it/s]Running 10000 simulations.:  20%|██        | 2039/10000 [00:15<00:54, 146.21it/s]Running 10000 simulations.:  21%|██        | 2054/10000 [00:15<00:53, 147.20it/s]Running 10000 simulations.:  21%|██        | 2070/10000 [00:15<00:53, 148.19it/s]Running 10000 simulations.:  21%|██        | 2085/10000 [00:15<00:53, 148.65it/s]Running 10000 simulations.:  21%|██        | 2101/10000 [00:16<00:52, 149.34it/s]Running 10000 simulations.:  21%|██        | 2117/10000 [00:16<00:52, 149.86it/s]Running 10000 simulations.:  21%|██▏       | 2133/10000 [00:16<00:52, 150.26it/s]Running 10000 simulations.:  21%|██▏       | 2149/10000 [00:16<00:52, 150.58it/s]Running 10000 simulations.:  22%|██▏       | 2165/10000 [00:16<00:52, 149.76it/s]Running 10000 simulations.:  22%|██▏       | 2181/10000 [00:16<00:51, 151.64it/s]Running 10000 simulations.:  22%|██▏       | 2197/10000 [00:16<00:51, 151.75it/s]Running 10000 simulations.:  22%|██▏       | 2213/10000 [00:16<00:51, 152.20it/s]Running 10000 simulations.:  22%|██▏       | 2229/10000 [00:16<00:50, 152.55it/s]Running 10000 simulations.:  22%|██▏       | 2245/10000 [00:17<00:51, 150.66it/s]Running 10000 simulations.:  23%|██▎       | 2261/10000 [00:17<00:52, 147.46it/s]Running 10000 simulations.:  23%|██▎       | 2276/10000 [00:17<00:53, 145.60it/s]Running 10000 simulations.:  23%|██▎       | 2291/10000 [00:17<00:53, 144.40it/s]Running 10000 simulations.:  23%|██▎       | 2306/10000 [00:17<00:53, 143.56it/s]Running 10000 simulations.:  23%|██▎       | 2321/10000 [00:17<00:53, 142.25it/s]Running 10000 simulations.:  23%|██▎       | 2336/10000 [00:17<00:54, 141.40it/s]Running 10000 simulations.:  24%|██▎       | 2351/10000 [00:17<00:54, 141.26it/s]Running 10000 simulations.:  24%|██▎       | 2366/10000 [00:17<00:53, 141.40it/s]Running 10000 simulations.:  24%|██▍       | 2381/10000 [00:17<00:53, 141.71it/s]Running 10000 simulations.:  24%|██▍       | 2396/10000 [00:18<00:53, 141.93it/s]Running 10000 simulations.:  24%|██▍       | 2411/10000 [00:18<00:53, 142.33it/s]Running 10000 simulations.:  24%|██▍       | 2426/10000 [00:18<00:53, 142.66it/s]Running 10000 simulations.:  24%|██▍       | 2441/10000 [00:18<00:52, 144.37it/s]Running 10000 simulations.:  25%|██▍       | 2456/10000 [00:18<00:52, 144.52it/s]Running 10000 simulations.:  25%|██▍       | 2471/10000 [00:18<00:52, 144.73it/s]Running 10000 simulations.:  25%|██▍       | 2486/10000 [00:18<00:52, 143.54it/s]Running 10000 simulations.:  25%|██▌       | 2501/10000 [00:18<00:52, 142.12it/s]Running 10000 simulations.:  25%|██▌       | 2516/10000 [00:18<00:52, 141.57it/s]Running 10000 simulations.:  25%|██▌       | 2531/10000 [00:19<00:55, 134.56it/s]Running 10000 simulations.:  25%|██▌       | 2545/10000 [00:19<01:06, 111.85it/s]Running 10000 simulations.:  26%|██▌       | 2557/10000 [00:19<01:14, 99.61it/s] Running 10000 simulations.:  26%|██▌       | 2568/10000 [00:19<01:19, 93.00it/s]Running 10000 simulations.:  26%|██▌       | 2578/10000 [00:19<01:24, 87.39it/s]Running 10000 simulations.:  26%|██▌       | 2588/10000 [00:19<01:26, 85.48it/s]Running 10000 simulations.:  26%|██▌       | 2597/10000 [00:19<01:28, 83.73it/s]Running 10000 simulations.:  26%|██▌       | 2606/10000 [00:19<01:30, 81.59it/s]Running 10000 simulations.:  26%|██▌       | 2615/10000 [00:20<01:32, 80.26it/s]Running 10000 simulations.:  26%|██▌       | 2624/10000 [00:20<01:32, 80.09it/s]Running 10000 simulations.:  26%|██▋       | 2638/10000 [00:20<01:20, 91.80it/s]Running 10000 simulations.:  27%|██▋       | 2652/10000 [00:20<01:11, 102.37it/s]Running 10000 simulations.:  27%|██▋       | 2666/10000 [00:20<01:05, 111.26it/s]Running 10000 simulations.:  27%|██▋       | 2681/10000 [00:20<01:01, 118.60it/s]Running 10000 simulations.:  27%|██▋       | 2696/10000 [00:20<00:58, 124.89it/s]Running 10000 simulations.:  27%|██▋       | 2710/10000 [00:20<00:56, 128.28it/s]Running 10000 simulations.:  27%|██▋       | 2724/10000 [00:20<00:55, 130.89it/s]Running 10000 simulations.:  27%|██▋       | 2739/10000 [00:21<00:54, 133.53it/s]Running 10000 simulations.:  28%|██▊       | 2753/10000 [00:21<00:53, 135.03it/s]Running 10000 simulations.:  28%|██▊       | 2767/10000 [00:21<00:53, 136.39it/s]Running 10000 simulations.:  28%|██▊       | 2782/10000 [00:21<00:52, 137.52it/s]Running 10000 simulations.:  28%|██▊       | 2797/10000 [00:21<00:51, 138.58it/s]Running 10000 simulations.:  28%|██▊       | 2811/10000 [00:21<00:51, 138.90it/s]Running 10000 simulations.:  28%|██▊       | 2826/10000 [00:21<00:51, 139.26it/s]Running 10000 simulations.:  28%|██▊       | 2840/10000 [00:21<00:51, 138.26it/s]Running 10000 simulations.:  29%|██▊       | 2854/10000 [00:21<00:53, 133.55it/s]Running 10000 simulations.:  29%|██▊       | 2868/10000 [00:22<01:07, 105.90it/s]Running 10000 simulations.:  29%|██▉       | 2880/10000 [00:22<01:16, 92.58it/s] Running 10000 simulations.:  29%|██▉       | 2891/10000 [00:22<01:23, 85.38it/s]Running 10000 simulations.:  29%|██▉       | 2901/10000 [00:22<01:27, 81.09it/s]Running 10000 simulations.:  29%|██▉       | 2910/10000 [00:22<01:30, 78.44it/s]Running 10000 simulations.:  29%|██▉       | 2919/10000 [00:22<01:32, 76.16it/s]Running 10000 simulations.:  29%|██▉       | 2927/10000 [00:22<01:35, 74.42it/s]Running 10000 simulations.:  29%|██▉       | 2935/10000 [00:23<01:35, 73.62it/s]Running 10000 simulations.:  29%|██▉       | 2948/10000 [00:23<01:23, 84.62it/s]Running 10000 simulations.:  30%|██▉       | 2964/10000 [00:23<01:11, 98.09it/s]Running 10000 simulations.:  30%|██▉       | 2980/10000 [00:23<01:03, 110.61it/s]Running 10000 simulations.:  30%|██▉       | 2996/10000 [00:23<00:57, 121.60it/s]Running 10000 simulations.:  30%|███       | 3012/10000 [00:23<00:53, 130.28it/s]Running 10000 simulations.:  30%|███       | 3028/10000 [00:23<00:50, 136.96it/s]Running 10000 simulations.:  30%|███       | 3044/10000 [00:23<00:48, 142.02it/s]Running 10000 simulations.:  31%|███       | 3060/10000 [00:23<00:47, 145.45it/s]Running 10000 simulations.:  31%|███       | 3076/10000 [00:23<00:46, 147.97it/s]Running 10000 simulations.:  31%|███       | 3092/10000 [00:24<00:46, 149.59it/s]Running 10000 simulations.:  31%|███       | 3108/10000 [00:24<00:45, 151.36it/s]Running 10000 simulations.:  31%|███       | 3124/10000 [00:24<00:44, 152.91it/s]Running 10000 simulations.:  31%|███▏      | 3140/10000 [00:24<00:44, 153.95it/s]Running 10000 simulations.:  32%|███▏      | 3156/10000 [00:24<00:44, 154.67it/s]Running 10000 simulations.:  32%|███▏      | 3172/10000 [00:24<00:43, 155.21it/s]Running 10000 simulations.:  32%|███▏      | 3188/10000 [00:24<00:43, 155.17it/s]Running 10000 simulations.:  32%|███▏      | 3204/10000 [00:24<00:43, 155.12it/s]Running 10000 simulations.:  32%|███▏      | 3220/10000 [00:24<00:43, 154.85it/s]Running 10000 simulations.:  32%|███▏      | 3236/10000 [00:24<00:43, 154.90it/s]Running 10000 simulations.:  33%|███▎      | 3252/10000 [00:25<00:43, 155.12it/s]Running 10000 simulations.:  33%|███▎      | 3268/10000 [00:25<00:43, 154.90it/s]Running 10000 simulations.:  33%|███▎      | 3284/10000 [00:25<00:43, 155.24it/s]Running 10000 simulations.:  33%|███▎      | 3300/10000 [00:25<00:42, 155.98it/s]Running 10000 simulations.:  33%|███▎      | 3316/10000 [00:25<00:42, 156.47it/s]Running 10000 simulations.:  33%|███▎      | 3332/10000 [00:25<00:42, 156.16it/s]Running 10000 simulations.:  33%|███▎      | 3348/10000 [00:25<00:42, 155.76it/s]Running 10000 simulations.:  34%|███▎      | 3364/10000 [00:25<00:42, 155.35it/s]Running 10000 simulations.:  34%|███▍      | 3380/10000 [00:25<00:42, 154.88it/s]Running 10000 simulations.:  34%|███▍      | 3396/10000 [00:25<00:42, 155.07it/s]Running 10000 simulations.:  34%|███▍      | 3412/10000 [00:26<00:42, 155.09it/s]Running 10000 simulations.:  34%|███▍      | 3428/10000 [00:26<00:42, 155.43it/s]Running 10000 simulations.:  34%|███▍      | 3444/10000 [00:26<00:42, 155.44it/s]Running 10000 simulations.:  35%|███▍      | 3460/10000 [00:26<00:42, 155.43it/s]Running 10000 simulations.:  35%|███▍      | 3476/10000 [00:26<00:42, 154.70it/s]Running 10000 simulations.:  35%|███▍      | 3492/10000 [00:26<00:42, 153.73it/s]Running 10000 simulations.:  35%|███▌      | 3508/10000 [00:26<00:42, 153.67it/s]Running 10000 simulations.:  35%|███▌      | 3524/10000 [00:26<00:42, 154.12it/s]Running 10000 simulations.:  35%|███▌      | 3540/10000 [00:26<00:41, 154.52it/s]Running 10000 simulations.:  36%|███▌      | 3556/10000 [00:27<00:41, 154.90it/s]Running 10000 simulations.:  36%|███▌      | 3572/10000 [00:27<00:41, 155.22it/s]Running 10000 simulations.:  36%|███▌      | 3588/10000 [00:27<00:41, 155.67it/s]Running 10000 simulations.:  36%|███▌      | 3604/10000 [00:27<00:41, 155.60it/s]Running 10000 simulations.:  36%|███▌      | 3620/10000 [00:27<00:40, 155.62it/s]Running 10000 simulations.:  36%|███▋      | 3636/10000 [00:27<00:40, 155.60it/s]Running 10000 simulations.:  37%|███▋      | 3652/10000 [00:27<00:40, 155.37it/s]Running 10000 simulations.:  37%|███▋      | 3668/10000 [00:27<00:40, 155.06it/s]Running 10000 simulations.:  37%|███▋      | 3684/10000 [00:27<00:40, 154.83it/s]Running 10000 simulations.:  37%|███▋      | 3700/10000 [00:27<00:40, 155.18it/s]Running 10000 simulations.:  37%|███▋      | 3716/10000 [00:28<00:40, 155.22it/s]Running 10000 simulations.:  37%|███▋      | 3732/10000 [00:28<00:40, 155.33it/s]Running 10000 simulations.:  37%|███▋      | 3748/10000 [00:28<00:40, 155.01it/s]Running 10000 simulations.:  38%|███▊      | 3764/10000 [00:28<00:40, 154.44it/s]Running 10000 simulations.:  38%|███▊      | 3780/10000 [00:28<00:40, 154.19it/s]Running 10000 simulations.:  38%|███▊      | 3796/10000 [00:28<00:40, 154.09it/s]Running 10000 simulations.:  38%|███▊      | 3812/10000 [00:28<00:39, 154.71it/s]Running 10000 simulations.:  38%|███▊      | 3828/10000 [00:28<00:40, 154.28it/s]Running 10000 simulations.:  38%|███▊      | 3844/10000 [00:28<00:39, 154.57it/s]Running 10000 simulations.:  39%|███▊      | 3860/10000 [00:28<00:39, 154.85it/s]Running 10000 simulations.:  39%|███▉      | 3876/10000 [00:29<00:39, 155.52it/s]Running 10000 simulations.:  39%|███▉      | 3892/10000 [00:29<00:39, 153.68it/s]Running 10000 simulations.:  39%|███▉      | 3908/10000 [00:29<00:40, 151.38it/s]Running 10000 simulations.:  39%|███▉      | 3924/10000 [00:29<00:40, 149.01it/s]Running 10000 simulations.:  39%|███▉      | 3939/10000 [00:29<00:41, 147.45it/s]Running 10000 simulations.:  40%|███▉      | 3954/10000 [00:29<00:41, 146.24it/s]Running 10000 simulations.:  40%|███▉      | 3969/10000 [00:29<00:41, 143.98it/s]Running 10000 simulations.:  40%|███▉      | 3984/10000 [00:29<00:42, 143.19it/s]Running 10000 simulations.:  40%|███▉      | 3999/10000 [00:29<00:41, 143.02it/s]Running 10000 simulations.:  40%|████      | 4014/10000 [00:30<00:42, 142.04it/s]Running 10000 simulations.:  40%|████      | 4029/10000 [00:30<00:42, 141.94it/s]Running 10000 simulations.:  40%|████      | 4044/10000 [00:30<00:41, 142.63it/s]Running 10000 simulations.:  41%|████      | 4059/10000 [00:30<00:41, 142.94it/s]Running 10000 simulations.:  41%|████      | 4074/10000 [00:30<00:41, 143.72it/s]Running 10000 simulations.:  41%|████      | 4089/10000 [00:30<00:40, 144.22it/s]Running 10000 simulations.:  41%|████      | 4104/10000 [00:30<00:41, 140.59it/s]Running 10000 simulations.:  41%|████      | 4119/10000 [00:30<00:42, 139.70it/s]Running 10000 simulations.:  41%|████▏     | 4134/10000 [00:30<00:41, 139.74it/s]Running 10000 simulations.:  41%|████▏     | 4149/10000 [00:31<00:41, 140.30it/s]Running 10000 simulations.:  42%|████▏     | 4164/10000 [00:31<00:41, 140.85it/s]Running 10000 simulations.:  42%|████▏     | 4179/10000 [00:31<00:41, 141.37it/s]Running 10000 simulations.:  42%|████▏     | 4194/10000 [00:31<00:40, 142.05it/s]Running 10000 simulations.:  42%|████▏     | 4209/10000 [00:31<00:40, 142.43it/s]Running 10000 simulations.:  42%|████▏     | 4224/10000 [00:31<00:40, 142.25it/s]Running 10000 simulations.:  42%|████▏     | 4239/10000 [00:31<00:40, 142.60it/s]Running 10000 simulations.:  43%|████▎     | 4254/10000 [00:31<00:40, 142.25it/s]Running 10000 simulations.:  43%|████▎     | 4269/10000 [00:31<00:40, 140.83it/s]Running 10000 simulations.:  43%|████▎     | 4284/10000 [00:31<00:40, 140.50it/s]Running 10000 simulations.:  43%|████▎     | 4301/10000 [00:32<00:38, 147.38it/s]Running 10000 simulations.:  43%|████▎     | 4318/10000 [00:32<00:37, 152.38it/s]Running 10000 simulations.:  43%|████▎     | 4335/10000 [00:32<00:36, 156.17it/s]Running 10000 simulations.:  44%|████▎     | 4352/10000 [00:32<00:36, 156.04it/s]Running 10000 simulations.:  44%|████▎     | 4368/10000 [00:32<00:41, 135.54it/s]Running 10000 simulations.:  44%|████▍     | 4383/10000 [00:32<00:45, 123.44it/s]Running 10000 simulations.:  44%|████▍     | 4396/10000 [00:32<00:48, 116.44it/s]Running 10000 simulations.:  44%|████▍     | 4409/10000 [00:32<00:49, 111.84it/s]Running 10000 simulations.:  44%|████▍     | 4421/10000 [00:33<00:51, 107.81it/s]Running 10000 simulations.:  44%|████▍     | 4433/10000 [00:33<00:52, 106.19it/s]Running 10000 simulations.:  44%|████▍     | 4445/10000 [00:33<00:51, 108.08it/s]Running 10000 simulations.:  45%|████▍     | 4458/10000 [00:33<00:48, 113.20it/s]Running 10000 simulations.:  45%|████▍     | 4472/10000 [00:33<00:46, 118.20it/s]Running 10000 simulations.:  45%|████▍     | 4485/10000 [00:33<00:45, 120.80it/s]Running 10000 simulations.:  45%|████▍     | 4498/10000 [00:33<00:44, 122.58it/s]Running 10000 simulations.:  45%|████▌     | 4511/10000 [00:33<00:44, 124.35it/s]Running 10000 simulations.:  45%|████▌     | 4524/10000 [00:33<00:43, 125.57it/s]Running 10000 simulations.:  45%|████▌     | 4537/10000 [00:33<00:43, 126.49it/s]Running 10000 simulations.:  46%|████▌     | 4550/10000 [00:34<00:42, 127.27it/s]Running 10000 simulations.:  46%|████▌     | 4563/10000 [00:34<00:42, 127.79it/s]Running 10000 simulations.:  46%|████▌     | 4576/10000 [00:34<00:42, 128.23it/s]Running 10000 simulations.:  46%|████▌     | 4589/10000 [00:34<00:42, 128.00it/s]Running 10000 simulations.:  46%|████▌     | 4602/10000 [00:34<00:42, 126.53it/s]Running 10000 simulations.:  46%|████▌     | 4615/10000 [00:34<00:43, 125.08it/s]Running 10000 simulations.:  46%|████▋     | 4628/10000 [00:34<00:43, 124.00it/s]Running 10000 simulations.:  46%|████▋     | 4641/10000 [00:34<00:43, 123.26it/s]Running 10000 simulations.:  47%|████▋     | 4654/10000 [00:34<00:43, 122.79it/s]Running 10000 simulations.:  47%|████▋     | 4667/10000 [00:35<00:43, 123.13it/s]Running 10000 simulations.:  47%|████▋     | 4680/10000 [00:35<00:45, 118.19it/s]Running 10000 simulations.:  47%|████▋     | 4693/10000 [00:35<00:44, 120.17it/s]Running 10000 simulations.:  47%|████▋     | 4706/10000 [00:35<00:43, 121.15it/s]Running 10000 simulations.:  47%|████▋     | 4719/10000 [00:35<00:43, 120.81it/s]Running 10000 simulations.:  47%|████▋     | 4732/10000 [00:35<00:44, 119.37it/s]Running 10000 simulations.:  47%|████▋     | 4745/10000 [00:35<00:43, 119.83it/s]Running 10000 simulations.:  48%|████▊     | 4758/10000 [00:35<00:43, 120.29it/s]Running 10000 simulations.:  48%|████▊     | 4771/10000 [00:35<00:43, 121.26it/s]Running 10000 simulations.:  48%|████▊     | 4784/10000 [00:36<00:42, 122.56it/s]Running 10000 simulations.:  48%|████▊     | 4797/10000 [00:36<00:42, 122.98it/s]Running 10000 simulations.:  48%|████▊     | 4810/10000 [00:36<00:42, 123.19it/s]Running 10000 simulations.:  48%|████▊     | 4823/10000 [00:36<00:42, 123.21it/s]Running 10000 simulations.:  48%|████▊     | 4838/10000 [00:36<00:40, 128.33it/s]Running 10000 simulations.:  49%|████▊     | 4855/10000 [00:36<00:37, 136.80it/s]Running 10000 simulations.:  49%|████▊     | 4871/10000 [00:36<00:36, 142.01it/s]Running 10000 simulations.:  49%|████▉     | 4886/10000 [00:36<00:35, 142.84it/s]Running 10000 simulations.:  49%|████▉     | 4901/10000 [00:36<00:36, 140.77it/s]Running 10000 simulations.:  49%|████▉     | 4916/10000 [00:36<00:36, 139.05it/s]Running 10000 simulations.:  49%|████▉     | 4930/10000 [00:37<00:36, 138.16it/s]Running 10000 simulations.:  49%|████▉     | 4944/10000 [00:37<00:36, 137.92it/s]Running 10000 simulations.:  50%|████▉     | 4958/10000 [00:37<00:36, 137.81it/s]Running 10000 simulations.:  50%|████▉     | 4972/10000 [00:37<00:36, 138.14it/s]Running 10000 simulations.:  50%|████▉     | 4986/10000 [00:37<00:36, 138.48it/s]Running 10000 simulations.:  50%|█████     | 5000/10000 [00:37<00:36, 138.75it/s]Running 10000 simulations.:  50%|█████     | 5014/10000 [00:37<00:35, 138.95it/s]Running 10000 simulations.:  50%|█████     | 5028/10000 [00:37<00:35, 138.15it/s]Running 10000 simulations.:  50%|█████     | 5042/10000 [00:37<00:35, 137.79it/s]Running 10000 simulations.:  51%|█████     | 5056/10000 [00:37<00:35, 137.55it/s]Running 10000 simulations.:  51%|█████     | 5070/10000 [00:38<00:35, 137.63it/s]Running 10000 simulations.:  51%|█████     | 5084/10000 [00:38<00:35, 137.13it/s]Running 10000 simulations.:  51%|█████     | 5098/10000 [00:38<00:35, 137.94it/s]Running 10000 simulations.:  51%|█████     | 5112/10000 [00:38<00:35, 138.46it/s]Running 10000 simulations.:  51%|█████▏    | 5127/10000 [00:38<00:35, 138.94it/s]Running 10000 simulations.:  51%|█████▏    | 5141/10000 [00:38<00:35, 138.29it/s]Running 10000 simulations.:  52%|█████▏    | 5156/10000 [00:38<00:34, 139.00it/s]Running 10000 simulations.:  52%|█████▏    | 5170/10000 [00:38<00:34, 138.06it/s]Running 10000 simulations.:  52%|█████▏    | 5184/10000 [00:38<00:34, 137.81it/s]Running 10000 simulations.:  52%|█████▏    | 5198/10000 [00:39<00:34, 138.05it/s]Running 10000 simulations.:  52%|█████▏    | 5212/10000 [00:39<00:34, 137.58it/s]Running 10000 simulations.:  52%|█████▏    | 5226/10000 [00:39<00:34, 137.60it/s]Running 10000 simulations.:  52%|█████▏    | 5240/10000 [00:39<00:34, 137.56it/s]Running 10000 simulations.:  53%|█████▎    | 5254/10000 [00:39<00:34, 138.02it/s]Running 10000 simulations.:  53%|█████▎    | 5268/10000 [00:39<00:34, 138.60it/s]Running 10000 simulations.:  53%|█████▎    | 5282/10000 [00:39<00:34, 138.71it/s]Running 10000 simulations.:  53%|█████▎    | 5296/10000 [00:39<00:34, 137.88it/s]Running 10000 simulations.:  53%|█████▎    | 5310/10000 [00:39<00:33, 138.05it/s]Running 10000 simulations.:  53%|█████▎    | 5324/10000 [00:39<00:33, 138.15it/s]Running 10000 simulations.:  53%|█████▎    | 5338/10000 [00:40<00:33, 138.25it/s]Running 10000 simulations.:  54%|█████▎    | 5352/10000 [00:40<00:33, 138.02it/s]Running 10000 simulations.:  54%|█████▎    | 5366/10000 [00:40<00:33, 138.17it/s]Running 10000 simulations.:  54%|█████▍    | 5380/10000 [00:40<00:33, 138.50it/s]Running 10000 simulations.:  54%|█████▍    | 5394/10000 [00:40<00:33, 138.44it/s]Running 10000 simulations.:  54%|█████▍    | 5408/10000 [00:40<00:33, 138.27it/s]Running 10000 simulations.:  54%|█████▍    | 5422/10000 [00:40<00:33, 138.51it/s]Running 10000 simulations.:  54%|█████▍    | 5436/10000 [00:40<00:33, 137.97it/s]Running 10000 simulations.:  55%|█████▍    | 5450/10000 [00:40<00:33, 137.40it/s]Running 10000 simulations.:  55%|█████▍    | 5464/10000 [00:40<00:33, 137.30it/s]Running 10000 simulations.:  55%|█████▍    | 5478/10000 [00:41<00:32, 137.63it/s]Running 10000 simulations.:  55%|█████▍    | 5492/10000 [00:41<00:32, 137.45it/s]Running 10000 simulations.:  55%|█████▌    | 5506/10000 [00:41<00:32, 138.07it/s]Running 10000 simulations.:  55%|█████▌    | 5521/10000 [00:41<00:32, 138.98it/s]Running 10000 simulations.:  55%|█████▌    | 5536/10000 [00:41<00:32, 139.28it/s]Running 10000 simulations.:  56%|█████▌    | 5550/10000 [00:41<00:31, 139.44it/s]Running 10000 simulations.:  56%|█████▌    | 5564/10000 [00:41<00:32, 138.26it/s]Running 10000 simulations.:  56%|█████▌    | 5578/10000 [00:41<00:32, 137.56it/s]Running 10000 simulations.:  56%|█████▌    | 5592/10000 [00:41<00:32, 137.67it/s]Running 10000 simulations.:  56%|█████▌    | 5606/10000 [00:41<00:32, 137.04it/s]Running 10000 simulations.:  56%|█████▌    | 5620/10000 [00:42<00:31, 137.14it/s]Running 10000 simulations.:  56%|█████▋    | 5634/10000 [00:42<00:31, 137.80it/s]Running 10000 simulations.:  56%|█████▋    | 5648/10000 [00:42<00:31, 138.13it/s]Running 10000 simulations.:  57%|█████▋    | 5662/10000 [00:42<00:31, 138.34it/s]Running 10000 simulations.:  57%|█████▋    | 5676/10000 [00:42<00:31, 138.67it/s]Running 10000 simulations.:  57%|█████▋    | 5690/10000 [00:42<00:31, 137.76it/s]Running 10000 simulations.:  57%|█████▋    | 5704/10000 [00:42<00:31, 136.98it/s]Running 10000 simulations.:  57%|█████▋    | 5718/10000 [00:42<00:31, 136.65it/s]Running 10000 simulations.:  57%|█████▋    | 5732/10000 [00:42<00:31, 136.53it/s]Running 10000 simulations.:  57%|█████▋    | 5746/10000 [00:42<00:31, 136.70it/s]Running 10000 simulations.:  58%|█████▊    | 5760/10000 [00:43<00:31, 135.75it/s]Running 10000 simulations.:  58%|█████▊    | 5774/10000 [00:43<00:32, 129.73it/s]Running 10000 simulations.:  58%|█████▊    | 5788/10000 [00:43<00:33, 125.93it/s]Running 10000 simulations.:  58%|█████▊    | 5801/10000 [00:43<00:33, 123.55it/s]Running 10000 simulations.:  58%|█████▊    | 5814/10000 [00:43<00:34, 120.99it/s]Running 10000 simulations.:  58%|█████▊    | 5827/10000 [00:43<00:35, 117.84it/s]Running 10000 simulations.:  58%|█████▊    | 5839/10000 [00:43<00:35, 116.45it/s]Running 10000 simulations.:  59%|█████▊    | 5851/10000 [00:43<00:35, 115.67it/s]Running 10000 simulations.:  59%|█████▊    | 5863/10000 [00:43<00:35, 115.42it/s]Running 10000 simulations.:  59%|█████▉    | 5875/10000 [00:44<00:35, 115.83it/s]Running 10000 simulations.:  59%|█████▉    | 5887/10000 [00:44<00:35, 116.07it/s]Running 10000 simulations.:  59%|█████▉    | 5899/10000 [00:44<00:35, 115.88it/s]Running 10000 simulations.:  59%|█████▉    | 5911/10000 [00:44<00:35, 115.42it/s]Running 10000 simulations.:  59%|█████▉    | 5923/10000 [00:44<00:35, 116.06it/s]Running 10000 simulations.:  59%|█████▉    | 5935/10000 [00:44<00:35, 115.97it/s]Running 10000 simulations.:  59%|█████▉    | 5947/10000 [00:44<00:34, 116.26it/s]Running 10000 simulations.:  60%|█████▉    | 5959/10000 [00:44<00:34, 116.70it/s]Running 10000 simulations.:  60%|█████▉    | 5971/10000 [00:44<00:34, 115.20it/s]Running 10000 simulations.:  60%|█████▉    | 5983/10000 [00:45<00:34, 115.61it/s]Running 10000 simulations.:  60%|█████▉    | 5995/10000 [00:45<00:34, 114.83it/s]Running 10000 simulations.:  60%|██████    | 6007/10000 [00:45<00:34, 114.46it/s]Running 10000 simulations.:  60%|██████    | 6019/10000 [00:45<00:35, 112.87it/s]Running 10000 simulations.:  60%|██████    | 6031/10000 [00:45<00:34, 113.43it/s]Running 10000 simulations.:  60%|██████    | 6043/10000 [00:45<00:34, 114.66it/s]Running 10000 simulations.:  61%|██████    | 6055/10000 [00:45<00:34, 115.25it/s]Running 10000 simulations.:  61%|██████    | 6067/10000 [00:45<00:33, 115.74it/s]Running 10000 simulations.:  61%|██████    | 6079/10000 [00:45<00:33, 115.45it/s]Running 10000 simulations.:  61%|██████    | 6091/10000 [00:45<00:34, 114.90it/s]Running 10000 simulations.:  61%|██████    | 6103/10000 [00:46<00:33, 115.12it/s]Running 10000 simulations.:  61%|██████    | 6115/10000 [00:46<00:33, 115.16it/s]Running 10000 simulations.:  61%|██████▏   | 6127/10000 [00:46<00:33, 115.02it/s]Running 10000 simulations.:  61%|██████▏   | 6139/10000 [00:46<00:33, 115.48it/s]Running 10000 simulations.:  62%|██████▏   | 6151/10000 [00:46<00:33, 115.91it/s]Running 10000 simulations.:  62%|██████▏   | 6163/10000 [00:46<00:33, 116.11it/s]Running 10000 simulations.:  62%|██████▏   | 6175/10000 [00:46<00:32, 116.45it/s]Running 10000 simulations.:  62%|██████▏   | 6187/10000 [00:46<00:32, 116.45it/s]Running 10000 simulations.:  62%|██████▏   | 6199/10000 [00:46<00:32, 115.34it/s]Running 10000 simulations.:  62%|██████▏   | 6211/10000 [00:46<00:32, 115.79it/s]Running 10000 simulations.:  62%|██████▏   | 6223/10000 [00:47<00:32, 115.00it/s]Running 10000 simulations.:  62%|██████▏   | 6235/10000 [00:47<00:32, 114.24it/s]Running 10000 simulations.:  62%|██████▏   | 6247/10000 [00:47<00:32, 114.30it/s]Running 10000 simulations.:  63%|██████▎   | 6259/10000 [00:47<00:32, 115.21it/s]Running 10000 simulations.:  63%|██████▎   | 6271/10000 [00:47<00:32, 115.42it/s]Running 10000 simulations.:  63%|██████▎   | 6283/10000 [00:47<00:32, 115.94it/s]Running 10000 simulations.:  63%|██████▎   | 6295/10000 [00:47<00:32, 115.56it/s]Running 10000 simulations.:  63%|██████▎   | 6308/10000 [00:47<00:31, 117.38it/s]Running 10000 simulations.:  63%|██████▎   | 6321/10000 [00:47<00:30, 120.86it/s]Running 10000 simulations.:  63%|██████▎   | 6335/10000 [00:48<00:29, 123.13it/s]Running 10000 simulations.:  63%|██████▎   | 6349/10000 [00:48<00:29, 125.47it/s]Running 10000 simulations.:  64%|██████▎   | 6362/10000 [00:48<00:28, 126.30it/s]Running 10000 simulations.:  64%|██████▍   | 6376/10000 [00:48<00:27, 129.43it/s]Running 10000 simulations.:  64%|██████▍   | 6390/10000 [00:48<00:27, 129.93it/s]Running 10000 simulations.:  64%|██████▍   | 6404/10000 [00:48<00:27, 132.12it/s]Running 10000 simulations.:  64%|██████▍   | 6418/10000 [00:48<00:27, 128.74it/s]Running 10000 simulations.:  64%|██████▍   | 6431/10000 [00:48<00:28, 123.37it/s]Running 10000 simulations.:  64%|██████▍   | 6444/10000 [00:48<00:29, 120.21it/s]Running 10000 simulations.:  65%|██████▍   | 6457/10000 [00:49<00:29, 118.75it/s]Running 10000 simulations.:  65%|██████▍   | 6469/10000 [00:49<00:30, 117.09it/s]Running 10000 simulations.:  65%|██████▍   | 6481/10000 [00:49<00:30, 116.25it/s]Running 10000 simulations.:  65%|██████▍   | 6493/10000 [00:49<00:29, 117.01it/s]Running 10000 simulations.:  65%|██████▌   | 6505/10000 [00:49<00:30, 115.40it/s]Running 10000 simulations.:  65%|██████▌   | 6517/10000 [00:49<00:35, 98.23it/s] Running 10000 simulations.:  65%|██████▌   | 6528/10000 [00:49<00:39, 88.60it/s]Running 10000 simulations.:  65%|██████▌   | 6538/10000 [00:49<00:42, 82.38it/s]Running 10000 simulations.:  65%|██████▌   | 6547/10000 [00:50<00:44, 78.09it/s]Running 10000 simulations.:  66%|██████▌   | 6556/10000 [00:50<00:45, 75.84it/s]Running 10000 simulations.:  66%|██████▌   | 6564/10000 [00:50<00:45, 74.76it/s]Running 10000 simulations.:  66%|██████▌   | 6572/10000 [00:50<00:46, 73.96it/s]Running 10000 simulations.:  66%|██████▌   | 6580/10000 [00:50<00:46, 73.70it/s]Running 10000 simulations.:  66%|██████▌   | 6588/10000 [00:50<00:46, 73.72it/s]Running 10000 simulations.:  66%|██████▌   | 6599/10000 [00:50<00:41, 81.00it/s]Running 10000 simulations.:  66%|██████▌   | 6610/10000 [00:50<00:38, 87.08it/s]Running 10000 simulations.:  66%|██████▌   | 6622/10000 [00:50<00:36, 93.55it/s]Running 10000 simulations.:  66%|██████▋   | 6636/10000 [00:51<00:32, 103.31it/s]Running 10000 simulations.:  66%|██████▋   | 6650/10000 [00:51<00:30, 111.12it/s]Running 10000 simulations.:  67%|██████▋   | 6664/10000 [00:51<00:28, 117.56it/s]Running 10000 simulations.:  67%|██████▋   | 6678/10000 [00:51<00:26, 123.19it/s]Running 10000 simulations.:  67%|██████▋   | 6692/10000 [00:51<00:25, 127.66it/s]Running 10000 simulations.:  67%|██████▋   | 6706/10000 [00:51<00:25, 131.03it/s]Running 10000 simulations.:  67%|██████▋   | 6721/10000 [00:51<00:24, 133.66it/s]Running 10000 simulations.:  67%|██████▋   | 6735/10000 [00:51<00:24, 134.06it/s]Running 10000 simulations.:  67%|██████▋   | 6749/10000 [00:51<00:24, 134.38it/s]Running 10000 simulations.:  68%|██████▊   | 6763/10000 [00:51<00:24, 132.89it/s]Running 10000 simulations.:  68%|██████▊   | 6777/10000 [00:52<00:23, 134.45it/s]Running 10000 simulations.:  68%|██████▊   | 6791/10000 [00:52<00:23, 135.11it/s]Running 10000 simulations.:  68%|██████▊   | 6805/10000 [00:52<00:23, 135.48it/s]Running 10000 simulations.:  68%|██████▊   | 6819/10000 [00:52<00:23, 135.07it/s]Running 10000 simulations.:  68%|██████▊   | 6833/10000 [00:52<00:23, 135.69it/s]Running 10000 simulations.:  68%|██████▊   | 6847/10000 [00:52<00:23, 136.60it/s]Running 10000 simulations.:  69%|██████▊   | 6861/10000 [00:52<00:22, 137.14it/s]Running 10000 simulations.:  69%|██████▉   | 6875/10000 [00:52<00:22, 137.45it/s]Running 10000 simulations.:  69%|██████▉   | 6890/10000 [00:52<00:22, 138.29it/s]Running 10000 simulations.:  69%|██████▉   | 6904/10000 [00:52<00:22, 138.78it/s]Running 10000 simulations.:  69%|██████▉   | 6918/10000 [00:53<00:22, 138.40it/s]Running 10000 simulations.:  69%|██████▉   | 6932/10000 [00:53<00:22, 137.16it/s]Running 10000 simulations.:  69%|██████▉   | 6946/10000 [00:53<00:22, 137.03it/s]Running 10000 simulations.:  70%|██████▉   | 6960/10000 [00:53<00:22, 136.97it/s]Running 10000 simulations.:  70%|██████▉   | 6974/10000 [00:53<00:22, 136.49it/s]Running 10000 simulations.:  70%|██████▉   | 6988/10000 [00:53<00:22, 136.57it/s]Running 10000 simulations.:  70%|███████   | 7002/10000 [00:53<00:21, 137.39it/s]Running 10000 simulations.:  70%|███████   | 7017/10000 [00:53<00:21, 138.55it/s]Running 10000 simulations.:  70%|███████   | 7032/10000 [00:53<00:21, 139.55it/s]Running 10000 simulations.:  70%|███████   | 7046/10000 [00:53<00:21, 138.78it/s]Running 10000 simulations.:  71%|███████   | 7060/10000 [00:54<00:21, 138.50it/s]Running 10000 simulations.:  71%|███████   | 7074/10000 [00:54<00:21, 138.02it/s]Running 10000 simulations.:  71%|███████   | 7088/10000 [00:54<00:21, 137.55it/s]Running 10000 simulations.:  71%|███████   | 7102/10000 [00:54<00:21, 137.54it/s]Running 10000 simulations.:  71%|███████   | 7116/10000 [00:54<00:20, 138.00it/s]Running 10000 simulations.:  71%|███████▏  | 7130/10000 [00:54<00:20, 138.24it/s]Running 10000 simulations.:  71%|███████▏  | 7144/10000 [00:54<00:20, 138.38it/s]Running 10000 simulations.:  72%|███████▏  | 7158/10000 [00:54<00:20, 138.45it/s]Running 10000 simulations.:  72%|███████▏  | 7172/10000 [00:54<00:20, 138.55it/s]Running 10000 simulations.:  72%|███████▏  | 7186/10000 [00:55<00:20, 137.52it/s]Running 10000 simulations.:  72%|███████▏  | 7200/10000 [00:55<00:20, 136.90it/s]Running 10000 simulations.:  72%|███████▏  | 7214/10000 [00:55<00:20, 137.11it/s]Running 10000 simulations.:  72%|███████▏  | 7228/10000 [00:55<00:20, 137.87it/s]Running 10000 simulations.:  72%|███████▏  | 7242/10000 [00:55<00:20, 137.39it/s]Running 10000 simulations.:  73%|███████▎  | 7256/10000 [00:55<00:20, 136.76it/s]Running 10000 simulations.:  73%|███████▎  | 7271/10000 [00:55<00:19, 137.85it/s]Running 10000 simulations.:  73%|███████▎  | 7286/10000 [00:55<00:19, 139.21it/s]Running 10000 simulations.:  73%|███████▎  | 7301/10000 [00:55<00:19, 139.70it/s]Running 10000 simulations.:  73%|███████▎  | 7315/10000 [00:55<00:19, 139.60it/s]Running 10000 simulations.:  73%|███████▎  | 7329/10000 [00:56<00:19, 139.30it/s]Running 10000 simulations.:  73%|███████▎  | 7343/10000 [00:56<00:19, 138.47it/s]Running 10000 simulations.:  74%|███████▎  | 7357/10000 [00:56<00:19, 138.87it/s]Running 10000 simulations.:  74%|███████▎  | 7371/10000 [00:56<00:18, 138.74it/s]Running 10000 simulations.:  74%|███████▍  | 7385/10000 [00:56<00:18, 137.85it/s]Running 10000 simulations.:  74%|███████▍  | 7400/10000 [00:56<00:18, 138.61it/s]Running 10000 simulations.:  74%|███████▍  | 7415/10000 [00:56<00:18, 138.48it/s]Running 10000 simulations.:  74%|███████▍  | 7429/10000 [00:56<00:24, 104.01it/s]Running 10000 simulations.:  74%|███████▍  | 7441/10000 [00:57<00:29, 87.95it/s] Running 10000 simulations.:  75%|███████▍  | 7452/10000 [00:57<00:57, 44.57it/s]Running 10000 simulations.:  75%|███████▍  | 7460/10000 [00:57<00:52, 48.74it/s]Running 10000 simulations.:  75%|███████▍  | 7468/10000 [00:57<00:48, 52.18it/s]Running 10000 simulations.:  75%|███████▍  | 7475/10000 [00:57<00:45, 55.05it/s]Running 10000 simulations.:  75%|███████▍  | 7482/10000 [00:58<00:44, 56.91it/s]Running 10000 simulations.:  75%|███████▍  | 7489/10000 [00:58<00:43, 57.96it/s]Running 10000 simulations.:  75%|███████▍  | 7496/10000 [00:58<00:42, 59.02it/s]Running 10000 simulations.:  75%|███████▌  | 7503/10000 [00:58<00:41, 59.67it/s]Running 10000 simulations.:  75%|███████▌  | 7510/10000 [00:58<00:41, 60.41it/s]Running 10000 simulations.:  75%|███████▌  | 7517/10000 [00:58<00:40, 61.34it/s]Running 10000 simulations.:  75%|███████▌  | 7524/10000 [00:58<00:40, 61.63it/s]Running 10000 simulations.:  75%|███████▌  | 7531/10000 [00:58<00:39, 61.92it/s]Running 10000 simulations.:  75%|███████▌  | 7538/10000 [00:58<00:39, 62.17it/s]Running 10000 simulations.:  75%|███████▌  | 7545/10000 [00:59<00:39, 61.71it/s]Running 10000 simulations.:  76%|███████▌  | 7552/10000 [00:59<00:39, 61.77it/s]Running 10000 simulations.:  76%|███████▌  | 7559/10000 [00:59<00:39, 61.62it/s]Running 10000 simulations.:  76%|███████▌  | 7566/10000 [00:59<00:39, 61.56it/s]Running 10000 simulations.:  76%|███████▌  | 7573/10000 [00:59<00:39, 61.38it/s]Running 10000 simulations.:  76%|███████▌  | 7580/10000 [00:59<00:39, 61.64it/s]Running 10000 simulations.:  76%|███████▌  | 7587/10000 [00:59<00:39, 61.50it/s]Running 10000 simulations.:  76%|███████▌  | 7594/10000 [00:59<00:38, 61.73it/s]Running 10000 simulations.:  76%|███████▌  | 7601/10000 [00:59<00:38, 61.90it/s]Running 10000 simulations.:  76%|███████▌  | 7608/10000 [01:00<00:38, 61.86it/s]Running 10000 simulations.:  76%|███████▌  | 7619/10000 [01:00<00:33, 70.07it/s]Running 10000 simulations.:  76%|███████▋  | 7630/10000 [01:00<00:30, 77.40it/s]Running 10000 simulations.:  76%|███████▋  | 7641/10000 [01:00<00:28, 83.35it/s]Running 10000 simulations.:  77%|███████▋  | 7652/10000 [01:00<00:26, 88.25it/s]Running 10000 simulations.:  77%|███████▋  | 7663/10000 [01:00<00:25, 92.34it/s]Running 10000 simulations.:  77%|███████▋  | 7674/10000 [01:00<00:24, 95.16it/s]Running 10000 simulations.:  77%|███████▋  | 7685/10000 [01:00<00:23, 97.12it/s]Running 10000 simulations.:  77%|███████▋  | 7696/10000 [01:00<00:23, 98.69it/s]Running 10000 simulations.:  77%|███████▋  | 7707/10000 [01:01<00:22, 99.74it/s]Running 10000 simulations.:  77%|███████▋  | 7718/10000 [01:01<00:22, 100.56it/s]Running 10000 simulations.:  77%|███████▋  | 7729/10000 [01:01<00:22, 101.06it/s]Running 10000 simulations.:  77%|███████▋  | 7740/10000 [01:01<00:22, 101.03it/s]Running 10000 simulations.:  78%|███████▊  | 7751/10000 [01:01<00:22, 101.37it/s]Running 10000 simulations.:  78%|███████▊  | 7762/10000 [01:01<00:21, 102.03it/s]Running 10000 simulations.:  78%|███████▊  | 7773/10000 [01:01<00:21, 101.90it/s]Running 10000 simulations.:  78%|███████▊  | 7784/10000 [01:01<00:21, 101.81it/s]Running 10000 simulations.:  78%|███████▊  | 7795/10000 [01:01<00:21, 102.26it/s]Running 10000 simulations.:  78%|███████▊  | 7806/10000 [01:02<00:21, 102.17it/s]Running 10000 simulations.:  78%|███████▊  | 7817/10000 [01:02<00:21, 102.39it/s]Running 10000 simulations.:  78%|███████▊  | 7828/10000 [01:02<00:21, 101.91it/s]Running 10000 simulations.:  78%|███████▊  | 7839/10000 [01:02<00:21, 100.82it/s]Running 10000 simulations.:  79%|███████▊  | 7853/10000 [01:02<00:19, 109.10it/s]Running 10000 simulations.:  79%|███████▊  | 7869/10000 [01:02<00:17, 119.24it/s]Running 10000 simulations.:  79%|███████▉  | 7885/10000 [01:02<00:16, 127.70it/s]Running 10000 simulations.:  79%|███████▉  | 7901/10000 [01:02<00:15, 134.52it/s]Running 10000 simulations.:  79%|███████▉  | 7917/10000 [01:02<00:14, 139.37it/s]Running 10000 simulations.:  79%|███████▉  | 7933/10000 [01:02<00:14, 143.29it/s]Running 10000 simulations.:  79%|███████▉  | 7949/10000 [01:03<00:14, 146.43it/s]Running 10000 simulations.:  80%|███████▉  | 7965/10000 [01:03<00:13, 148.75it/s]Running 10000 simulations.:  80%|███████▉  | 7981/10000 [01:03<00:13, 149.97it/s]Running 10000 simulations.:  80%|███████▉  | 7997/10000 [01:03<00:13, 150.37it/s]Running 10000 simulations.:  80%|████████  | 8013/10000 [01:03<00:13, 150.78it/s]Running 10000 simulations.:  80%|████████  | 8029/10000 [01:03<00:13, 150.19it/s]Running 10000 simulations.:  80%|████████  | 8045/10000 [01:03<00:12, 150.66it/s]Running 10000 simulations.:  81%|████████  | 8061/10000 [01:03<00:12, 151.22it/s]Running 10000 simulations.:  81%|████████  | 8077/10000 [01:03<00:12, 151.78it/s]Running 10000 simulations.:  81%|████████  | 8093/10000 [01:04<00:12, 152.27it/s]Running 10000 simulations.:  81%|████████  | 8109/10000 [01:04<00:12, 152.68it/s]Running 10000 simulations.:  81%|████████▏ | 8125/10000 [01:04<00:12, 152.86it/s]Running 10000 simulations.:  81%|████████▏ | 8141/10000 [01:04<00:12, 152.34it/s]Running 10000 simulations.:  82%|████████▏ | 8157/10000 [01:04<00:12, 152.16it/s]Running 10000 simulations.:  82%|████████▏ | 8173/10000 [01:04<00:11, 152.36it/s]Running 10000 simulations.:  82%|████████▏ | 8189/10000 [01:04<00:11, 152.41it/s]Running 10000 simulations.:  82%|████████▏ | 8205/10000 [01:04<00:11, 152.37it/s]Running 10000 simulations.:  82%|████████▏ | 8221/10000 [01:04<00:11, 152.43it/s]Running 10000 simulations.:  82%|████████▏ | 8237/10000 [01:04<00:11, 152.35it/s]Running 10000 simulations.:  83%|████████▎ | 8253/10000 [01:05<00:11, 146.36it/s]Running 10000 simulations.:  83%|████████▎ | 8269/10000 [01:05<00:11, 148.22it/s]Running 10000 simulations.:  83%|████████▎ | 8285/10000 [01:05<00:11, 149.57it/s]Running 10000 simulations.:  83%|████████▎ | 8301/10000 [01:05<00:11, 150.27it/s]Running 10000 simulations.:  83%|████████▎ | 8317/10000 [01:05<00:11, 150.67it/s]Running 10000 simulations.:  83%|████████▎ | 8333/10000 [01:05<00:11, 150.98it/s]Running 10000 simulations.:  83%|████████▎ | 8349/10000 [01:05<00:10, 151.86it/s]Running 10000 simulations.:  84%|████████▎ | 8365/10000 [01:05<00:10, 152.67it/s]Running 10000 simulations.:  84%|████████▍ | 8381/10000 [01:05<00:10, 152.69it/s]Running 10000 simulations.:  84%|████████▍ | 8397/10000 [01:06<00:10, 152.47it/s]Running 10000 simulations.:  84%|████████▍ | 8413/10000 [01:06<00:10, 152.15it/s]Running 10000 simulations.:  84%|████████▍ | 8429/10000 [01:06<00:10, 151.92it/s]Running 10000 simulations.:  84%|████████▍ | 8445/10000 [01:06<00:10, 151.87it/s]Running 10000 simulations.:  85%|████████▍ | 8461/10000 [01:06<00:10, 151.94it/s]Running 10000 simulations.:  85%|████████▍ | 8477/10000 [01:06<00:10, 151.88it/s]Running 10000 simulations.:  85%|████████▍ | 8493/10000 [01:06<00:09, 152.21it/s]Running 10000 simulations.:  85%|████████▌ | 8509/10000 [01:06<00:09, 152.68it/s]Running 10000 simulations.:  85%|████████▌ | 8525/10000 [01:06<00:09, 152.72it/s]Running 10000 simulations.:  85%|████████▌ | 8541/10000 [01:07<00:09, 152.66it/s]Running 10000 simulations.:  86%|████████▌ | 8557/10000 [01:07<00:09, 152.31it/s]Running 10000 simulations.:  86%|████████▌ | 8573/10000 [01:07<00:09, 152.10it/s]Running 10000 simulations.:  86%|████████▌ | 8589/10000 [01:07<00:09, 152.44it/s]Running 10000 simulations.:  86%|████████▌ | 8605/10000 [01:07<00:09, 152.45it/s]Running 10000 simulations.:  86%|████████▌ | 8621/10000 [01:07<00:09, 152.23it/s]Running 10000 simulations.:  86%|████████▋ | 8637/10000 [01:07<00:08, 152.55it/s]Running 10000 simulations.:  87%|████████▋ | 8653/10000 [01:07<00:08, 152.97it/s]Running 10000 simulations.:  87%|████████▋ | 8669/10000 [01:07<00:08, 153.64it/s]Running 10000 simulations.:  87%|████████▋ | 8685/10000 [01:07<00:08, 153.39it/s]Running 10000 simulations.:  87%|████████▋ | 8701/10000 [01:08<00:08, 152.75it/s]Running 10000 simulations.:  87%|████████▋ | 8717/10000 [01:08<00:08, 152.29it/s]Running 10000 simulations.:  87%|████████▋ | 8733/10000 [01:08<00:08, 151.33it/s]Running 10000 simulations.:  87%|████████▋ | 8749/10000 [01:08<00:08, 151.16it/s]Running 10000 simulations.:  88%|████████▊ | 8765/10000 [01:08<00:08, 151.49it/s]Running 10000 simulations.:  88%|████████▊ | 8781/10000 [01:08<00:08, 151.73it/s]Running 10000 simulations.:  88%|████████▊ | 8797/10000 [01:08<00:07, 151.64it/s]Running 10000 simulations.:  88%|████████▊ | 8813/10000 [01:08<00:07, 151.97it/s]Running 10000 simulations.:  88%|████████▊ | 8829/10000 [01:08<00:07, 152.42it/s]Running 10000 simulations.:  88%|████████▊ | 8845/10000 [01:08<00:07, 152.44it/s]Running 10000 simulations.:  89%|████████▊ | 8861/10000 [01:09<00:07, 152.84it/s]Running 10000 simulations.:  89%|████████▉ | 8877/10000 [01:09<00:07, 153.17it/s]Running 10000 simulations.:  89%|████████▉ | 8893/10000 [01:09<00:07, 153.12it/s]Running 10000 simulations.:  89%|████████▉ | 8909/10000 [01:09<00:07, 152.74it/s]Running 10000 simulations.:  89%|████████▉ | 8925/10000 [01:09<00:07, 151.93it/s]Running 10000 simulations.:  89%|████████▉ | 8941/10000 [01:09<00:06, 151.84it/s]Running 10000 simulations.:  90%|████████▉ | 8957/10000 [01:09<00:06, 152.08it/s]Running 10000 simulations.:  90%|████████▉ | 8973/10000 [01:09<00:06, 152.33it/s]Running 10000 simulations.:  90%|████████▉ | 8989/10000 [01:09<00:06, 152.02it/s]Running 10000 simulations.:  90%|█████████ | 9005/10000 [01:10<00:06, 152.07it/s]Running 10000 simulations.:  90%|█████████ | 9021/10000 [01:10<00:06, 152.33it/s]Running 10000 simulations.:  90%|█████████ | 9037/10000 [01:10<00:06, 152.64it/s]Running 10000 simulations.:  91%|█████████ | 9053/10000 [01:10<00:06, 152.82it/s]Running 10000 simulations.:  91%|█████████ | 9069/10000 [01:10<00:06, 151.88it/s]Running 10000 simulations.:  91%|█████████ | 9085/10000 [01:10<00:06, 151.16it/s]Running 10000 simulations.:  91%|█████████ | 9101/10000 [01:10<00:05, 151.20it/s]Running 10000 simulations.:  91%|█████████ | 9117/10000 [01:10<00:05, 151.23it/s]Running 10000 simulations.:  91%|█████████▏| 9133/10000 [01:10<00:05, 151.24it/s]Running 10000 simulations.:  91%|█████████▏| 9149/10000 [01:10<00:05, 151.56it/s]Running 10000 simulations.:  92%|█████████▏| 9165/10000 [01:11<00:05, 151.84it/s]Running 10000 simulations.:  92%|█████████▏| 9181/10000 [01:11<00:05, 152.48it/s]Running 10000 simulations.:  92%|█████████▏| 9197/10000 [01:11<00:05, 152.93it/s]Running 10000 simulations.:  92%|█████████▏| 9213/10000 [01:11<00:05, 153.27it/s]Running 10000 simulations.:  92%|█████████▏| 9229/10000 [01:11<00:05, 152.82it/s]Running 10000 simulations.:  92%|█████████▏| 9245/10000 [01:11<00:04, 152.51it/s]Running 10000 simulations.:  93%|█████████▎| 9261/10000 [01:11<00:04, 151.99it/s]Running 10000 simulations.:  93%|█████████▎| 9277/10000 [01:11<00:04, 151.93it/s]Running 10000 simulations.:  93%|█████████▎| 9293/10000 [01:11<00:04, 151.95it/s]Running 10000 simulations.:  93%|█████████▎| 9309/10000 [01:12<00:04, 151.91it/s]Running 10000 simulations.:  93%|█████████▎| 9325/10000 [01:12<00:04, 152.10it/s]Running 10000 simulations.:  93%|█████████▎| 9341/10000 [01:12<00:04, 152.30it/s]Running 10000 simulations.:  94%|█████████▎| 9357/10000 [01:12<00:04, 152.30it/s]Running 10000 simulations.:  94%|█████████▎| 9373/10000 [01:12<00:04, 152.30it/s]Running 10000 simulations.:  94%|█████████▍| 9389/10000 [01:12<00:04, 151.95it/s]Running 10000 simulations.:  94%|█████████▍| 9405/10000 [01:12<00:03, 151.83it/s]Running 10000 simulations.:  94%|█████████▍| 9421/10000 [01:12<00:03, 151.86it/s]Running 10000 simulations.:  94%|█████████▍| 9437/10000 [01:12<00:03, 151.67it/s]Running 10000 simulations.:  95%|█████████▍| 9453/10000 [01:12<00:03, 151.73it/s]Running 10000 simulations.:  95%|█████████▍| 9469/10000 [01:13<00:03, 152.04it/s]Running 10000 simulations.:  95%|█████████▍| 9485/10000 [01:13<00:03, 152.13it/s]Running 10000 simulations.:  95%|█████████▌| 9501/10000 [01:13<00:03, 152.58it/s]Running 10000 simulations.:  95%|█████████▌| 9517/10000 [01:13<00:03, 152.43it/s]Running 10000 simulations.:  95%|█████████▌| 9533/10000 [01:13<00:03, 152.44it/s]Running 10000 simulations.:  95%|█████████▌| 9549/10000 [01:13<00:02, 152.84it/s]Running 10000 simulations.:  96%|█████████▌| 9565/10000 [01:13<00:02, 152.89it/s]Running 10000 simulations.:  96%|█████████▌| 9581/10000 [01:13<00:02, 152.64it/s]Running 10000 simulations.:  96%|█████████▌| 9597/10000 [01:13<00:02, 151.90it/s]Running 10000 simulations.:  96%|█████████▌| 9613/10000 [01:14<00:02, 151.79it/s]Running 10000 simulations.:  96%|█████████▋| 9629/10000 [01:14<00:02, 152.01it/s]Running 10000 simulations.:  96%|█████████▋| 9645/10000 [01:14<00:02, 152.16it/s]Running 10000 simulations.:  97%|█████████▋| 9661/10000 [01:14<00:02, 152.33it/s]Running 10000 simulations.:  97%|█████████▋| 9677/10000 [01:14<00:02, 152.09it/s]Running 10000 simulations.:  97%|█████████▋| 9693/10000 [01:14<00:02, 152.34it/s]Running 10000 simulations.:  97%|█████████▋| 9709/10000 [01:14<00:01, 152.78it/s]Running 10000 simulations.:  97%|█████████▋| 9725/10000 [01:14<00:01, 152.50it/s]Running 10000 simulations.:  97%|█████████▋| 9741/10000 [01:14<00:01, 151.78it/s]Running 10000 simulations.:  98%|█████████▊| 9757/10000 [01:14<00:01, 151.64it/s]Running 10000 simulations.:  98%|█████████▊| 9773/10000 [01:15<00:01, 151.85it/s]Running 10000 simulations.:  98%|█████████▊| 9789/10000 [01:15<00:01, 152.43it/s]Running 10000 simulations.:  98%|█████████▊| 9805/10000 [01:15<00:01, 152.58it/s]Running 10000 simulations.:  98%|█████████▊| 9821/10000 [01:15<00:01, 152.40it/s]Running 10000 simulations.:  98%|█████████▊| 9837/10000 [01:15<00:01, 152.33it/s]Running 10000 simulations.:  99%|█████████▊| 9853/10000 [01:15<00:00, 152.61it/s]Running 10000 simulations.:  99%|█████████▊| 9869/10000 [01:15<00:00, 152.55it/s]Running 10000 simulations.:  99%|█████████▉| 9885/10000 [01:15<00:00, 152.16it/s]Running 10000 simulations.:  99%|█████████▉| 9901/10000 [01:15<00:00, 152.02it/s]Running 10000 simulations.:  99%|█████████▉| 9917/10000 [01:16<00:00, 152.11it/s]Running 10000 simulations.:  99%|█████████▉| 9933/10000 [01:16<00:00, 151.65it/s]Running 10000 simulations.:  99%|█████████▉| 9949/10000 [01:16<00:00, 151.56it/s]Running 10000 simulations.: 100%|█████████▉| 9965/10000 [01:16<00:00, 151.99it/s]Running 10000 simulations.: 100%|█████████▉| 9981/10000 [01:16<00:00, 152.29it/s]Running 10000 simulations.: 100%|█████████▉| 9997/10000 [01:16<00:00, 152.36it/s]Running 10000 simulations.: 100%|██████████| 10000/10000 [01:16<00:00, 130.57it/s]
Running 10000 simulations.:   0%|          | 0/10000 [00:00<?, ?it/s]Running 10000 simulations.:   0%|          | 8/10000 [00:00<02:16, 73.00it/s]Running 10000 simulations.:   0%|          | 16/10000 [00:00<02:17, 72.83it/s]Running 10000 simulations.:   0%|          | 24/10000 [00:00<02:18, 72.23it/s]Running 10000 simulations.:   0%|          | 32/10000 [00:00<02:17, 72.26it/s]Running 10000 simulations.:   0%|          | 40/10000 [00:00<02:18, 72.14it/s]Running 10000 simulations.:   0%|          | 48/10000 [00:00<02:17, 72.35it/s]Running 10000 simulations.:   1%|          | 56/10000 [00:00<02:19, 71.53it/s]Running 10000 simulations.:   1%|          | 63/10000 [00:00<02:20, 70.80it/s]Running 10000 simulations.:   1%|          | 71/10000 [00:00<02:16, 72.83it/s]Running 10000 simulations.:   1%|          | 88/10000 [00:01<01:53, 87.58it/s]Running 10000 simulations.:   1%|          | 105/10000 [00:01<01:37, 101.97it/s]Running 10000 simulations.:   1%|          | 122/10000 [00:01<01:25, 115.34it/s]Running 10000 simulations.:   1%|▏         | 139/10000 [00:01<01:17, 126.75it/s]Running 10000 simulations.:   2%|▏         | 156/10000 [00:01<01:12, 135.81it/s]Running 10000 simulations.:   2%|▏         | 173/10000 [00:01<01:08, 142.87it/s]Running 10000 simulations.:   2%|▏         | 190/10000 [00:01<01:06, 148.25it/s]Running 10000 simulations.:   2%|▏         | 207/10000 [00:01<01:04, 152.04it/s]Running 10000 simulations.:   2%|▏         | 224/10000 [00:01<01:03, 155.17it/s]Running 10000 simulations.:   2%|▏         | 241/10000 [00:02<01:01, 157.47it/s]Running 10000 simulations.:   3%|▎         | 258/10000 [00:02<01:01, 159.27it/s]Running 10000 simulations.:   3%|▎         | 275/10000 [00:02<01:00, 160.05it/s]Running 10000 simulations.:   3%|▎         | 292/10000 [00:02<01:00, 160.43it/s]Running 10000 simulations.:   3%|▎         | 309/10000 [00:02<01:00, 161.02it/s]Running 10000 simulations.:   3%|▎         | 326/10000 [00:02<00:59, 161.80it/s]Running 10000 simulations.:   3%|▎         | 343/10000 [00:02<00:59, 162.27it/s]Running 10000 simulations.:   4%|▎         | 360/10000 [00:02<00:59, 162.74it/s]Running 10000 simulations.:   4%|▍         | 377/10000 [00:02<00:59, 162.62it/s]Running 10000 simulations.:   4%|▍         | 394/10000 [00:02<00:59, 162.10it/s]Running 10000 simulations.:   4%|▍         | 411/10000 [00:03<00:59, 161.66it/s]Running 10000 simulations.:   4%|▍         | 428/10000 [00:03<00:59, 162.13it/s]Running 10000 simulations.:   4%|▍         | 445/10000 [00:03<00:58, 162.52it/s]Running 10000 simulations.:   5%|▍         | 462/10000 [00:03<00:58, 162.64it/s]Running 10000 simulations.:   5%|▍         | 479/10000 [00:03<00:58, 162.69it/s]Running 10000 simulations.:   5%|▍         | 496/10000 [00:03<00:58, 162.23it/s]Running 10000 simulations.:   5%|▌         | 513/10000 [00:03<00:58, 161.47it/s]Running 10000 simulations.:   5%|▌         | 530/10000 [00:03<00:58, 161.34it/s]Running 10000 simulations.:   5%|▌         | 547/10000 [00:03<00:58, 161.05it/s]Running 10000 simulations.:   6%|▌         | 564/10000 [00:04<00:58, 160.69it/s]Running 10000 simulations.:   6%|▌         | 581/10000 [00:04<00:58, 160.47it/s]Running 10000 simulations.:   6%|▌         | 598/10000 [00:04<00:58, 160.74it/s]Running 10000 simulations.:   6%|▌         | 615/10000 [00:04<00:58, 160.54it/s]Running 10000 simulations.:   6%|▋         | 632/10000 [00:04<00:58, 160.22it/s]Running 10000 simulations.:   6%|▋         | 649/10000 [00:04<00:58, 160.68it/s]Running 10000 simulations.:   7%|▋         | 666/10000 [00:04<00:58, 160.42it/s]Running 10000 simulations.:   7%|▋         | 683/10000 [00:04<00:58, 160.21it/s]Running 10000 simulations.:   7%|▋         | 700/10000 [00:04<00:58, 160.22it/s]Running 10000 simulations.:   7%|▋         | 717/10000 [00:04<00:57, 160.09it/s]Running 10000 simulations.:   7%|▋         | 734/10000 [00:05<00:57, 159.92it/s]Running 10000 simulations.:   8%|▊         | 751/10000 [00:05<00:57, 160.02it/s]Running 10000 simulations.:   8%|▊         | 768/10000 [00:05<00:57, 159.85it/s]Running 10000 simulations.:   8%|▊         | 784/10000 [00:05<00:57, 159.71it/s]Running 10000 simulations.:   8%|▊         | 800/10000 [00:05<00:57, 159.75it/s]Running 10000 simulations.:   8%|▊         | 816/10000 [00:05<00:57, 159.82it/s]Running 10000 simulations.:   8%|▊         | 833/10000 [00:05<00:57, 160.02it/s]Running 10000 simulations.:   8%|▊         | 850/10000 [00:05<00:57, 159.91it/s]Running 10000 simulations.:   9%|▊         | 867/10000 [00:05<00:56, 160.33it/s]Running 10000 simulations.:   9%|▉         | 884/10000 [00:06<00:56, 160.39it/s]Running 10000 simulations.:   9%|▉         | 901/10000 [00:06<00:56, 160.52it/s]Running 10000 simulations.:   9%|▉         | 918/10000 [00:06<00:56, 160.44it/s]Running 10000 simulations.:   9%|▉         | 935/10000 [00:06<00:56, 160.05it/s]Running 10000 simulations.:  10%|▉         | 952/10000 [00:06<00:56, 159.88it/s]Running 10000 simulations.:  10%|▉         | 968/10000 [00:06<00:56, 159.76it/s]Running 10000 simulations.:  10%|▉         | 984/10000 [00:06<00:56, 159.49it/s]Running 10000 simulations.:  10%|█         | 1000/10000 [00:06<00:56, 159.29it/s]Running 10000 simulations.:  10%|█         | 1016/10000 [00:06<00:56, 159.42it/s]Running 10000 simulations.:  10%|█         | 1032/10000 [00:06<00:56, 159.54it/s]Running 10000 simulations.:  10%|█         | 1048/10000 [00:07<00:56, 159.39it/s]Running 10000 simulations.:  11%|█         | 1064/10000 [00:07<00:56, 157.16it/s]Running 10000 simulations.:  11%|█         | 1080/10000 [00:07<00:57, 153.98it/s]Running 10000 simulations.:  11%|█         | 1096/10000 [00:07<00:58, 152.20it/s]Running 10000 simulations.:  11%|█         | 1112/10000 [00:07<00:58, 150.99it/s]Running 10000 simulations.:  11%|█▏        | 1128/10000 [00:07<00:58, 150.65it/s]Running 10000 simulations.:  11%|█▏        | 1144/10000 [00:07<00:59, 149.77it/s]Running 10000 simulations.:  12%|█▏        | 1159/10000 [00:07<00:59, 149.10it/s]Running 10000 simulations.:  12%|█▏        | 1174/10000 [00:07<00:59, 148.76it/s]Running 10000 simulations.:  12%|█▏        | 1189/10000 [00:07<00:59, 148.42it/s]Running 10000 simulations.:  12%|█▏        | 1204/10000 [00:08<00:59, 147.65it/s]Running 10000 simulations.:  12%|█▏        | 1219/10000 [00:08<00:59, 147.59it/s]Running 10000 simulations.:  12%|█▏        | 1234/10000 [00:08<00:59, 147.33it/s]Running 10000 simulations.:  12%|█▏        | 1249/10000 [00:08<00:59, 147.45it/s]Running 10000 simulations.:  13%|█▎        | 1264/10000 [00:08<00:59, 147.69it/s]Running 10000 simulations.:  13%|█▎        | 1279/10000 [00:08<00:59, 147.72it/s]Running 10000 simulations.:  13%|█▎        | 1294/10000 [00:08<00:58, 148.32it/s]Running 10000 simulations.:  13%|█▎        | 1309/10000 [00:08<00:58, 148.06it/s]Running 10000 simulations.:  13%|█▎        | 1325/10000 [00:08<00:58, 148.75it/s]Running 10000 simulations.:  13%|█▎        | 1340/10000 [00:09<00:58, 148.86it/s]Running 10000 simulations.:  14%|█▎        | 1355/10000 [00:09<00:58, 148.48it/s]Running 10000 simulations.:  14%|█▎        | 1370/10000 [00:09<00:58, 148.35it/s]Running 10000 simulations.:  14%|█▍        | 1385/10000 [00:09<00:58, 147.89it/s]Running 10000 simulations.:  14%|█▍        | 1400/10000 [00:09<00:58, 147.49it/s]Running 10000 simulations.:  14%|█▍        | 1415/10000 [00:09<00:58, 147.48it/s]Running 10000 simulations.:  14%|█▍        | 1430/10000 [00:09<00:58, 147.47it/s]Running 10000 simulations.:  14%|█▍        | 1445/10000 [00:09<00:58, 147.30it/s]Running 10000 simulations.:  15%|█▍        | 1460/10000 [00:09<00:57, 147.90it/s]Running 10000 simulations.:  15%|█▍        | 1478/10000 [00:09<00:54, 155.45it/s]Running 10000 simulations.:  15%|█▍        | 1495/10000 [00:10<00:53, 159.30it/s]Running 10000 simulations.:  15%|█▌        | 1512/10000 [00:10<00:52, 161.78it/s]Running 10000 simulations.:  15%|█▌        | 1529/10000 [00:10<00:52, 160.52it/s]Running 10000 simulations.:  15%|█▌        | 1546/10000 [00:10<01:00, 138.96it/s]Running 10000 simulations.:  16%|█▌        | 1561/10000 [00:10<01:06, 127.58it/s]Running 10000 simulations.:  16%|█▌        | 1575/10000 [00:10<01:10, 120.24it/s]Running 10000 simulations.:  16%|█▌        | 1588/10000 [00:10<01:12, 115.71it/s]Running 10000 simulations.:  16%|█▌        | 1600/10000 [00:10<01:14, 113.13it/s]Running 10000 simulations.:  16%|█▌        | 1612/10000 [00:11<01:15, 110.65it/s]Running 10000 simulations.:  16%|█▌        | 1624/10000 [00:11<01:18, 106.58it/s]Running 10000 simulations.:  16%|█▋        | 1635/10000 [00:11<01:21, 102.84it/s]Running 10000 simulations.:  16%|█▋        | 1646/10000 [00:11<01:24, 99.39it/s] Running 10000 simulations.:  17%|█▋        | 1657/10000 [00:11<01:26, 96.97it/s]Running 10000 simulations.:  17%|█▋        | 1667/10000 [00:11<01:32, 90.25it/s]Running 10000 simulations.:  17%|█▋        | 1677/10000 [00:11<01:37, 85.50it/s]Running 10000 simulations.:  17%|█▋        | 1686/10000 [00:11<01:40, 82.35it/s]Running 10000 simulations.:  17%|█▋        | 1695/10000 [00:11<01:43, 80.08it/s]Running 10000 simulations.:  17%|█▋        | 1704/10000 [00:12<01:44, 79.18it/s]Running 10000 simulations.:  17%|█▋        | 1713/10000 [00:12<01:45, 78.20it/s]Running 10000 simulations.:  17%|█▋        | 1721/10000 [00:12<01:46, 77.67it/s]Running 10000 simulations.:  17%|█▋        | 1729/10000 [00:12<01:47, 77.25it/s]Running 10000 simulations.:  17%|█▋        | 1742/10000 [00:12<01:34, 87.46it/s]Running 10000 simulations.:  18%|█▊        | 1759/10000 [00:12<01:21, 101.70it/s]Running 10000 simulations.:  18%|█▊        | 1776/10000 [00:12<01:11, 114.38it/s]Running 10000 simulations.:  18%|█▊        | 1791/10000 [00:12<01:06, 122.97it/s]Running 10000 simulations.:  18%|█▊        | 1806/10000 [00:12<01:04, 127.94it/s]Running 10000 simulations.:  18%|█▊        | 1821/10000 [00:13<01:02, 131.57it/s]Running 10000 simulations.:  18%|█▊        | 1836/10000 [00:13<01:00, 134.48it/s]Running 10000 simulations.:  19%|█▊        | 1851/10000 [00:13<00:59, 136.33it/s]Running 10000 simulations.:  19%|█▊        | 1866/10000 [00:13<00:58, 137.91it/s]Running 10000 simulations.:  19%|█▉        | 1881/10000 [00:13<00:58, 138.94it/s]Running 10000 simulations.:  19%|█▉        | 1896/10000 [00:13<00:57, 139.76it/s]Running 10000 simulations.:  19%|█▉        | 1911/10000 [00:13<00:57, 140.41it/s]Running 10000 simulations.:  19%|█▉        | 1926/10000 [00:13<00:59, 135.40it/s]Running 10000 simulations.:  19%|█▉        | 1941/10000 [00:13<00:58, 137.05it/s]Running 10000 simulations.:  20%|█▉        | 1956/10000 [00:14<00:58, 138.47it/s]Running 10000 simulations.:  20%|█▉        | 1971/10000 [00:14<00:57, 139.26it/s]Running 10000 simulations.:  20%|█▉        | 1986/10000 [00:14<00:57, 139.62it/s]Running 10000 simulations.:  20%|██        | 2001/10000 [00:14<00:57, 139.94it/s]Running 10000 simulations.:  20%|██        | 2016/10000 [00:14<00:56, 140.09it/s]Running 10000 simulations.:  20%|██        | 2031/10000 [00:14<00:56, 140.65it/s]Running 10000 simulations.:  20%|██        | 2046/10000 [00:14<00:56, 140.67it/s]Running 10000 simulations.:  21%|██        | 2061/10000 [00:14<00:56, 140.88it/s]Running 10000 simulations.:  21%|██        | 2076/10000 [00:14<00:56, 140.83it/s]Running 10000 simulations.:  21%|██        | 2091/10000 [00:14<00:56, 140.82it/s]Running 10000 simulations.:  21%|██        | 2106/10000 [00:15<00:56, 140.64it/s]Running 10000 simulations.:  21%|██        | 2121/10000 [00:15<00:55, 140.93it/s]Running 10000 simulations.:  21%|██▏       | 2136/10000 [00:15<00:55, 141.04it/s]Running 10000 simulations.:  22%|██▏       | 2151/10000 [00:15<00:55, 141.04it/s]Running 10000 simulations.:  22%|██▏       | 2166/10000 [00:15<00:55, 141.28it/s]Running 10000 simulations.:  22%|██▏       | 2181/10000 [00:15<00:55, 141.60it/s]Running 10000 simulations.:  22%|██▏       | 2196/10000 [00:15<00:55, 141.76it/s]Running 10000 simulations.:  22%|██▏       | 2211/10000 [00:15<00:54, 141.74it/s]Running 10000 simulations.:  22%|██▏       | 2226/10000 [00:15<00:54, 141.40it/s]Running 10000 simulations.:  22%|██▏       | 2241/10000 [00:16<00:54, 141.36it/s]Running 10000 simulations.:  23%|██▎       | 2256/10000 [00:16<00:54, 141.41it/s]Running 10000 simulations.:  23%|██▎       | 2271/10000 [00:16<00:54, 141.12it/s]Running 10000 simulations.:  23%|██▎       | 2286/10000 [00:16<00:54, 141.32it/s]Running 10000 simulations.:  23%|██▎       | 2301/10000 [00:16<00:54, 141.56it/s]Running 10000 simulations.:  23%|██▎       | 2316/10000 [00:16<00:54, 141.71it/s]Running 10000 simulations.:  23%|██▎       | 2331/10000 [00:16<00:54, 141.55it/s]Running 10000 simulations.:  23%|██▎       | 2346/10000 [00:16<00:54, 141.43it/s]Running 10000 simulations.:  24%|██▎       | 2361/10000 [00:16<00:54, 141.41it/s]Running 10000 simulations.:  24%|██▍       | 2376/10000 [00:17<00:53, 141.35it/s]Running 10000 simulations.:  24%|██▍       | 2391/10000 [00:17<00:53, 142.08it/s]Running 10000 simulations.:  24%|██▍       | 2406/10000 [00:17<00:53, 142.33it/s]Running 10000 simulations.:  24%|██▍       | 2421/10000 [00:17<00:53, 142.90it/s]Running 10000 simulations.:  24%|██▍       | 2436/10000 [00:17<00:52, 142.80it/s]Running 10000 simulations.:  25%|██▍       | 2451/10000 [00:17<00:53, 142.37it/s]Running 10000 simulations.:  25%|██▍       | 2466/10000 [00:17<00:53, 142.04it/s]Running 10000 simulations.:  25%|██▍       | 2481/10000 [00:17<00:52, 141.88it/s]Running 10000 simulations.:  25%|██▍       | 2496/10000 [00:17<00:52, 141.60it/s]Running 10000 simulations.:  25%|██▌       | 2511/10000 [00:17<00:52, 142.12it/s]Running 10000 simulations.:  25%|██▌       | 2526/10000 [00:18<00:52, 142.34it/s]Running 10000 simulations.:  25%|██▌       | 2541/10000 [00:18<00:52, 142.77it/s]Running 10000 simulations.:  26%|██▌       | 2556/10000 [00:18<00:52, 143.01it/s]Running 10000 simulations.:  26%|██▌       | 2571/10000 [00:18<00:52, 142.53it/s]Running 10000 simulations.:  26%|██▌       | 2586/10000 [00:18<00:52, 142.22it/s]Running 10000 simulations.:  26%|██▌       | 2601/10000 [00:18<00:52, 141.92it/s]Running 10000 simulations.:  26%|██▌       | 2616/10000 [00:18<00:51, 142.01it/s]Running 10000 simulations.:  26%|██▋       | 2631/10000 [00:18<00:51, 142.00it/s]Running 10000 simulations.:  26%|██▋       | 2646/10000 [00:18<00:51, 141.73it/s]Running 10000 simulations.:  27%|██▋       | 2661/10000 [00:19<00:51, 141.56it/s]Running 10000 simulations.:  27%|██▋       | 2676/10000 [00:19<00:53, 136.76it/s]Running 10000 simulations.:  27%|██▋       | 2690/10000 [00:19<00:55, 131.13it/s]Running 10000 simulations.:  27%|██▋       | 2704/10000 [00:19<00:57, 127.24it/s]Running 10000 simulations.:  27%|██▋       | 2717/10000 [00:19<00:58, 124.95it/s]Running 10000 simulations.:  27%|██▋       | 2730/10000 [00:19<00:58, 123.30it/s]Running 10000 simulations.:  27%|██▋       | 2743/10000 [00:19<00:59, 122.69it/s]Running 10000 simulations.:  28%|██▊       | 2756/10000 [00:19<00:59, 121.83it/s]Running 10000 simulations.:  28%|██▊       | 2769/10000 [00:19<00:59, 121.27it/s]Running 10000 simulations.:  28%|██▊       | 2782/10000 [00:20<00:59, 120.97it/s]Running 10000 simulations.:  28%|██▊       | 2795/10000 [00:20<00:59, 121.03it/s]Running 10000 simulations.:  28%|██▊       | 2808/10000 [00:20<00:59, 120.71it/s]Running 10000 simulations.:  28%|██▊       | 2821/10000 [00:20<00:59, 120.80it/s]Running 10000 simulations.:  28%|██▊       | 2834/10000 [00:20<00:59, 120.66it/s]Running 10000 simulations.:  28%|██▊       | 2847/10000 [00:20<00:59, 120.86it/s]Running 10000 simulations.:  29%|██▊       | 2860/10000 [00:20<00:59, 120.94it/s]Running 10000 simulations.:  29%|██▊       | 2873/10000 [00:20<00:58, 122.05it/s]Running 10000 simulations.:  29%|██▉       | 2886/10000 [00:20<00:58, 121.39it/s]Running 10000 simulations.:  29%|██▉       | 2899/10000 [00:20<00:59, 119.79it/s]Running 10000 simulations.:  29%|██▉       | 2912/10000 [00:21<00:59, 119.45it/s]Running 10000 simulations.:  29%|██▉       | 2924/10000 [00:21<00:59, 118.55it/s]Running 10000 simulations.:  29%|██▉       | 2937/10000 [00:21<00:59, 119.60it/s]Running 10000 simulations.:  30%|██▉       | 2950/10000 [00:21<00:58, 120.53it/s]Running 10000 simulations.:  30%|██▉       | 2963/10000 [00:21<00:58, 120.99it/s]Running 10000 simulations.:  30%|██▉       | 2976/10000 [00:21<00:57, 121.58it/s]Running 10000 simulations.:  30%|██▉       | 2989/10000 [00:21<00:57, 122.66it/s]Running 10000 simulations.:  30%|███       | 3002/10000 [00:21<00:56, 122.80it/s]Running 10000 simulations.:  30%|███       | 3015/10000 [00:21<00:56, 122.82it/s]Running 10000 simulations.:  30%|███       | 3028/10000 [00:22<00:56, 123.31it/s]Running 10000 simulations.:  30%|███       | 3041/10000 [00:22<00:56, 123.14it/s]Running 10000 simulations.:  31%|███       | 3054/10000 [00:22<00:56, 122.95it/s]Running 10000 simulations.:  31%|███       | 3067/10000 [00:22<00:56, 122.13it/s]Running 10000 simulations.:  31%|███       | 3080/10000 [00:22<00:56, 122.48it/s]Running 10000 simulations.:  31%|███       | 3093/10000 [00:22<00:56, 122.98it/s]Running 10000 simulations.:  31%|███       | 3106/10000 [00:22<00:55, 123.16it/s]Running 10000 simulations.:  31%|███       | 3119/10000 [00:22<00:55, 123.08it/s]Running 10000 simulations.:  31%|███▏      | 3132/10000 [00:22<00:55, 122.75it/s]Running 10000 simulations.:  31%|███▏      | 3145/10000 [00:22<00:55, 122.72it/s]Running 10000 simulations.:  32%|███▏      | 3158/10000 [00:23<00:55, 122.29it/s]Running 10000 simulations.:  32%|███▏      | 3171/10000 [00:23<00:56, 121.81it/s]Running 10000 simulations.:  32%|███▏      | 3184/10000 [00:23<00:55, 122.02it/s]Running 10000 simulations.:  32%|███▏      | 3197/10000 [00:23<00:55, 122.13it/s]Running 10000 simulations.:  32%|███▏      | 3210/10000 [00:23<00:55, 122.38it/s]Running 10000 simulations.:  32%|███▏      | 3223/10000 [00:23<00:55, 121.70it/s]Running 10000 simulations.:  32%|███▏      | 3236/10000 [00:23<00:55, 121.25it/s]Running 10000 simulations.:  32%|███▏      | 3249/10000 [00:23<00:55, 121.31it/s]Running 10000 simulations.:  33%|███▎      | 3262/10000 [00:23<00:55, 121.61it/s]Running 10000 simulations.:  33%|███▎      | 3275/10000 [00:24<00:55, 121.99it/s]Running 10000 simulations.:  33%|███▎      | 3288/10000 [00:24<00:54, 122.56it/s]Running 10000 simulations.:  33%|███▎      | 3301/10000 [00:24<00:54, 123.01it/s]Running 10000 simulations.:  33%|███▎      | 3314/10000 [00:24<00:54, 123.17it/s]Running 10000 simulations.:  33%|███▎      | 3327/10000 [00:24<00:54, 122.65it/s]Running 10000 simulations.:  33%|███▎      | 3340/10000 [00:24<00:54, 122.33it/s]Running 10000 simulations.:  34%|███▎      | 3353/10000 [00:24<00:54, 122.26it/s]Running 10000 simulations.:  34%|███▎      | 3366/10000 [00:24<00:54, 122.20it/s]Running 10000 simulations.:  34%|███▍      | 3379/10000 [00:24<00:54, 122.27it/s]Running 10000 simulations.:  34%|███▍      | 3392/10000 [00:25<00:54, 122.32it/s]Running 10000 simulations.:  34%|███▍      | 3405/10000 [00:25<00:53, 122.69it/s]Running 10000 simulations.:  34%|███▍      | 3418/10000 [00:25<00:53, 122.78it/s]Running 10000 simulations.:  34%|███▍      | 3431/10000 [00:25<00:53, 122.79it/s]Running 10000 simulations.:  34%|███▍      | 3444/10000 [00:25<00:53, 122.96it/s]Running 10000 simulations.:  35%|███▍      | 3457/10000 [00:25<00:53, 123.01it/s]Running 10000 simulations.:  35%|███▍      | 3470/10000 [00:25<00:53, 122.90it/s]Running 10000 simulations.:  35%|███▍      | 3483/10000 [00:25<00:52, 122.99it/s]Running 10000 simulations.:  35%|███▍      | 3496/10000 [00:25<00:52, 123.24it/s]Running 10000 simulations.:  35%|███▌      | 3509/10000 [00:25<00:52, 123.27it/s]Running 10000 simulations.:  35%|███▌      | 3522/10000 [00:26<00:52, 123.32it/s]Running 10000 simulations.:  35%|███▌      | 3535/10000 [00:26<00:52, 123.58it/s]Running 10000 simulations.:  35%|███▌      | 3548/10000 [00:26<00:52, 123.62it/s]Running 10000 simulations.:  36%|███▌      | 3561/10000 [00:26<00:52, 123.65it/s]Running 10000 simulations.:  36%|███▌      | 3574/10000 [00:26<00:51, 125.02it/s]Running 10000 simulations.:  36%|███▌      | 3588/10000 [00:26<00:50, 128.10it/s]Running 10000 simulations.:  36%|███▌      | 3602/10000 [00:26<00:48, 130.58it/s]Running 10000 simulations.:  36%|███▌      | 3616/10000 [00:26<00:48, 131.71it/s]Running 10000 simulations.:  36%|███▋      | 3630/10000 [00:26<00:48, 131.99it/s]Running 10000 simulations.:  36%|███▋      | 3645/10000 [00:27<00:47, 134.84it/s]Running 10000 simulations.:  37%|███▋      | 3659/10000 [00:27<00:47, 133.58it/s]Running 10000 simulations.:  37%|███▋      | 3673/10000 [00:27<00:47, 134.55it/s]Running 10000 simulations.:  37%|███▋      | 3687/10000 [00:27<00:47, 132.19it/s]Running 10000 simulations.:  37%|███▋      | 3702/10000 [00:27<00:46, 134.71it/s]Running 10000 simulations.:  37%|███▋      | 3717/10000 [00:27<00:45, 136.79it/s]Running 10000 simulations.:  37%|███▋      | 3732/10000 [00:27<00:45, 138.43it/s]Running 10000 simulations.:  37%|███▋      | 3747/10000 [00:27<00:44, 139.29it/s]Running 10000 simulations.:  38%|███▊      | 3762/10000 [00:27<00:44, 140.00it/s]Running 10000 simulations.:  38%|███▊      | 3777/10000 [00:27<00:44, 140.62it/s]Running 10000 simulations.:  38%|███▊      | 3792/10000 [00:28<00:44, 140.67it/s]Running 10000 simulations.:  38%|███▊      | 3807/10000 [00:28<00:43, 140.81it/s]Running 10000 simulations.:  38%|███▊      | 3822/10000 [00:28<00:43, 140.87it/s]Running 10000 simulations.:  38%|███▊      | 3837/10000 [00:28<00:43, 141.09it/s]Running 10000 simulations.:  39%|███▊      | 3852/10000 [00:28<00:43, 141.53it/s]Running 10000 simulations.:  39%|███▊      | 3867/10000 [00:28<00:43, 141.90it/s]Running 10000 simulations.:  39%|███▉      | 3882/10000 [00:28<00:43, 141.71it/s]Running 10000 simulations.:  39%|███▉      | 3897/10000 [00:28<00:43, 141.69it/s]Running 10000 simulations.:  39%|███▉      | 3912/10000 [00:28<00:43, 141.52it/s]Running 10000 simulations.:  39%|███▉      | 3927/10000 [00:29<00:42, 141.40it/s]Running 10000 simulations.:  39%|███▉      | 3942/10000 [00:29<00:42, 141.24it/s]Running 10000 simulations.:  40%|███▉      | 3957/10000 [00:29<00:42, 141.28it/s]Running 10000 simulations.:  40%|███▉      | 3972/10000 [00:29<00:42, 141.14it/s]Running 10000 simulations.:  40%|███▉      | 3987/10000 [00:29<00:42, 141.13it/s]Running 10000 simulations.:  40%|████      | 4002/10000 [00:29<00:42, 141.13it/s]Running 10000 simulations.:  40%|████      | 4017/10000 [00:29<00:42, 141.16it/s]Running 10000 simulations.:  40%|████      | 4032/10000 [00:29<00:42, 141.11it/s]Running 10000 simulations.:  40%|████      | 4047/10000 [00:29<00:42, 141.14it/s]Running 10000 simulations.:  41%|████      | 4062/10000 [00:29<00:41, 141.42it/s]Running 10000 simulations.:  41%|████      | 4077/10000 [00:30<00:41, 141.13it/s]Running 10000 simulations.:  41%|████      | 4092/10000 [00:30<00:41, 141.39it/s]Running 10000 simulations.:  41%|████      | 4107/10000 [00:30<00:41, 141.54it/s]Running 10000 simulations.:  41%|████      | 4122/10000 [00:30<00:41, 141.67it/s]Running 10000 simulations.:  41%|████▏     | 4137/10000 [00:30<00:41, 141.99it/s]Running 10000 simulations.:  42%|████▏     | 4152/10000 [00:30<00:41, 141.72it/s]Running 10000 simulations.:  42%|████▏     | 4167/10000 [00:30<00:41, 141.54it/s]Running 10000 simulations.:  42%|████▏     | 4182/10000 [00:30<00:41, 141.28it/s]Running 10000 simulations.:  42%|████▏     | 4197/10000 [00:30<00:41, 141.06it/s]Running 10000 simulations.:  42%|████▏     | 4212/10000 [00:31<00:41, 141.07it/s]Running 10000 simulations.:  42%|████▏     | 4227/10000 [00:31<00:40, 141.27it/s]Running 10000 simulations.:  42%|████▏     | 4242/10000 [00:31<00:40, 141.38it/s]Running 10000 simulations.:  43%|████▎     | 4257/10000 [00:31<00:40, 141.48it/s]Running 10000 simulations.:  43%|████▎     | 4272/10000 [00:31<00:40, 140.86it/s]Running 10000 simulations.:  43%|████▎     | 4287/10000 [00:31<00:40, 140.18it/s]Running 10000 simulations.:  43%|████▎     | 4302/10000 [00:31<00:40, 140.61it/s]Running 10000 simulations.:  43%|████▎     | 4317/10000 [00:31<00:40, 141.25it/s]Running 10000 simulations.:  43%|████▎     | 4332/10000 [00:31<00:39, 142.02it/s]Running 10000 simulations.:  43%|████▎     | 4347/10000 [00:31<00:39, 142.05it/s]Running 10000 simulations.:  44%|████▎     | 4362/10000 [00:32<00:39, 141.98it/s]Running 10000 simulations.:  44%|████▍     | 4377/10000 [00:32<00:39, 142.10it/s]Running 10000 simulations.:  44%|████▍     | 4392/10000 [00:32<00:39, 142.38it/s]Running 10000 simulations.:  44%|████▍     | 4407/10000 [00:32<00:39, 142.47it/s]Running 10000 simulations.:  44%|████▍     | 4422/10000 [00:32<00:39, 142.28it/s]Running 10000 simulations.:  44%|████▍     | 4437/10000 [00:32<00:39, 142.05it/s]Running 10000 simulations.:  45%|████▍     | 4452/10000 [00:32<00:39, 142.04it/s]Running 10000 simulations.:  45%|████▍     | 4467/10000 [00:32<00:38, 141.99it/s]Running 10000 simulations.:  45%|████▍     | 4482/10000 [00:32<00:38, 142.50it/s]Running 10000 simulations.:  45%|████▍     | 4497/10000 [00:33<00:49, 110.34it/s]Running 10000 simulations.:  45%|████▌     | 4510/10000 [00:33<00:59, 91.62it/s] Running 10000 simulations.:  45%|████▌     | 4521/10000 [00:33<01:07, 81.59it/s]Running 10000 simulations.:  45%|████▌     | 4531/10000 [00:33<01:12, 75.41it/s]Running 10000 simulations.:  45%|████▌     | 4540/10000 [00:33<01:16, 71.73it/s]Running 10000 simulations.:  45%|████▌     | 4548/10000 [00:33<01:18, 69.40it/s]Running 10000 simulations.:  46%|████▌     | 4556/10000 [00:34<01:20, 67.46it/s]Running 10000 simulations.:  46%|████▌     | 4564/10000 [00:34<01:21, 66.69it/s]Running 10000 simulations.:  46%|████▌     | 4571/10000 [00:34<01:22, 65.62it/s]Running 10000 simulations.:  46%|████▌     | 4578/10000 [00:34<01:24, 64.42it/s]Running 10000 simulations.:  46%|████▌     | 4585/10000 [00:34<01:23, 64.49it/s]Running 10000 simulations.:  46%|████▌     | 4592/10000 [00:34<01:24, 64.29it/s]Running 10000 simulations.:  46%|████▌     | 4599/10000 [00:34<01:24, 64.11it/s]Running 10000 simulations.:  46%|████▌     | 4606/10000 [00:34<01:24, 64.04it/s]Running 10000 simulations.:  46%|████▌     | 4613/10000 [00:34<01:24, 63.73it/s]Running 10000 simulations.:  46%|████▌     | 4620/10000 [00:35<01:24, 63.62it/s]Running 10000 simulations.:  46%|████▋     | 4627/10000 [00:35<01:24, 63.78it/s]Running 10000 simulations.:  46%|████▋     | 4634/10000 [00:35<01:24, 63.55it/s]Running 10000 simulations.:  46%|████▋     | 4641/10000 [00:35<01:24, 63.69it/s]Running 10000 simulations.:  46%|████▋     | 4648/10000 [00:35<01:24, 63.71it/s]Running 10000 simulations.:  47%|████▋     | 4655/10000 [00:35<01:23, 63.84it/s]Running 10000 simulations.:  47%|████▋     | 4662/10000 [00:35<01:23, 63.99it/s]Running 10000 simulations.:  47%|████▋     | 4669/10000 [00:35<01:23, 63.70it/s]Running 10000 simulations.:  47%|████▋     | 4676/10000 [00:35<01:23, 63.97it/s]Running 10000 simulations.:  47%|████▋     | 4683/10000 [00:36<01:22, 64.16it/s]Running 10000 simulations.:  47%|████▋     | 4690/10000 [00:36<01:22, 64.41it/s]Running 10000 simulations.:  47%|████▋     | 4697/10000 [00:36<01:21, 64.70it/s]Running 10000 simulations.:  47%|████▋     | 4704/10000 [00:36<01:22, 64.39it/s]Running 10000 simulations.:  47%|████▋     | 4711/10000 [00:36<01:22, 64.41it/s]Running 10000 simulations.:  47%|████▋     | 4718/10000 [00:36<01:22, 63.84it/s]Running 10000 simulations.:  47%|████▋     | 4725/10000 [00:36<01:22, 64.27it/s]Running 10000 simulations.:  47%|████▋     | 4732/10000 [00:36<01:21, 64.25it/s]Running 10000 simulations.:  47%|████▋     | 4739/10000 [00:36<01:22, 64.14it/s]Running 10000 simulations.:  47%|████▋     | 4746/10000 [00:37<01:21, 64.46it/s]Running 10000 simulations.:  48%|████▊     | 4753/10000 [00:37<01:21, 64.44it/s]Running 10000 simulations.:  48%|████▊     | 4760/10000 [00:37<01:20, 64.80it/s]Running 10000 simulations.:  48%|████▊     | 4768/10000 [00:37<01:16, 68.50it/s]Running 10000 simulations.:  48%|████▊     | 4785/10000 [00:37<01:03, 82.77it/s]Running 10000 simulations.:  48%|████▊     | 4801/10000 [00:37<00:53, 96.75it/s]Running 10000 simulations.:  48%|████▊     | 4818/10000 [00:37<00:47, 109.81it/s]Running 10000 simulations.:  48%|████▊     | 4834/10000 [00:37<00:42, 121.15it/s]Running 10000 simulations.:  49%|████▊     | 4851/10000 [00:37<00:39, 130.91it/s]Running 10000 simulations.:  49%|████▊     | 4867/10000 [00:37<00:37, 138.32it/s]Running 10000 simulations.:  49%|████▉     | 4883/10000 [00:38<00:35, 144.07it/s]Running 10000 simulations.:  49%|████▉     | 4900/10000 [00:38<00:34, 148.75it/s]Running 10000 simulations.:  49%|████▉     | 4917/10000 [00:38<00:33, 152.18it/s]Running 10000 simulations.:  49%|████▉     | 4934/10000 [00:38<00:32, 154.47it/s]Running 10000 simulations.:  50%|████▉     | 4950/10000 [00:38<00:32, 155.98it/s]Running 10000 simulations.:  50%|████▉     | 4967/10000 [00:38<00:31, 157.66it/s]Running 10000 simulations.:  50%|████▉     | 4983/10000 [00:38<00:31, 158.00it/s]Running 10000 simulations.:  50%|████▉     | 4999/10000 [00:38<00:31, 158.25it/s]Running 10000 simulations.:  50%|█████     | 5015/10000 [00:38<00:31, 158.42it/s]Running 10000 simulations.:  50%|█████     | 5031/10000 [00:38<00:31, 158.32it/s]Running 10000 simulations.:  50%|█████     | 5047/10000 [00:39<00:31, 158.60it/s]Running 10000 simulations.:  51%|█████     | 5063/10000 [00:39<00:31, 158.38it/s]Running 10000 simulations.:  51%|█████     | 5079/10000 [00:39<00:31, 158.56it/s]Running 10000 simulations.:  51%|█████     | 5095/10000 [00:39<00:30, 158.78it/s]Running 10000 simulations.:  51%|█████     | 5111/10000 [00:39<00:30, 158.68it/s]Running 10000 simulations.:  51%|█████▏    | 5127/10000 [00:39<00:30, 158.90it/s]Running 10000 simulations.:  51%|█████▏    | 5143/10000 [00:39<00:30, 158.87it/s]Running 10000 simulations.:  52%|█████▏    | 5159/10000 [00:39<00:30, 158.76it/s]Running 10000 simulations.:  52%|█████▏    | 5175/10000 [00:39<00:30, 158.50it/s]Running 10000 simulations.:  52%|█████▏    | 5191/10000 [00:39<00:30, 158.49it/s]Running 10000 simulations.:  52%|█████▏    | 5207/10000 [00:40<00:30, 158.36it/s]Running 10000 simulations.:  52%|█████▏    | 5223/10000 [00:40<00:30, 158.31it/s]Running 10000 simulations.:  52%|█████▏    | 5239/10000 [00:40<00:30, 158.26it/s]Running 10000 simulations.:  53%|█████▎    | 5255/10000 [00:40<00:29, 158.49it/s]Running 10000 simulations.:  53%|█████▎    | 5271/10000 [00:40<00:29, 158.37it/s]Running 10000 simulations.:  53%|█████▎    | 5287/10000 [00:40<00:29, 158.72it/s]Running 10000 simulations.:  53%|█████▎    | 5303/10000 [00:40<00:29, 158.38it/s]Running 10000 simulations.:  53%|█████▎    | 5319/10000 [00:40<00:29, 158.46it/s]Running 10000 simulations.:  53%|█████▎    | 5335/10000 [00:40<00:29, 158.49it/s]Running 10000 simulations.:  54%|█████▎    | 5351/10000 [00:41<00:29, 158.26it/s]Running 10000 simulations.:  54%|█████▎    | 5367/10000 [00:41<00:29, 158.39it/s]Running 10000 simulations.:  54%|█████▍    | 5383/10000 [00:41<00:29, 158.22it/s]Running 10000 simulations.:  54%|█████▍    | 5399/10000 [00:41<00:29, 158.19it/s]Running 10000 simulations.:  54%|█████▍    | 5415/10000 [00:41<00:29, 157.99it/s]Running 10000 simulations.:  54%|█████▍    | 5431/10000 [00:41<00:28, 157.90it/s]Running 10000 simulations.:  54%|█████▍    | 5447/10000 [00:41<00:28, 158.16it/s]Running 10000 simulations.:  55%|█████▍    | 5463/10000 [00:41<00:28, 158.04it/s]Running 10000 simulations.:  55%|█████▍    | 5480/10000 [00:41<00:28, 158.67it/s]Running 10000 simulations.:  55%|█████▍    | 5496/10000 [00:41<00:28, 158.62it/s]Running 10000 simulations.:  55%|█████▌    | 5512/10000 [00:42<00:28, 158.74it/s]Running 10000 simulations.:  55%|█████▌    | 5528/10000 [00:42<00:28, 158.68it/s]Running 10000 simulations.:  55%|█████▌    | 5544/10000 [00:42<00:28, 158.84it/s]Running 10000 simulations.:  56%|█████▌    | 5561/10000 [00:42<00:27, 159.23it/s]Running 10000 simulations.:  56%|█████▌    | 5578/10000 [00:42<00:27, 159.46it/s]Running 10000 simulations.:  56%|█████▌    | 5594/10000 [00:42<00:27, 159.15it/s]Running 10000 simulations.:  56%|█████▌    | 5610/10000 [00:42<00:27, 158.99it/s]Running 10000 simulations.:  56%|█████▋    | 5627/10000 [00:42<00:27, 159.35it/s]Running 10000 simulations.:  56%|█████▋    | 5643/10000 [00:42<00:27, 158.76it/s]Running 10000 simulations.:  57%|█████▋    | 5659/10000 [00:42<00:27, 158.50it/s]Running 10000 simulations.:  57%|█████▋    | 5676/10000 [00:43<00:27, 159.00it/s]Running 10000 simulations.:  57%|█████▋    | 5693/10000 [00:43<00:27, 159.46it/s]Running 10000 simulations.:  57%|█████▋    | 5709/10000 [00:43<00:26, 159.27it/s]Running 10000 simulations.:  57%|█████▋    | 5725/10000 [00:43<00:26, 159.18it/s]Running 10000 simulations.:  57%|█████▋    | 5742/10000 [00:43<00:26, 159.82it/s]Running 10000 simulations.:  58%|█████▊    | 5758/10000 [00:43<00:26, 159.09it/s]Running 10000 simulations.:  58%|█████▊    | 5774/10000 [00:43<00:26, 159.23it/s]Running 10000 simulations.:  58%|█████▊    | 5790/10000 [00:43<00:27, 152.66it/s]Running 10000 simulations.:  58%|█████▊    | 5806/10000 [00:43<00:27, 154.62it/s]Running 10000 simulations.:  58%|█████▊    | 5822/10000 [00:43<00:26, 155.66it/s]Running 10000 simulations.:  58%|█████▊    | 5838/10000 [00:44<00:26, 156.32it/s]Running 10000 simulations.:  59%|█████▊    | 5854/10000 [00:44<00:26, 157.02it/s]Running 10000 simulations.:  59%|█████▊    | 5870/10000 [00:44<00:26, 157.33it/s]Running 10000 simulations.:  59%|█████▉    | 5887/10000 [00:44<00:25, 158.50it/s]Running 10000 simulations.:  59%|█████▉    | 5904/10000 [00:44<00:25, 159.14it/s]Running 10000 simulations.:  59%|█████▉    | 5921/10000 [00:44<00:25, 159.88it/s]Running 10000 simulations.:  59%|█████▉    | 5938/10000 [00:44<00:25, 160.12it/s]Running 10000 simulations.:  60%|█████▉    | 5955/10000 [00:44<00:25, 160.53it/s]Running 10000 simulations.:  60%|█████▉    | 5972/10000 [00:44<00:25, 160.65it/s]Running 10000 simulations.:  60%|█████▉    | 5989/10000 [00:45<00:25, 160.33it/s]Running 10000 simulations.:  60%|██████    | 6006/10000 [00:45<00:24, 160.40it/s]Running 10000 simulations.:  60%|██████    | 6023/10000 [00:45<00:24, 160.72it/s]Running 10000 simulations.:  60%|██████    | 6040/10000 [00:45<00:24, 160.08it/s]Running 10000 simulations.:  61%|██████    | 6057/10000 [00:45<00:24, 159.57it/s]Running 10000 simulations.:  61%|██████    | 6073/10000 [00:45<00:24, 159.07it/s]Running 10000 simulations.:  61%|██████    | 6089/10000 [00:45<00:24, 159.13it/s]Running 10000 simulations.:  61%|██████    | 6105/10000 [00:45<00:24, 159.17it/s]Running 10000 simulations.:  61%|██████    | 6122/10000 [00:45<00:24, 159.62it/s]Running 10000 simulations.:  61%|██████▏   | 6138/10000 [00:45<00:24, 159.58it/s]Running 10000 simulations.:  62%|██████▏   | 6154/10000 [00:46<00:24, 159.59it/s]Running 10000 simulations.:  62%|██████▏   | 6171/10000 [00:46<00:23, 160.04it/s]Running 10000 simulations.:  62%|██████▏   | 6188/10000 [00:46<00:23, 160.24it/s]Running 10000 simulations.:  62%|██████▏   | 6205/10000 [00:46<00:23, 160.43it/s]Running 10000 simulations.:  62%|██████▏   | 6222/10000 [00:46<00:23, 159.59it/s]Running 10000 simulations.:  62%|██████▏   | 6238/10000 [00:46<00:23, 159.31it/s]Running 10000 simulations.:  63%|██████▎   | 6254/10000 [00:46<00:23, 158.83it/s]Running 10000 simulations.:  63%|██████▎   | 6270/10000 [00:46<00:23, 158.72it/s]Running 10000 simulations.:  63%|██████▎   | 6286/10000 [00:46<00:23, 158.52it/s]Running 10000 simulations.:  63%|██████▎   | 6302/10000 [00:46<00:23, 158.65it/s]Running 10000 simulations.:  63%|██████▎   | 6318/10000 [00:47<00:23, 158.28it/s]Running 10000 simulations.:  63%|██████▎   | 6334/10000 [00:47<00:23, 157.27it/s]Running 10000 simulations.:  64%|██████▎   | 6350/10000 [00:47<00:23, 157.55it/s]Running 10000 simulations.:  64%|██████▎   | 6366/10000 [00:47<00:22, 158.14it/s]Running 10000 simulations.:  64%|██████▍   | 6382/10000 [00:47<00:22, 158.55it/s]Running 10000 simulations.:  64%|██████▍   | 6398/10000 [00:47<00:22, 158.45it/s]Running 10000 simulations.:  64%|██████▍   | 6414/10000 [00:47<00:22, 158.24it/s]Running 10000 simulations.:  64%|██████▍   | 6430/10000 [00:47<00:22, 158.04it/s]Running 10000 simulations.:  64%|██████▍   | 6446/10000 [00:47<00:22, 158.15it/s]Running 10000 simulations.:  65%|██████▍   | 6462/10000 [00:48<00:22, 158.40it/s]Running 10000 simulations.:  65%|██████▍   | 6478/10000 [00:48<00:22, 158.18it/s]Running 10000 simulations.:  65%|██████▍   | 6494/10000 [00:48<00:22, 158.54it/s]Running 10000 simulations.:  65%|██████▌   | 6510/10000 [00:48<00:22, 158.43it/s]Running 10000 simulations.:  65%|██████▌   | 6526/10000 [00:48<00:21, 158.74it/s]Running 10000 simulations.:  65%|██████▌   | 6542/10000 [00:48<00:21, 158.41it/s]Running 10000 simulations.:  66%|██████▌   | 6558/10000 [00:48<00:21, 158.29it/s]Running 10000 simulations.:  66%|██████▌   | 6574/10000 [00:48<00:21, 158.27it/s]Running 10000 simulations.:  66%|██████▌   | 6590/10000 [00:48<00:21, 158.21it/s]Running 10000 simulations.:  66%|██████▌   | 6606/10000 [00:48<00:21, 158.57it/s]Running 10000 simulations.:  66%|██████▌   | 6622/10000 [00:49<00:21, 158.68it/s]Running 10000 simulations.:  66%|██████▋   | 6638/10000 [00:49<00:21, 158.82it/s]Running 10000 simulations.:  67%|██████▋   | 6654/10000 [00:49<00:21, 158.67it/s]Running 10000 simulations.:  67%|██████▋   | 6671/10000 [00:49<00:20, 159.18it/s]Running 10000 simulations.:  67%|██████▋   | 6687/10000 [00:49<00:20, 159.21it/s]Running 10000 simulations.:  67%|██████▋   | 6703/10000 [00:49<00:20, 158.68it/s]Running 10000 simulations.:  67%|██████▋   | 6719/10000 [00:49<00:20, 158.57it/s]Running 10000 simulations.:  67%|██████▋   | 6735/10000 [00:49<00:20, 158.87it/s]Running 10000 simulations.:  68%|██████▊   | 6751/10000 [00:49<00:20, 158.96it/s]Running 10000 simulations.:  68%|██████▊   | 6767/10000 [00:49<00:20, 158.43it/s]Running 10000 simulations.:  68%|██████▊   | 6783/10000 [00:50<00:20, 158.17it/s]Running 10000 simulations.:  68%|██████▊   | 6799/10000 [00:50<00:20, 157.74it/s]Running 10000 simulations.:  68%|██████▊   | 6815/10000 [00:50<00:20, 157.51it/s]Running 10000 simulations.:  68%|██████▊   | 6831/10000 [00:50<00:20, 157.09it/s]Running 10000 simulations.:  68%|██████▊   | 6847/10000 [00:50<00:20, 157.12it/s]Running 10000 simulations.:  69%|██████▊   | 6863/10000 [00:50<00:19, 157.56it/s]Running 10000 simulations.:  69%|██████▉   | 6879/10000 [00:50<00:19, 157.91it/s]Running 10000 simulations.:  69%|██████▉   | 6895/10000 [00:50<00:19, 157.88it/s]Running 10000 simulations.:  69%|██████▉   | 6911/10000 [00:50<00:19, 157.32it/s]Running 10000 simulations.:  69%|██████▉   | 6927/10000 [00:50<00:19, 157.45it/s]Running 10000 simulations.:  69%|██████▉   | 6943/10000 [00:51<00:19, 157.83it/s]Running 10000 simulations.:  70%|██████▉   | 6959/10000 [00:51<00:19, 157.95it/s]Running 10000 simulations.:  70%|██████▉   | 6975/10000 [00:51<00:19, 158.24it/s]Running 10000 simulations.:  70%|██████▉   | 6991/10000 [00:51<00:19, 157.76it/s]Running 10000 simulations.:  70%|███████   | 7007/10000 [00:51<00:18, 157.89it/s]Running 10000 simulations.:  70%|███████   | 7023/10000 [00:51<00:18, 157.55it/s]Running 10000 simulations.:  70%|███████   | 7039/10000 [00:51<00:18, 157.70it/s]Running 10000 simulations.:  71%|███████   | 7055/10000 [00:51<00:18, 157.31it/s]Running 10000 simulations.:  71%|███████   | 7071/10000 [00:51<00:18, 157.35it/s]Running 10000 simulations.:  71%|███████   | 7087/10000 [00:51<00:18, 157.38it/s]Running 10000 simulations.:  71%|███████   | 7103/10000 [00:52<00:18, 157.67it/s]Running 10000 simulations.:  71%|███████   | 7119/10000 [00:52<00:18, 157.47it/s]Running 10000 simulations.:  71%|███████▏  | 7135/10000 [00:52<00:18, 157.01it/s]Running 10000 simulations.:  72%|███████▏  | 7151/10000 [00:52<00:18, 157.77it/s]Running 10000 simulations.:  72%|███████▏  | 7167/10000 [00:52<00:17, 157.85it/s]Running 10000 simulations.:  72%|███████▏  | 7183/10000 [00:52<00:17, 158.22it/s]Running 10000 simulations.:  72%|███████▏  | 7199/10000 [00:52<00:17, 158.38it/s]Running 10000 simulations.:  72%|███████▏  | 7215/10000 [00:52<00:17, 158.14it/s]Running 10000 simulations.:  72%|███████▏  | 7231/10000 [00:52<00:17, 157.86it/s]Running 10000 simulations.:  72%|███████▏  | 7247/10000 [00:52<00:17, 157.37it/s]Running 10000 simulations.:  73%|███████▎  | 7263/10000 [00:53<00:17, 157.30it/s]Running 10000 simulations.:  73%|███████▎  | 7279/10000 [00:53<00:17, 156.91it/s]Running 10000 simulations.:  73%|███████▎  | 7295/10000 [00:53<00:17, 156.94it/s]Running 10000 simulations.:  73%|███████▎  | 7311/10000 [00:53<00:17, 156.48it/s]Running 10000 simulations.:  73%|███████▎  | 7327/10000 [00:53<00:17, 156.68it/s]Running 10000 simulations.:  73%|███████▎  | 7343/10000 [00:53<00:16, 156.78it/s]Running 10000 simulations.:  74%|███████▎  | 7359/10000 [00:53<00:16, 156.71it/s]Running 10000 simulations.:  74%|███████▍  | 7375/10000 [00:53<00:16, 156.72it/s]Running 10000 simulations.:  74%|███████▍  | 7391/10000 [00:53<00:16, 156.55it/s]Running 10000 simulations.:  74%|███████▍  | 7407/10000 [00:53<00:16, 157.18it/s]Running 10000 simulations.:  74%|███████▍  | 7423/10000 [00:54<00:16, 157.14it/s]Running 10000 simulations.:  74%|███████▍  | 7439/10000 [00:54<00:16, 157.30it/s]Running 10000 simulations.:  75%|███████▍  | 7455/10000 [00:54<00:16, 157.03it/s]Running 10000 simulations.:  75%|███████▍  | 7471/10000 [00:54<00:16, 157.48it/s]Running 10000 simulations.:  75%|███████▍  | 7487/10000 [00:54<00:15, 157.78it/s]Running 10000 simulations.:  75%|███████▌  | 7503/10000 [00:54<00:15, 158.09it/s]Running 10000 simulations.:  75%|███████▌  | 7519/10000 [00:54<00:15, 157.71it/s]Running 10000 simulations.:  75%|███████▌  | 7535/10000 [00:54<00:15, 157.38it/s]Running 10000 simulations.:  76%|███████▌  | 7551/10000 [00:54<00:15, 157.28it/s]Running 10000 simulations.:  76%|███████▌  | 7567/10000 [00:55<00:15, 156.87it/s]Running 10000 simulations.:  76%|███████▌  | 7583/10000 [00:55<00:15, 156.93it/s]Running 10000 simulations.:  76%|███████▌  | 7599/10000 [00:55<00:15, 156.99it/s]Running 10000 simulations.:  76%|███████▌  | 7615/10000 [00:55<00:15, 156.99it/s]Running 10000 simulations.:  76%|███████▋  | 7631/10000 [00:55<00:15, 156.83it/s]Running 10000 simulations.:  76%|███████▋  | 7647/10000 [00:55<00:15, 156.58it/s]Running 10000 simulations.:  77%|███████▋  | 7663/10000 [00:55<00:14, 156.70it/s]Running 10000 simulations.:  77%|███████▋  | 7679/10000 [00:55<00:14, 156.59it/s]Running 10000 simulations.:  77%|███████▋  | 7695/10000 [00:55<00:14, 156.76it/s]Running 10000 simulations.:  77%|███████▋  | 7711/10000 [00:55<00:14, 156.63it/s]Running 10000 simulations.:  77%|███████▋  | 7727/10000 [00:56<00:14, 157.01it/s]Running 10000 simulations.:  77%|███████▋  | 7743/10000 [00:56<00:14, 157.21it/s]Running 10000 simulations.:  78%|███████▊  | 7759/10000 [00:56<00:14, 157.24it/s]Running 10000 simulations.:  78%|███████▊  | 7775/10000 [00:56<00:14, 157.39it/s]Running 10000 simulations.:  78%|███████▊  | 7791/10000 [00:56<00:14, 156.72it/s]Running 10000 simulations.:  78%|███████▊  | 7809/10000 [00:56<00:13, 160.56it/s]Running 10000 simulations.:  78%|███████▊  | 7826/10000 [00:56<00:13, 163.10it/s]Running 10000 simulations.:  78%|███████▊  | 7843/10000 [00:56<00:13, 163.10it/s]Running 10000 simulations.:  79%|███████▊  | 7860/10000 [00:56<00:13, 162.05it/s]Running 10000 simulations.:  79%|███████▉  | 7877/10000 [00:56<00:13, 157.99it/s]Running 10000 simulations.:  79%|███████▉  | 7893/10000 [00:57<00:13, 154.97it/s]Running 10000 simulations.:  79%|███████▉  | 7909/10000 [00:57<00:13, 153.70it/s]Running 10000 simulations.:  79%|███████▉  | 7925/10000 [00:57<00:13, 152.34it/s]Running 10000 simulations.:  79%|███████▉  | 7941/10000 [00:57<00:13, 152.98it/s]Running 10000 simulations.:  80%|███████▉  | 7957/10000 [00:57<00:13, 152.57it/s]Running 10000 simulations.:  80%|███████▉  | 7973/10000 [00:57<00:13, 153.36it/s]Running 10000 simulations.:  80%|███████▉  | 7989/10000 [00:57<00:13, 154.31it/s]Running 10000 simulations.:  80%|████████  | 8005/10000 [00:57<00:12, 154.77it/s]Running 10000 simulations.:  80%|████████  | 8021/10000 [00:57<00:12, 155.93it/s]Running 10000 simulations.:  80%|████████  | 8037/10000 [00:58<00:12, 156.46it/s]Running 10000 simulations.:  81%|████████  | 8053/10000 [00:58<00:12, 156.67it/s]Running 10000 simulations.:  81%|████████  | 8069/10000 [00:58<00:12, 155.63it/s]Running 10000 simulations.:  81%|████████  | 8085/10000 [00:58<00:12, 156.15it/s]Running 10000 simulations.:  81%|████████  | 8101/10000 [00:58<00:12, 156.24it/s]Running 10000 simulations.:  81%|████████  | 8117/10000 [00:58<00:12, 156.32it/s]Running 10000 simulations.:  81%|████████▏ | 8133/10000 [00:58<00:11, 156.10it/s]Running 10000 simulations.:  81%|████████▏ | 8149/10000 [00:58<00:11, 156.75it/s]Running 10000 simulations.:  82%|████████▏ | 8165/10000 [00:58<00:11, 157.10it/s]Running 10000 simulations.:  82%|████████▏ | 8181/10000 [00:58<00:11, 156.67it/s]Running 10000 simulations.:  82%|████████▏ | 8197/10000 [00:59<00:11, 156.62it/s]Running 10000 simulations.:  82%|████████▏ | 8213/10000 [00:59<00:11, 156.37it/s]Running 10000 simulations.:  82%|████████▏ | 8229/10000 [00:59<00:11, 156.79it/s]Running 10000 simulations.:  82%|████████▏ | 8245/10000 [00:59<00:11, 156.72it/s]Running 10000 simulations.:  83%|████████▎ | 8261/10000 [00:59<00:11, 156.94it/s]Running 10000 simulations.:  83%|████████▎ | 8277/10000 [00:59<00:10, 157.01it/s]Running 10000 simulations.:  83%|████████▎ | 8293/10000 [00:59<00:10, 156.98it/s]Running 10000 simulations.:  83%|████████▎ | 8309/10000 [00:59<00:10, 157.20it/s]Running 10000 simulations.:  83%|████████▎ | 8325/10000 [00:59<00:10, 156.99it/s]Running 10000 simulations.:  83%|████████▎ | 8341/10000 [00:59<00:10, 157.50it/s]Running 10000 simulations.:  84%|████████▎ | 8357/10000 [01:00<00:10, 157.51it/s]Running 10000 simulations.:  84%|████████▎ | 8373/10000 [01:00<00:10, 157.52it/s]Running 10000 simulations.:  84%|████████▍ | 8389/10000 [01:00<00:10, 157.43it/s]Running 10000 simulations.:  84%|████████▍ | 8405/10000 [01:00<00:10, 157.40it/s]Running 10000 simulations.:  84%|████████▍ | 8421/10000 [01:00<00:10, 157.21it/s]Running 10000 simulations.:  84%|████████▍ | 8437/10000 [01:00<00:09, 157.37it/s]Running 10000 simulations.:  85%|████████▍ | 8453/10000 [01:00<00:09, 157.59it/s]Running 10000 simulations.:  85%|████████▍ | 8469/10000 [01:00<00:09, 157.30it/s]Running 10000 simulations.:  85%|████████▍ | 8485/10000 [01:00<00:09, 157.21it/s]Running 10000 simulations.:  85%|████████▌ | 8501/10000 [01:00<00:09, 157.03it/s]Running 10000 simulations.:  85%|████████▌ | 8517/10000 [01:01<00:09, 157.37it/s]Running 10000 simulations.:  85%|████████▌ | 8533/10000 [01:01<00:09, 157.53it/s]Running 10000 simulations.:  85%|████████▌ | 8549/10000 [01:01<00:09, 157.64it/s]Running 10000 simulations.:  86%|████████▌ | 8565/10000 [01:01<00:09, 157.53it/s]Running 10000 simulations.:  86%|████████▌ | 8581/10000 [01:01<00:08, 158.07it/s]Running 10000 simulations.:  86%|████████▌ | 8597/10000 [01:01<00:08, 158.02it/s]Running 10000 simulations.:  86%|████████▌ | 8613/10000 [01:01<00:08, 157.66it/s]Running 10000 simulations.:  86%|████████▋ | 8629/10000 [01:01<00:08, 157.52it/s]Running 10000 simulations.:  86%|████████▋ | 8645/10000 [01:01<00:08, 157.59it/s]Running 10000 simulations.:  87%|████████▋ | 8662/10000 [01:01<00:08, 158.30it/s]Running 10000 simulations.:  87%|████████▋ | 8678/10000 [01:02<00:08, 158.60it/s]Running 10000 simulations.:  87%|████████▋ | 8694/10000 [01:02<00:08, 159.00it/s]Running 10000 simulations.:  87%|████████▋ | 8710/10000 [01:02<00:08, 158.79it/s]Running 10000 simulations.:  87%|████████▋ | 8726/10000 [01:02<00:08, 158.20it/s]Running 10000 simulations.:  87%|████████▋ | 8742/10000 [01:02<00:07, 157.68it/s]Running 10000 simulations.:  88%|████████▊ | 8758/10000 [01:02<00:07, 157.90it/s]Running 10000 simulations.:  88%|████████▊ | 8774/10000 [01:02<00:07, 157.79it/s]Running 10000 simulations.:  88%|████████▊ | 8790/10000 [01:02<00:07, 157.80it/s]Running 10000 simulations.:  88%|████████▊ | 8806/10000 [01:02<00:07, 157.74it/s]Running 10000 simulations.:  88%|████████▊ | 8822/10000 [01:03<00:07, 157.46it/s]Running 10000 simulations.:  88%|████████▊ | 8838/10000 [01:03<00:07, 157.81it/s]Running 10000 simulations.:  89%|████████▊ | 8854/10000 [01:03<00:07, 157.83it/s]Running 10000 simulations.:  89%|████████▊ | 8870/10000 [01:03<00:07, 157.83it/s]Running 10000 simulations.:  89%|████████▉ | 8886/10000 [01:03<00:07, 157.32it/s]Running 10000 simulations.:  89%|████████▉ | 8902/10000 [01:03<00:06, 157.33it/s]Running 10000 simulations.:  89%|████████▉ | 8918/10000 [01:03<00:06, 157.48it/s]Running 10000 simulations.:  89%|████████▉ | 8934/10000 [01:03<00:06, 157.51it/s]Running 10000 simulations.:  90%|████████▉ | 8950/10000 [01:03<00:06, 156.64it/s]Running 10000 simulations.:  90%|████████▉ | 8966/10000 [01:03<00:06, 152.86it/s]Running 10000 simulations.:  90%|████████▉ | 8982/10000 [01:04<00:06, 150.77it/s]Running 10000 simulations.:  90%|████████▉ | 8998/10000 [01:04<00:06, 149.43it/s]Running 10000 simulations.:  90%|█████████ | 9013/10000 [01:04<00:06, 148.58it/s]Running 10000 simulations.:  90%|█████████ | 9028/10000 [01:04<00:06, 147.62it/s]Running 10000 simulations.:  90%|█████████ | 9043/10000 [01:04<00:06, 147.40it/s]Running 10000 simulations.:  91%|█████████ | 9058/10000 [01:04<00:06, 147.48it/s]Running 10000 simulations.:  91%|█████████ | 9073/10000 [01:04<00:06, 147.53it/s]Running 10000 simulations.:  91%|█████████ | 9088/10000 [01:04<00:06, 146.99it/s]Running 10000 simulations.:  91%|█████████ | 9103/10000 [01:04<00:06, 146.41it/s]Running 10000 simulations.:  91%|█████████ | 9118/10000 [01:04<00:06, 146.11it/s]Running 10000 simulations.:  91%|█████████▏| 9133/10000 [01:05<00:05, 145.83it/s]Running 10000 simulations.:  91%|█████████▏| 9148/10000 [01:05<00:05, 146.17it/s]Running 10000 simulations.:  92%|█████████▏| 9163/10000 [01:05<00:05, 146.36it/s]Running 10000 simulations.:  92%|█████████▏| 9178/10000 [01:05<00:05, 145.21it/s]Running 10000 simulations.:  92%|█████████▏| 9193/10000 [01:05<00:05, 145.18it/s]Running 10000 simulations.:  92%|█████████▏| 9209/10000 [01:05<00:05, 146.77it/s]Running 10000 simulations.:  92%|█████████▏| 9224/10000 [01:05<00:05, 147.30it/s]Running 10000 simulations.:  92%|█████████▏| 9239/10000 [01:05<00:05, 147.55it/s]Running 10000 simulations.:  93%|█████████▎| 9254/10000 [01:05<00:05, 148.11it/s]Running 10000 simulations.:  93%|█████████▎| 9269/10000 [01:05<00:04, 147.86it/s]Running 10000 simulations.:  93%|█████████▎| 9284/10000 [01:06<00:04, 147.80it/s]Running 10000 simulations.:  93%|█████████▎| 9299/10000 [01:06<00:04, 147.81it/s]Running 10000 simulations.:  93%|█████████▎| 9314/10000 [01:06<00:04, 147.57it/s]Running 10000 simulations.:  93%|█████████▎| 9329/10000 [01:06<00:04, 147.45it/s]Running 10000 simulations.:  93%|█████████▎| 9344/10000 [01:06<00:04, 147.03it/s]Running 10000 simulations.:  94%|█████████▎| 9359/10000 [01:06<00:04, 147.32it/s]Running 10000 simulations.:  94%|█████████▎| 9374/10000 [01:06<00:04, 147.28it/s]Running 10000 simulations.:  94%|█████████▍| 9389/10000 [01:06<00:04, 146.71it/s]Running 10000 simulations.:  94%|█████████▍| 9404/10000 [01:06<00:04, 146.48it/s]Running 10000 simulations.:  94%|█████████▍| 9419/10000 [01:07<00:03, 146.82it/s]Running 10000 simulations.:  94%|█████████▍| 9434/10000 [01:07<00:03, 147.10it/s]Running 10000 simulations.:  94%|█████████▍| 9449/10000 [01:07<00:03, 147.15it/s]Running 10000 simulations.:  95%|█████████▍| 9464/10000 [01:07<00:03, 146.72it/s]Running 10000 simulations.:  95%|█████████▍| 9479/10000 [01:07<00:03, 145.72it/s]Running 10000 simulations.:  95%|█████████▍| 9494/10000 [01:07<00:03, 141.99it/s]Running 10000 simulations.:  95%|█████████▌| 9509/10000 [01:07<00:03, 143.62it/s]Running 10000 simulations.:  95%|█████████▌| 9524/10000 [01:07<00:03, 144.19it/s]Running 10000 simulations.:  95%|█████████▌| 9539/10000 [01:07<00:03, 144.45it/s]Running 10000 simulations.:  96%|█████████▌| 9554/10000 [01:07<00:03, 145.36it/s]Running 10000 simulations.:  96%|█████████▌| 9569/10000 [01:08<00:02, 145.42it/s]Running 10000 simulations.:  96%|█████████▌| 9584/10000 [01:08<00:02, 145.31it/s]Running 10000 simulations.:  96%|█████████▌| 9599/10000 [01:08<00:02, 145.59it/s]Running 10000 simulations.:  96%|█████████▌| 9614/10000 [01:08<00:02, 146.05it/s]Running 10000 simulations.:  96%|█████████▋| 9629/10000 [01:08<00:02, 146.24it/s]Running 10000 simulations.:  96%|█████████▋| 9644/10000 [01:08<00:02, 146.41it/s]Running 10000 simulations.:  97%|█████████▋| 9659/10000 [01:08<00:02, 146.05it/s]Running 10000 simulations.:  97%|█████████▋| 9674/10000 [01:08<00:02, 146.26it/s]Running 10000 simulations.:  97%|█████████▋| 9689/10000 [01:08<00:02, 146.73it/s]Running 10000 simulations.:  97%|█████████▋| 9704/10000 [01:08<00:02, 146.94it/s]Running 10000 simulations.:  97%|█████████▋| 9719/10000 [01:09<00:01, 146.99it/s]Running 10000 simulations.:  97%|█████████▋| 9734/10000 [01:09<00:01, 147.06it/s]Running 10000 simulations.:  97%|█████████▋| 9749/10000 [01:09<00:01, 147.29it/s]Running 10000 simulations.:  98%|█████████▊| 9764/10000 [01:09<00:01, 147.47it/s]Running 10000 simulations.:  98%|█████████▊| 9779/10000 [01:09<00:01, 147.48it/s]Running 10000 simulations.:  98%|█████████▊| 9794/10000 [01:09<00:01, 147.20it/s]Running 10000 simulations.:  98%|█████████▊| 9809/10000 [01:09<00:01, 147.29it/s]Running 10000 simulations.:  98%|█████████▊| 9824/10000 [01:09<00:01, 147.05it/s]Running 10000 simulations.:  98%|█████████▊| 9839/10000 [01:09<00:01, 146.97it/s]Running 10000 simulations.:  99%|█████████▊| 9854/10000 [01:09<00:00, 146.49it/s]Running 10000 simulations.:  99%|█████████▊| 9869/10000 [01:10<00:00, 146.81it/s]Running 10000 simulations.:  99%|█████████▉| 9884/10000 [01:10<00:00, 146.61it/s]Running 10000 simulations.:  99%|█████████▉| 9899/10000 [01:10<00:00, 145.66it/s]Running 10000 simulations.:  99%|█████████▉| 9914/10000 [01:10<00:00, 146.21it/s]Running 10000 simulations.:  99%|█████████▉| 9929/10000 [01:10<00:00, 145.12it/s]Running 10000 simulations.:  99%|█████████▉| 9944/10000 [01:10<00:00, 144.84it/s]Running 10000 simulations.: 100%|█████████▉| 9959/10000 [01:10<00:00, 143.10it/s]Running 10000 simulations.: 100%|█████████▉| 9974/10000 [01:10<00:00, 144.57it/s]Running 10000 simulations.: 100%|█████████▉| 9989/10000 [01:10<00:00, 145.61it/s]Running 10000 simulations.: 100%|██████████| 10000/10000 [01:10<00:00, 140.86it/s]
Running 10000 simulations.:   0%|          | 0/10000 [00:00<?, ?it/s]Running 10000 simulations.:   0%|          | 17/10000 [00:00<01:01, 162.75it/s]Running 10000 simulations.:   0%|          | 34/10000 [00:00<01:01, 162.67it/s]Running 10000 simulations.:   1%|          | 51/10000 [00:00<01:01, 162.69it/s]Running 10000 simulations.:   1%|          | 68/10000 [00:00<01:01, 162.64it/s]Running 10000 simulations.:   1%|          | 85/10000 [00:00<01:00, 163.31it/s]Running 10000 simulations.:   1%|          | 102/10000 [00:00<01:00, 163.11it/s]Running 10000 simulations.:   1%|          | 119/10000 [00:00<01:00, 162.87it/s]Running 10000 simulations.:   1%|▏         | 136/10000 [00:00<01:00, 162.52it/s]Running 10000 simulations.:   2%|▏         | 153/10000 [00:00<01:00, 162.12it/s]Running 10000 simulations.:   2%|▏         | 170/10000 [00:01<01:00, 162.03it/s]Running 10000 simulations.:   2%|▏         | 187/10000 [00:01<01:00, 162.28it/s]Running 10000 simulations.:   2%|▏         | 204/10000 [00:01<01:00, 162.45it/s]Running 10000 simulations.:   2%|▏         | 221/10000 [00:01<01:00, 162.51it/s]Running 10000 simulations.:   2%|▏         | 238/10000 [00:01<00:59, 162.71it/s]Running 10000 simulations.:   3%|▎         | 255/10000 [00:01<00:59, 162.52it/s]Running 10000 simulations.:   3%|▎         | 272/10000 [00:01<00:59, 162.16it/s]Running 10000 simulations.:   3%|▎         | 289/10000 [00:01<00:59, 162.33it/s]Running 10000 simulations.:   3%|▎         | 306/10000 [00:01<00:59, 161.75it/s]Running 10000 simulations.:   3%|▎         | 323/10000 [00:01<00:59, 161.51it/s]Running 10000 simulations.:   3%|▎         | 340/10000 [00:02<00:59, 161.24it/s]Running 10000 simulations.:   4%|▎         | 357/10000 [00:02<00:59, 160.96it/s]Running 10000 simulations.:   4%|▎         | 374/10000 [00:02<01:00, 160.01it/s]Running 10000 simulations.:   4%|▍         | 390/10000 [00:02<01:00, 159.43it/s]Running 10000 simulations.:   4%|▍         | 407/10000 [00:02<00:59, 160.03it/s]Running 10000 simulations.:   4%|▍         | 424/10000 [00:02<00:59, 160.29it/s]Running 10000 simulations.:   4%|▍         | 441/10000 [00:02<00:59, 160.60it/s]Running 10000 simulations.:   5%|▍         | 458/10000 [00:02<00:59, 160.85it/s]Running 10000 simulations.:   5%|▍         | 475/10000 [00:02<00:59, 160.69it/s]Running 10000 simulations.:   5%|▍         | 492/10000 [00:03<00:59, 160.26it/s]Running 10000 simulations.:   5%|▌         | 509/10000 [00:03<01:01, 154.13it/s]Running 10000 simulations.:   5%|▌         | 526/10000 [00:03<01:00, 155.92it/s]Running 10000 simulations.:   5%|▌         | 543/10000 [00:03<01:00, 157.38it/s]Running 10000 simulations.:   6%|▌         | 560/10000 [00:03<00:59, 158.27it/s]Running 10000 simulations.:   6%|▌         | 577/10000 [00:03<00:59, 158.88it/s]Running 10000 simulations.:   6%|▌         | 593/10000 [00:03<00:59, 159.19it/s]Running 10000 simulations.:   6%|▌         | 610/10000 [00:03<00:58, 159.43it/s]Running 10000 simulations.:   6%|▋         | 626/10000 [00:03<00:58, 159.07it/s]Running 10000 simulations.:   6%|▋         | 642/10000 [00:04<00:59, 157.68it/s]Running 10000 simulations.:   7%|▋         | 658/10000 [00:04<00:59, 158.07it/s]Running 10000 simulations.:   7%|▋         | 674/10000 [00:04<00:58, 158.43it/s]Running 10000 simulations.:   7%|▋         | 690/10000 [00:04<00:58, 158.58it/s]Running 10000 simulations.:   7%|▋         | 706/10000 [00:04<00:58, 158.90it/s]Running 10000 simulations.:   7%|▋         | 723/10000 [00:04<00:58, 159.33it/s]Running 10000 simulations.:   7%|▋         | 740/10000 [00:04<00:57, 159.66it/s]Running 10000 simulations.:   8%|▊         | 756/10000 [00:04<00:57, 159.69it/s]Running 10000 simulations.:   8%|▊         | 772/10000 [00:04<00:57, 159.24it/s]Running 10000 simulations.:   8%|▊         | 788/10000 [00:04<00:57, 159.02it/s]Running 10000 simulations.:   8%|▊         | 805/10000 [00:05<00:57, 159.48it/s]Running 10000 simulations.:   8%|▊         | 821/10000 [00:05<00:57, 159.34it/s]Running 10000 simulations.:   8%|▊         | 837/10000 [00:05<00:57, 159.35it/s]Running 10000 simulations.:   9%|▊         | 854/10000 [00:05<00:57, 159.78it/s]Running 10000 simulations.:   9%|▊         | 870/10000 [00:05<00:57, 159.80it/s]Running 10000 simulations.:   9%|▉         | 886/10000 [00:05<00:57, 159.56it/s]Running 10000 simulations.:   9%|▉         | 902/10000 [00:05<00:57, 159.49it/s]Running 10000 simulations.:   9%|▉         | 919/10000 [00:05<00:56, 159.67it/s]Running 10000 simulations.:   9%|▉         | 936/10000 [00:05<00:56, 160.01it/s]Running 10000 simulations.:  10%|▉         | 953/10000 [00:05<00:56, 160.64it/s]Running 10000 simulations.:  10%|▉         | 970/10000 [00:06<00:56, 160.65it/s]Running 10000 simulations.:  10%|▉         | 987/10000 [00:06<00:56, 160.39it/s]Running 10000 simulations.:  10%|█         | 1004/10000 [00:06<00:56, 160.34it/s]Running 10000 simulations.:  10%|█         | 1021/10000 [00:06<00:55, 160.74it/s]Running 10000 simulations.:  10%|█         | 1038/10000 [00:06<00:55, 160.82it/s]Running 10000 simulations.:  11%|█         | 1055/10000 [00:06<00:55, 160.57it/s]Running 10000 simulations.:  11%|█         | 1072/10000 [00:06<00:55, 160.18it/s]Running 10000 simulations.:  11%|█         | 1089/10000 [00:06<00:55, 159.79it/s]Running 10000 simulations.:  11%|█         | 1105/10000 [00:06<00:55, 159.35it/s]Running 10000 simulations.:  11%|█         | 1121/10000 [00:06<00:55, 159.22it/s]Running 10000 simulations.:  11%|█▏        | 1137/10000 [00:07<00:55, 158.79it/s]Running 10000 simulations.:  12%|█▏        | 1153/10000 [00:07<00:55, 158.65it/s]Running 10000 simulations.:  12%|█▏        | 1169/10000 [00:07<00:55, 158.85it/s]Running 10000 simulations.:  12%|█▏        | 1186/10000 [00:07<00:55, 159.44it/s]Running 10000 simulations.:  12%|█▏        | 1202/10000 [00:07<00:55, 159.13it/s]Running 10000 simulations.:  12%|█▏        | 1218/10000 [00:07<00:55, 159.34it/s]Running 10000 simulations.:  12%|█▏        | 1234/10000 [00:07<00:55, 159.18it/s]Running 10000 simulations.:  12%|█▎        | 1250/10000 [00:07<00:54, 159.11it/s]Running 10000 simulations.:  13%|█▎        | 1266/10000 [00:07<00:54, 158.90it/s]Running 10000 simulations.:  13%|█▎        | 1282/10000 [00:08<00:54, 158.86it/s]Running 10000 simulations.:  13%|█▎        | 1298/10000 [00:08<00:54, 158.96it/s]Running 10000 simulations.:  13%|█▎        | 1314/10000 [00:08<00:54, 158.75it/s]Running 10000 simulations.:  13%|█▎        | 1331/10000 [00:08<00:54, 159.36it/s]Running 10000 simulations.:  13%|█▎        | 1348/10000 [00:08<00:54, 159.70it/s]Running 10000 simulations.:  14%|█▎        | 1365/10000 [00:08<00:53, 160.09it/s]Running 10000 simulations.:  14%|█▍        | 1382/10000 [00:08<00:53, 160.45it/s]Running 10000 simulations.:  14%|█▍        | 1399/10000 [00:08<00:53, 160.19it/s]Running 10000 simulations.:  14%|█▍        | 1416/10000 [00:08<00:53, 160.29it/s]Running 10000 simulations.:  14%|█▍        | 1433/10000 [00:08<00:53, 160.60it/s]Running 10000 simulations.:  14%|█▍        | 1450/10000 [00:09<00:53, 160.95it/s]Running 10000 simulations.:  15%|█▍        | 1467/10000 [00:09<00:53, 160.52it/s]Running 10000 simulations.:  15%|█▍        | 1484/10000 [00:09<00:53, 160.33it/s]Running 10000 simulations.:  15%|█▌        | 1501/10000 [00:09<00:52, 160.50it/s]Running 10000 simulations.:  15%|█▌        | 1518/10000 [00:09<00:53, 159.91it/s]Running 10000 simulations.:  15%|█▌        | 1534/10000 [00:09<00:52, 159.85it/s]Running 10000 simulations.:  16%|█▌        | 1551/10000 [00:09<00:52, 160.16it/s]Running 10000 simulations.:  16%|█▌        | 1568/10000 [00:09<00:52, 160.15it/s]Running 10000 simulations.:  16%|█▌        | 1585/10000 [00:09<00:52, 159.73it/s]Running 10000 simulations.:  16%|█▌        | 1601/10000 [00:10<00:52, 159.40it/s]Running 10000 simulations.:  16%|█▌        | 1617/10000 [00:10<00:52, 159.44it/s]Running 10000 simulations.:  16%|█▋        | 1633/10000 [00:10<00:52, 159.55it/s]Running 10000 simulations.:  16%|█▋        | 1650/10000 [00:10<00:52, 159.92it/s]Running 10000 simulations.:  17%|█▋        | 1666/10000 [00:10<00:52, 159.53it/s]Running 10000 simulations.:  17%|█▋        | 1682/10000 [00:10<00:52, 159.54it/s]Running 10000 simulations.:  17%|█▋        | 1698/10000 [00:10<00:52, 159.29it/s]Running 10000 simulations.:  17%|█▋        | 1714/10000 [00:10<00:51, 159.35it/s]Running 10000 simulations.:  17%|█▋        | 1730/10000 [00:10<00:51, 159.31it/s]Running 10000 simulations.:  17%|█▋        | 1747/10000 [00:10<00:51, 159.95it/s]Running 10000 simulations.:  18%|█▊        | 1763/10000 [00:11<00:51, 159.91it/s]Running 10000 simulations.:  18%|█▊        | 1780/10000 [00:11<00:51, 160.01it/s]Running 10000 simulations.:  18%|█▊        | 1797/10000 [00:11<00:51, 159.63it/s]Running 10000 simulations.:  18%|█▊        | 1814/10000 [00:11<00:51, 159.77it/s]Running 10000 simulations.:  18%|█▊        | 1830/10000 [00:11<00:51, 159.58it/s]Running 10000 simulations.:  18%|█▊        | 1846/10000 [00:11<00:51, 159.34it/s]Running 10000 simulations.:  19%|█▊        | 1863/10000 [00:11<00:51, 159.53it/s]Running 10000 simulations.:  19%|█▉        | 1880/10000 [00:11<00:50, 159.63it/s]Running 10000 simulations.:  19%|█▉        | 1896/10000 [00:11<00:50, 159.41it/s]Running 10000 simulations.:  19%|█▉        | 1912/10000 [00:11<00:50, 159.47it/s]Running 10000 simulations.:  19%|█▉        | 1928/10000 [00:12<00:50, 159.29it/s]Running 10000 simulations.:  19%|█▉        | 1945/10000 [00:12<00:50, 159.49it/s]Running 10000 simulations.:  20%|█▉        | 1961/10000 [00:12<00:50, 159.43it/s]Running 10000 simulations.:  20%|█▉        | 1977/10000 [00:12<00:50, 159.29it/s]Running 10000 simulations.:  20%|█▉        | 1993/10000 [00:12<00:50, 159.05it/s]Running 10000 simulations.:  20%|██        | 2009/10000 [00:12<00:50, 159.27it/s]Running 10000 simulations.:  20%|██        | 2025/10000 [00:12<00:50, 158.82it/s]Running 10000 simulations.:  20%|██        | 2041/10000 [00:12<00:50, 158.92it/s]Running 10000 simulations.:  21%|██        | 2057/10000 [00:12<00:49, 158.91it/s]Running 10000 simulations.:  21%|██        | 2073/10000 [00:12<00:49, 158.87it/s]Running 10000 simulations.:  21%|██        | 2089/10000 [00:13<00:49, 158.58it/s]Running 10000 simulations.:  21%|██        | 2105/10000 [00:13<00:49, 158.43it/s]Running 10000 simulations.:  21%|██        | 2121/10000 [00:13<00:49, 158.77it/s]Running 10000 simulations.:  21%|██▏       | 2138/10000 [00:13<00:49, 159.42it/s]Running 10000 simulations.:  22%|██▏       | 2154/10000 [00:13<00:49, 159.31it/s]Running 10000 simulations.:  22%|██▏       | 2170/10000 [00:13<00:49, 158.27it/s]Running 10000 simulations.:  22%|██▏       | 2186/10000 [00:13<00:49, 157.79it/s]Running 10000 simulations.:  22%|██▏       | 2202/10000 [00:13<00:49, 158.00it/s]Running 10000 simulations.:  22%|██▏       | 2218/10000 [00:13<00:49, 157.80it/s]Running 10000 simulations.:  22%|██▏       | 2234/10000 [00:13<00:49, 157.90it/s]Running 10000 simulations.:  22%|██▎       | 2250/10000 [00:14<00:49, 157.86it/s]Running 10000 simulations.:  23%|██▎       | 2266/10000 [00:14<00:49, 156.44it/s]Running 10000 simulations.:  23%|██▎       | 2282/10000 [00:14<00:50, 154.29it/s]Running 10000 simulations.:  23%|██▎       | 2298/10000 [00:14<00:50, 152.89it/s]Running 10000 simulations.:  23%|██▎       | 2314/10000 [00:14<00:50, 151.90it/s]Running 10000 simulations.:  23%|██▎       | 2330/10000 [00:14<00:50, 150.42it/s]Running 10000 simulations.:  23%|██▎       | 2346/10000 [00:14<00:51, 149.18it/s]Running 10000 simulations.:  24%|██▎       | 2361/10000 [00:14<00:51, 148.91it/s]Running 10000 simulations.:  24%|██▍       | 2377/10000 [00:14<00:51, 149.27it/s]Running 10000 simulations.:  24%|██▍       | 2392/10000 [00:15<00:50, 149.34it/s]Running 10000 simulations.:  24%|██▍       | 2407/10000 [00:15<00:50, 149.22it/s]Running 10000 simulations.:  24%|██▍       | 2422/10000 [00:15<00:50, 148.83it/s]Running 10000 simulations.:  24%|██▍       | 2437/10000 [00:15<00:50, 149.13it/s]Running 10000 simulations.:  25%|██▍       | 2452/10000 [00:15<00:50, 149.15it/s]Running 10000 simulations.:  25%|██▍       | 2467/10000 [00:15<00:50, 148.45it/s]Running 10000 simulations.:  25%|██▍       | 2482/10000 [00:15<00:50, 147.97it/s]Running 10000 simulations.:  25%|██▍       | 2497/10000 [00:15<00:50, 147.26it/s]Running 10000 simulations.:  25%|██▌       | 2514/10000 [00:15<00:49, 151.61it/s]Running 10000 simulations.:  25%|██▌       | 2531/10000 [00:15<00:47, 155.79it/s]Running 10000 simulations.:  25%|██▌       | 2548/10000 [00:16<00:47, 157.73it/s]Running 10000 simulations.:  26%|██▌       | 2565/10000 [00:16<00:46, 158.30it/s]Running 10000 simulations.:  26%|██▌       | 2581/10000 [00:16<00:48, 154.38it/s]Running 10000 simulations.:  26%|██▌       | 2597/10000 [00:16<00:48, 152.11it/s]Running 10000 simulations.:  26%|██▌       | 2613/10000 [00:16<00:49, 150.65it/s]Running 10000 simulations.:  26%|██▋       | 2629/10000 [00:16<00:49, 149.78it/s]Running 10000 simulations.:  26%|██▋       | 2644/10000 [00:16<00:49, 149.03it/s]Running 10000 simulations.:  27%|██▋       | 2660/10000 [00:16<00:48, 150.07it/s]Running 10000 simulations.:  27%|██▋       | 2676/10000 [00:16<00:49, 148.91it/s]Running 10000 simulations.:  27%|██▋       | 2692/10000 [00:17<00:48, 149.93it/s]Running 10000 simulations.:  27%|██▋       | 2708/10000 [00:17<00:48, 150.54it/s]Running 10000 simulations.:  27%|██▋       | 2724/10000 [00:17<00:48, 150.65it/s]Running 10000 simulations.:  27%|██▋       | 2740/10000 [00:17<00:48, 150.18it/s]Running 10000 simulations.:  28%|██▊       | 2756/10000 [00:17<00:48, 149.85it/s]Running 10000 simulations.:  28%|██▊       | 2771/10000 [00:17<00:48, 149.84it/s]Running 10000 simulations.:  28%|██▊       | 2786/10000 [00:17<00:48, 149.50it/s]Running 10000 simulations.:  28%|██▊       | 2801/10000 [00:17<00:48, 149.02it/s]Running 10000 simulations.:  28%|██▊       | 2816/10000 [00:17<00:48, 148.61it/s]Running 10000 simulations.:  28%|██▊       | 2831/10000 [00:17<00:48, 148.78it/s]Running 10000 simulations.:  28%|██▊       | 2846/10000 [00:18<00:48, 149.00it/s]Running 10000 simulations.:  29%|██▊       | 2861/10000 [00:18<00:47, 148.89it/s]Running 10000 simulations.:  29%|██▉       | 2876/10000 [00:18<00:48, 148.04it/s]Running 10000 simulations.:  29%|██▉       | 2891/10000 [00:18<00:47, 148.42it/s]Running 10000 simulations.:  29%|██▉       | 2906/10000 [00:18<00:47, 148.28it/s]Running 10000 simulations.:  29%|██▉       | 2921/10000 [00:18<00:47, 148.15it/s]Running 10000 simulations.:  29%|██▉       | 2936/10000 [00:18<00:47, 147.98it/s]Running 10000 simulations.:  30%|██▉       | 2951/10000 [00:18<00:47, 148.09it/s]Running 10000 simulations.:  30%|██▉       | 2966/10000 [00:18<00:47, 148.18it/s]Running 10000 simulations.:  30%|██▉       | 2981/10000 [00:18<00:47, 148.42it/s]Running 10000 simulations.:  30%|██▉       | 2996/10000 [00:19<00:47, 148.78it/s]Running 10000 simulations.:  30%|███       | 3012/10000 [00:19<00:46, 149.46it/s]Running 10000 simulations.:  30%|███       | 3027/10000 [00:19<00:46, 149.32it/s]Running 10000 simulations.:  30%|███       | 3042/10000 [00:19<00:46, 149.32it/s]Running 10000 simulations.:  31%|███       | 3057/10000 [00:19<00:46, 149.13it/s]Running 10000 simulations.:  31%|███       | 3072/10000 [00:19<00:46, 148.85it/s]Running 10000 simulations.:  31%|███       | 3087/10000 [00:19<00:46, 148.45it/s]Running 10000 simulations.:  31%|███       | 3102/10000 [00:19<00:46, 148.61it/s]Running 10000 simulations.:  31%|███       | 3118/10000 [00:19<00:46, 149.05it/s]Running 10000 simulations.:  31%|███▏      | 3133/10000 [00:19<00:45, 149.29it/s]Running 10000 simulations.:  31%|███▏      | 3148/10000 [00:20<00:46, 148.82it/s]Running 10000 simulations.:  32%|███▏      | 3163/10000 [00:20<00:45, 148.80it/s]Running 10000 simulations.:  32%|███▏      | 3178/10000 [00:20<00:45, 148.59it/s]Running 10000 simulations.:  32%|███▏      | 3193/10000 [00:20<00:45, 148.62it/s]Running 10000 simulations.:  32%|███▏      | 3208/10000 [00:20<00:45, 148.45it/s]Running 10000 simulations.:  32%|███▏      | 3223/10000 [00:20<00:45, 148.29it/s]Running 10000 simulations.:  32%|███▏      | 3238/10000 [00:20<00:45, 148.74it/s]Running 10000 simulations.:  33%|███▎      | 3253/10000 [00:20<00:45, 148.66it/s]Running 10000 simulations.:  33%|███▎      | 3268/10000 [00:20<00:45, 148.12it/s]Running 10000 simulations.:  33%|███▎      | 3283/10000 [00:20<00:45, 147.98it/s]Running 10000 simulations.:  33%|███▎      | 3298/10000 [00:21<00:45, 147.72it/s]Running 10000 simulations.:  33%|███▎      | 3313/10000 [00:21<00:45, 148.23it/s]Running 10000 simulations.:  33%|███▎      | 3328/10000 [00:21<00:44, 148.48it/s]Running 10000 simulations.:  33%|███▎      | 3343/10000 [00:21<00:44, 147.96it/s]Running 10000 simulations.:  34%|███▎      | 3358/10000 [00:21<00:45, 146.21it/s]Running 10000 simulations.:  34%|███▎      | 3373/10000 [00:21<00:45, 147.15it/s]Running 10000 simulations.:  34%|███▍      | 3389/10000 [00:21<00:44, 148.10it/s]Running 10000 simulations.:  34%|███▍      | 3404/10000 [00:21<00:44, 148.56it/s]Running 10000 simulations.:  34%|███▍      | 3419/10000 [00:21<00:44, 148.66it/s]Running 10000 simulations.:  34%|███▍      | 3434/10000 [00:22<00:44, 148.56it/s]Running 10000 simulations.:  34%|███▍      | 3449/10000 [00:22<00:44, 148.57it/s]Running 10000 simulations.:  35%|███▍      | 3464/10000 [00:22<00:44, 148.41it/s]Running 10000 simulations.:  35%|███▍      | 3479/10000 [00:22<00:43, 148.54it/s]Running 10000 simulations.:  35%|███▍      | 3495/10000 [00:22<00:43, 149.36it/s]Running 10000 simulations.:  35%|███▌      | 3510/10000 [00:22<00:43, 149.34it/s]Running 10000 simulations.:  35%|███▌      | 3525/10000 [00:22<00:43, 148.70it/s]Running 10000 simulations.:  35%|███▌      | 3540/10000 [00:22<00:43, 148.52it/s]Running 10000 simulations.:  36%|███▌      | 3555/10000 [00:22<00:43, 148.56it/s]Running 10000 simulations.:  36%|███▌      | 3571/10000 [00:22<00:43, 148.97it/s]Running 10000 simulations.:  36%|███▌      | 3586/10000 [00:23<00:43, 148.98it/s]Running 10000 simulations.:  36%|███▌      | 3601/10000 [00:23<00:42, 149.20it/s]Running 10000 simulations.:  36%|███▌      | 3617/10000 [00:23<00:42, 149.60it/s]Running 10000 simulations.:  36%|███▋      | 3632/10000 [00:23<00:42, 149.08it/s]Running 10000 simulations.:  36%|███▋      | 3647/10000 [00:23<00:42, 148.29it/s]Running 10000 simulations.:  37%|███▋      | 3662/10000 [00:23<00:42, 148.58it/s]Running 10000 simulations.:  37%|███▋      | 3678/10000 [00:23<00:42, 149.02it/s]Running 10000 simulations.:  37%|███▋      | 3693/10000 [00:23<00:42, 148.61it/s]Running 10000 simulations.:  37%|███▋      | 3708/10000 [00:23<00:42, 147.52it/s]Running 10000 simulations.:  37%|███▋      | 3723/10000 [00:23<00:42, 147.74it/s]Running 10000 simulations.:  37%|███▋      | 3738/10000 [00:24<00:42, 148.02it/s]Running 10000 simulations.:  38%|███▊      | 3753/10000 [00:24<00:42, 148.17it/s]Running 10000 simulations.:  38%|███▊      | 3768/10000 [00:24<00:42, 148.14it/s]Running 10000 simulations.:  38%|███▊      | 3783/10000 [00:24<00:42, 147.85it/s]Running 10000 simulations.:  38%|███▊      | 3798/10000 [00:24<00:41, 148.05it/s]Running 10000 simulations.:  38%|███▊      | 3814/10000 [00:24<00:41, 148.64it/s]Running 10000 simulations.:  38%|███▊      | 3829/10000 [00:24<00:41, 148.80it/s]Running 10000 simulations.:  38%|███▊      | 3844/10000 [00:24<00:41, 149.02it/s]Running 10000 simulations.:  39%|███▊      | 3859/10000 [00:24<00:41, 149.26it/s]Running 10000 simulations.:  39%|███▉      | 3876/10000 [00:24<00:39, 153.97it/s]Running 10000 simulations.:  39%|███▉      | 3894/10000 [00:25<00:38, 158.56it/s]Running 10000 simulations.:  39%|███▉      | 3911/10000 [00:25<00:37, 161.32it/s]Running 10000 simulations.:  39%|███▉      | 3929/10000 [00:25<00:37, 163.89it/s]Running 10000 simulations.:  39%|███▉      | 3946/10000 [00:25<00:36, 164.89it/s]Running 10000 simulations.:  40%|███▉      | 3963/10000 [00:25<00:36, 165.04it/s]Running 10000 simulations.:  40%|███▉      | 3980/10000 [00:25<00:36, 164.50it/s]Running 10000 simulations.:  40%|███▉      | 3997/10000 [00:25<00:36, 163.94it/s]Running 10000 simulations.:  40%|████      | 4014/10000 [00:25<00:36, 163.44it/s]Running 10000 simulations.:  40%|████      | 4031/10000 [00:25<00:36, 162.74it/s]Running 10000 simulations.:  40%|████      | 4048/10000 [00:26<00:36, 162.43it/s]Running 10000 simulations.:  41%|████      | 4065/10000 [00:26<00:38, 153.76it/s]Running 10000 simulations.:  41%|████      | 4081/10000 [00:26<00:43, 136.62it/s]Running 10000 simulations.:  41%|████      | 4096/10000 [00:26<00:46, 127.09it/s]Running 10000 simulations.:  41%|████      | 4110/10000 [00:26<00:48, 121.05it/s]Running 10000 simulations.:  41%|████      | 4123/10000 [00:26<00:50, 116.60it/s]Running 10000 simulations.:  41%|████▏     | 4135/10000 [00:26<00:51, 114.90it/s]Running 10000 simulations.:  41%|████▏     | 4147/10000 [00:26<00:51, 113.46it/s]Running 10000 simulations.:  42%|████▏     | 4159/10000 [00:26<00:51, 112.93it/s]Running 10000 simulations.:  42%|████▏     | 4171/10000 [00:27<00:52, 112.04it/s]Running 10000 simulations.:  42%|████▏     | 4183/10000 [00:27<00:51, 111.97it/s]Running 10000 simulations.:  42%|████▏     | 4195/10000 [00:27<00:51, 112.27it/s]Running 10000 simulations.:  42%|████▏     | 4207/10000 [00:27<00:51, 111.52it/s]Running 10000 simulations.:  42%|████▏     | 4219/10000 [00:27<00:52, 110.83it/s]Running 10000 simulations.:  42%|████▏     | 4231/10000 [00:27<00:51, 111.09it/s]Running 10000 simulations.:  42%|████▏     | 4243/10000 [00:27<00:51, 111.25it/s]Running 10000 simulations.:  43%|████▎     | 4255/10000 [00:27<00:51, 111.18it/s]Running 10000 simulations.:  43%|████▎     | 4267/10000 [00:27<00:51, 111.14it/s]Running 10000 simulations.:  43%|████▎     | 4279/10000 [00:28<00:51, 111.37it/s]Running 10000 simulations.:  43%|████▎     | 4291/10000 [00:28<00:51, 111.43it/s]Running 10000 simulations.:  43%|████▎     | 4303/10000 [00:28<00:51, 111.44it/s]Running 10000 simulations.:  43%|████▎     | 4315/10000 [00:28<00:51, 109.50it/s]Running 10000 simulations.:  43%|████▎     | 4326/10000 [00:28<00:52, 108.88it/s]Running 10000 simulations.:  43%|████▎     | 4337/10000 [00:28<00:52, 108.31it/s]Running 10000 simulations.:  43%|████▎     | 4348/10000 [00:28<00:52, 106.88it/s]Running 10000 simulations.:  44%|████▎     | 4359/10000 [00:28<00:53, 104.89it/s]Running 10000 simulations.:  44%|████▎     | 4371/10000 [00:28<00:52, 106.67it/s]Running 10000 simulations.:  44%|████▍     | 4383/10000 [00:29<00:51, 109.74it/s]Running 10000 simulations.:  44%|████▍     | 4396/10000 [00:29<00:48, 114.86it/s]Running 10000 simulations.:  44%|████▍     | 4409/10000 [00:29<00:47, 118.59it/s]Running 10000 simulations.:  44%|████▍     | 4423/10000 [00:29<00:45, 121.80it/s]Running 10000 simulations.:  44%|████▍     | 4436/10000 [00:29<00:44, 123.89it/s]Running 10000 simulations.:  44%|████▍     | 4449/10000 [00:29<00:44, 125.30it/s]Running 10000 simulations.:  45%|████▍     | 4462/10000 [00:29<00:43, 126.20it/s]Running 10000 simulations.:  45%|████▍     | 4475/10000 [00:29<00:43, 126.49it/s]Running 10000 simulations.:  45%|████▍     | 4489/10000 [00:29<00:43, 127.88it/s]Running 10000 simulations.:  45%|████▌     | 4503/10000 [00:29<00:42, 128.89it/s]Running 10000 simulations.:  45%|████▌     | 4516/10000 [00:30<00:42, 129.17it/s]Running 10000 simulations.:  45%|████▌     | 4530/10000 [00:30<00:42, 129.61it/s]Running 10000 simulations.:  45%|████▌     | 4544/10000 [00:30<00:41, 130.20it/s]Running 10000 simulations.:  46%|████▌     | 4558/10000 [00:30<00:41, 130.46it/s]Running 10000 simulations.:  46%|████▌     | 4572/10000 [00:30<00:41, 130.61it/s]Running 10000 simulations.:  46%|████▌     | 4586/10000 [00:30<00:41, 130.46it/s]Running 10000 simulations.:  46%|████▌     | 4600/10000 [00:30<00:41, 130.24it/s]Running 10000 simulations.:  46%|████▌     | 4614/10000 [00:30<00:41, 130.42it/s]Running 10000 simulations.:  46%|████▋     | 4628/10000 [00:30<00:41, 129.56it/s]Running 10000 simulations.:  46%|████▋     | 4641/10000 [00:31<00:41, 129.61it/s]Running 10000 simulations.:  47%|████▋     | 4654/10000 [00:31<00:41, 129.56it/s]Running 10000 simulations.:  47%|████▋     | 4668/10000 [00:31<00:41, 129.74it/s]Running 10000 simulations.:  47%|████▋     | 4681/10000 [00:31<00:41, 129.73it/s]Running 10000 simulations.:  47%|████▋     | 4694/10000 [00:31<00:40, 129.74it/s]Running 10000 simulations.:  47%|████▋     | 4708/10000 [00:31<00:40, 130.25it/s]Running 10000 simulations.:  47%|████▋     | 4722/10000 [00:31<00:40, 130.06it/s]Running 10000 simulations.:  47%|████▋     | 4736/10000 [00:31<00:40, 130.01it/s]Running 10000 simulations.:  48%|████▊     | 4750/10000 [00:31<00:40, 129.93it/s]Running 10000 simulations.:  48%|████▊     | 4764/10000 [00:31<00:40, 130.11it/s]Running 10000 simulations.:  48%|████▊     | 4778/10000 [00:32<00:40, 129.83it/s]Running 10000 simulations.:  48%|████▊     | 4792/10000 [00:32<00:40, 129.95it/s]Running 10000 simulations.:  48%|████▊     | 4806/10000 [00:32<00:39, 130.18it/s]Running 10000 simulations.:  48%|████▊     | 4820/10000 [00:32<00:39, 130.18it/s]Running 10000 simulations.:  48%|████▊     | 4834/10000 [00:32<00:39, 130.16it/s]Running 10000 simulations.:  48%|████▊     | 4848/10000 [00:32<00:39, 130.34it/s]Running 10000 simulations.:  49%|████▊     | 4862/10000 [00:32<00:39, 130.61it/s]Running 10000 simulations.:  49%|████▉     | 4876/10000 [00:32<00:39, 130.61it/s]Running 10000 simulations.:  49%|████▉     | 4890/10000 [00:32<00:39, 130.31it/s]Running 10000 simulations.:  49%|████▉     | 4904/10000 [00:33<00:39, 130.33it/s]Running 10000 simulations.:  49%|████▉     | 4918/10000 [00:33<00:40, 125.29it/s]Running 10000 simulations.:  49%|████▉     | 4932/10000 [00:33<00:39, 126.82it/s]Running 10000 simulations.:  49%|████▉     | 4946/10000 [00:33<00:39, 128.20it/s]Running 10000 simulations.:  50%|████▉     | 4960/10000 [00:33<00:39, 129.09it/s]Running 10000 simulations.:  50%|████▉     | 4974/10000 [00:33<00:38, 129.44it/s]Running 10000 simulations.:  50%|████▉     | 4988/10000 [00:33<00:38, 129.71it/s]Running 10000 simulations.:  50%|█████     | 5002/10000 [00:33<00:38, 130.06it/s]Running 10000 simulations.:  50%|█████     | 5016/10000 [00:33<00:38, 130.66it/s]Running 10000 simulations.:  50%|█████     | 5030/10000 [00:34<00:37, 130.94it/s]Running 10000 simulations.:  50%|█████     | 5044/10000 [00:34<00:37, 130.87it/s]Running 10000 simulations.:  51%|█████     | 5058/10000 [00:34<00:37, 130.64it/s]Running 10000 simulations.:  51%|█████     | 5072/10000 [00:34<00:37, 131.01it/s]Running 10000 simulations.:  51%|█████     | 5086/10000 [00:34<00:37, 131.31it/s]Running 10000 simulations.:  51%|█████     | 5100/10000 [00:34<00:37, 131.33it/s]Running 10000 simulations.:  51%|█████     | 5114/10000 [00:34<00:37, 131.28it/s]Running 10000 simulations.:  51%|█████▏    | 5128/10000 [00:34<00:37, 131.16it/s]Running 10000 simulations.:  51%|█████▏    | 5142/10000 [00:34<00:37, 131.23it/s]Running 10000 simulations.:  52%|█████▏    | 5156/10000 [00:34<00:36, 131.32it/s]Running 10000 simulations.:  52%|█████▏    | 5170/10000 [00:35<00:36, 131.34it/s]Running 10000 simulations.:  52%|█████▏    | 5184/10000 [00:35<00:36, 131.16it/s]Running 10000 simulations.:  52%|█████▏    | 5198/10000 [00:35<00:36, 131.27it/s]Running 10000 simulations.:  52%|█████▏    | 5212/10000 [00:35<00:36, 131.28it/s]Running 10000 simulations.:  52%|█████▏    | 5226/10000 [00:35<00:36, 130.94it/s]Running 10000 simulations.:  52%|█████▏    | 5240/10000 [00:35<00:36, 130.53it/s]Running 10000 simulations.:  53%|█████▎    | 5254/10000 [00:35<00:36, 130.45it/s]Running 10000 simulations.:  53%|█████▎    | 5268/10000 [00:35<00:36, 130.39it/s]Running 10000 simulations.:  53%|█████▎    | 5282/10000 [00:35<00:36, 130.52it/s]Running 10000 simulations.:  53%|█████▎    | 5296/10000 [00:36<00:35, 130.91it/s]Running 10000 simulations.:  53%|█████▎    | 5310/10000 [00:36<00:35, 130.96it/s]Running 10000 simulations.:  53%|█████▎    | 5324/10000 [00:36<00:35, 130.72it/s]Running 10000 simulations.:  53%|█████▎    | 5338/10000 [00:36<00:35, 130.53it/s]Running 10000 simulations.:  54%|█████▎    | 5352/10000 [00:36<00:35, 130.75it/s]Running 10000 simulations.:  54%|█████▎    | 5366/10000 [00:36<00:35, 130.40it/s]Running 10000 simulations.:  54%|█████▍    | 5380/10000 [00:36<00:35, 130.71it/s]Running 10000 simulations.:  54%|█████▍    | 5394/10000 [00:36<00:35, 131.12it/s]Running 10000 simulations.:  54%|█████▍    | 5408/10000 [00:36<00:34, 131.26it/s]Running 10000 simulations.:  54%|█████▍    | 5422/10000 [00:37<00:34, 131.24it/s]Running 10000 simulations.:  54%|█████▍    | 5436/10000 [00:37<00:34, 130.60it/s]Running 10000 simulations.:  55%|█████▍    | 5450/10000 [00:37<00:34, 130.34it/s]Running 10000 simulations.:  55%|█████▍    | 5464/10000 [00:37<00:34, 130.99it/s]Running 10000 simulations.:  55%|█████▍    | 5478/10000 [00:37<00:34, 131.64it/s]Running 10000 simulations.:  55%|█████▍    | 5492/10000 [00:37<00:34, 132.03it/s]Running 10000 simulations.:  55%|█████▌    | 5506/10000 [00:37<00:34, 130.38it/s]Running 10000 simulations.:  55%|█████▌    | 5520/10000 [00:37<00:34, 130.94it/s]Running 10000 simulations.:  55%|█████▌    | 5534/10000 [00:37<00:34, 131.20it/s]Running 10000 simulations.:  55%|█████▌    | 5548/10000 [00:37<00:33, 130.98it/s]Running 10000 simulations.:  56%|█████▌    | 5562/10000 [00:38<00:34, 129.05it/s]Running 10000 simulations.:  56%|█████▌    | 5575/10000 [00:38<00:34, 129.29it/s]Running 10000 simulations.:  56%|█████▌    | 5589/10000 [00:38<00:33, 129.80it/s]Running 10000 simulations.:  56%|█████▌    | 5602/10000 [00:38<00:33, 129.85it/s]Running 10000 simulations.:  56%|█████▌    | 5615/10000 [00:38<00:34, 128.92it/s]Running 10000 simulations.:  56%|█████▋    | 5629/10000 [00:38<00:33, 129.82it/s]Running 10000 simulations.:  56%|█████▋    | 5643/10000 [00:38<00:33, 130.53it/s]Running 10000 simulations.:  57%|█████▋    | 5657/10000 [00:38<00:33, 131.05it/s]Running 10000 simulations.:  57%|█████▋    | 5671/10000 [00:38<00:33, 130.02it/s]Running 10000 simulations.:  57%|█████▋    | 5685/10000 [00:39<00:33, 130.15it/s]Running 10000 simulations.:  57%|█████▋    | 5699/10000 [00:39<00:33, 129.95it/s]Running 10000 simulations.:  57%|█████▋    | 5713/10000 [00:39<00:32, 130.72it/s]Running 10000 simulations.:  57%|█████▋    | 5727/10000 [00:39<00:32, 131.36it/s]Running 10000 simulations.:  57%|█████▋    | 5741/10000 [00:39<00:32, 131.40it/s]Running 10000 simulations.:  58%|█████▊    | 5755/10000 [00:39<00:32, 130.28it/s]Running 10000 simulations.:  58%|█████▊    | 5769/10000 [00:39<00:32, 130.50it/s]Running 10000 simulations.:  58%|█████▊    | 5783/10000 [00:39<00:32, 130.86it/s]Running 10000 simulations.:  58%|█████▊    | 5797/10000 [00:39<00:32, 130.88it/s]Running 10000 simulations.:  58%|█████▊    | 5811/10000 [00:39<00:32, 129.82it/s]Running 10000 simulations.:  58%|█████▊    | 5825/10000 [00:40<00:32, 130.12it/s]Running 10000 simulations.:  58%|█████▊    | 5839/10000 [00:40<00:31, 130.32it/s]Running 10000 simulations.:  59%|█████▊    | 5853/10000 [00:40<00:31, 130.40it/s]Running 10000 simulations.:  59%|█████▊    | 5867/10000 [00:40<00:31, 129.72it/s]Running 10000 simulations.:  59%|█████▉    | 5880/10000 [00:40<00:31, 129.75it/s]Running 10000 simulations.:  59%|█████▉    | 5894/10000 [00:40<00:31, 130.01it/s]Running 10000 simulations.:  59%|█████▉    | 5908/10000 [00:40<00:31, 130.26it/s]Running 10000 simulations.:  59%|█████▉    | 5922/10000 [00:40<00:31, 129.30it/s]Running 10000 simulations.:  59%|█████▉    | 5935/10000 [00:40<00:31, 129.48it/s]Running 10000 simulations.:  59%|█████▉    | 5948/10000 [00:41<00:31, 129.62it/s]Running 10000 simulations.:  60%|█████▉    | 5962/10000 [00:41<00:30, 130.44it/s]Running 10000 simulations.:  60%|█████▉    | 5976/10000 [00:41<00:30, 131.20it/s]Running 10000 simulations.:  60%|█████▉    | 5993/10000 [00:41<00:28, 139.29it/s]Running 10000 simulations.:  60%|██████    | 6011/10000 [00:41<00:26, 147.83it/s]Running 10000 simulations.:  60%|██████    | 6028/10000 [00:41<00:25, 152.91it/s]Running 10000 simulations.:  60%|██████    | 6045/10000 [00:41<00:25, 155.21it/s]Running 10000 simulations.:  61%|██████    | 6062/10000 [00:41<00:25, 156.91it/s]Running 10000 simulations.:  61%|██████    | 6079/10000 [00:41<00:24, 158.64it/s]Running 10000 simulations.:  61%|██████    | 6096/10000 [00:41<00:24, 160.66it/s]Running 10000 simulations.:  61%|██████    | 6113/10000 [00:42<00:24, 160.85it/s]Running 10000 simulations.:  61%|██████▏   | 6130/10000 [00:42<00:23, 161.31it/s]Running 10000 simulations.:  61%|██████▏   | 6147/10000 [00:42<00:23, 162.58it/s]Running 10000 simulations.:  62%|██████▏   | 6164/10000 [00:42<00:23, 162.69it/s]Running 10000 simulations.:  62%|██████▏   | 6181/10000 [00:42<00:23, 162.98it/s]Running 10000 simulations.:  62%|██████▏   | 6198/10000 [00:42<00:23, 163.36it/s]Running 10000 simulations.:  62%|██████▏   | 6215/10000 [00:42<00:23, 163.84it/s]Running 10000 simulations.:  62%|██████▏   | 6232/10000 [00:42<00:23, 161.67it/s]Running 10000 simulations.:  62%|██████▏   | 6249/10000 [00:42<00:23, 162.64it/s]Running 10000 simulations.:  63%|██████▎   | 6266/10000 [00:43<00:22, 163.14it/s]Running 10000 simulations.:  63%|██████▎   | 6283/10000 [00:43<00:22, 163.80it/s]Running 10000 simulations.:  63%|██████▎   | 6300/10000 [00:43<00:22, 162.35it/s]Running 10000 simulations.:  63%|██████▎   | 6317/10000 [00:43<00:22, 162.90it/s]Running 10000 simulations.:  63%|██████▎   | 6334/10000 [00:43<00:22, 163.33it/s]Running 10000 simulations.:  64%|██████▎   | 6351/10000 [00:43<00:22, 163.39it/s]Running 10000 simulations.:  64%|██████▎   | 6368/10000 [00:43<00:22, 161.72it/s]Running 10000 simulations.:  64%|██████▍   | 6385/10000 [00:43<00:22, 162.01it/s]Running 10000 simulations.:  64%|██████▍   | 6402/10000 [00:43<00:22, 162.31it/s]Running 10000 simulations.:  64%|██████▍   | 6419/10000 [00:43<00:22, 162.68it/s]Running 10000 simulations.:  64%|██████▍   | 6436/10000 [00:44<00:22, 161.09it/s]Running 10000 simulations.:  65%|██████▍   | 6453/10000 [00:44<00:21, 161.55it/s]Running 10000 simulations.:  65%|██████▍   | 6470/10000 [00:44<00:21, 162.51it/s]Running 10000 simulations.:  65%|██████▍   | 6487/10000 [00:44<00:21, 163.04it/s]Running 10000 simulations.:  65%|██████▌   | 6504/10000 [00:44<00:21, 162.01it/s]Running 10000 simulations.:  65%|██████▌   | 6521/10000 [00:44<00:21, 162.58it/s]Running 10000 simulations.:  65%|██████▌   | 6538/10000 [00:44<00:21, 163.90it/s]Running 10000 simulations.:  66%|██████▌   | 6555/10000 [00:44<00:21, 163.95it/s]Running 10000 simulations.:  66%|██████▌   | 6572/10000 [00:44<00:21, 162.44it/s]Running 10000 simulations.:  66%|██████▌   | 6589/10000 [00:45<00:21, 162.10it/s]Running 10000 simulations.:  66%|██████▌   | 6606/10000 [00:45<00:20, 162.61it/s]Running 10000 simulations.:  66%|██████▌   | 6623/10000 [00:45<00:20, 163.59it/s]Running 10000 simulations.:  66%|██████▋   | 6640/10000 [00:45<00:20, 164.12it/s]Running 10000 simulations.:  67%|██████▋   | 6657/10000 [00:45<00:20, 162.86it/s]Running 10000 simulations.:  67%|██████▋   | 6674/10000 [00:45<00:20, 163.36it/s]Running 10000 simulations.:  67%|██████▋   | 6691/10000 [00:45<00:20, 163.39it/s]Running 10000 simulations.:  67%|██████▋   | 6708/10000 [00:45<00:20, 164.24it/s]Running 10000 simulations.:  67%|██████▋   | 6725/10000 [00:45<00:20, 159.71it/s]Running 10000 simulations.:  67%|██████▋   | 6742/10000 [00:45<00:20, 157.04it/s]Running 10000 simulations.:  68%|██████▊   | 6758/10000 [00:46<00:20, 155.94it/s]Running 10000 simulations.:  68%|██████▊   | 6774/10000 [00:46<00:20, 155.72it/s]Running 10000 simulations.:  68%|██████▊   | 6790/10000 [00:46<00:20, 156.91it/s]Running 10000 simulations.:  68%|██████▊   | 6806/10000 [00:46<00:20, 157.76it/s]Running 10000 simulations.:  68%|██████▊   | 6822/10000 [00:46<00:20, 156.91it/s]Running 10000 simulations.:  68%|██████▊   | 6839/10000 [00:46<00:19, 159.50it/s]Running 10000 simulations.:  69%|██████▊   | 6856/10000 [00:46<00:19, 161.37it/s]Running 10000 simulations.:  69%|██████▊   | 6873/10000 [00:46<00:19, 162.99it/s]Running 10000 simulations.:  69%|██████▉   | 6890/10000 [00:46<00:19, 161.73it/s]Running 10000 simulations.:  69%|██████▉   | 6907/10000 [00:47<00:19, 162.63it/s]Running 10000 simulations.:  69%|██████▉   | 6924/10000 [00:47<00:18, 163.39it/s]Running 10000 simulations.:  69%|██████▉   | 6941/10000 [00:47<00:18, 164.36it/s]Running 10000 simulations.:  70%|██████▉   | 6958/10000 [00:47<00:18, 163.17it/s]Running 10000 simulations.:  70%|██████▉   | 6975/10000 [00:47<00:18, 163.55it/s]Running 10000 simulations.:  70%|██████▉   | 6992/10000 [00:47<00:18, 164.28it/s]Running 10000 simulations.:  70%|███████   | 7009/10000 [00:47<00:18, 164.26it/s]Running 10000 simulations.:  70%|███████   | 7026/10000 [00:47<00:18, 162.33it/s]Running 10000 simulations.:  70%|███████   | 7043/10000 [00:47<00:18, 161.93it/s]Running 10000 simulations.:  71%|███████   | 7060/10000 [00:47<00:18, 163.03it/s]Running 10000 simulations.:  71%|███████   | 7077/10000 [00:48<00:17, 163.79it/s]Running 10000 simulations.:  71%|███████   | 7094/10000 [00:48<00:17, 164.40it/s]Running 10000 simulations.:  71%|███████   | 7111/10000 [00:48<00:17, 162.27it/s]Running 10000 simulations.:  71%|███████▏  | 7128/10000 [00:48<00:17, 162.59it/s]Running 10000 simulations.:  71%|███████▏  | 7145/10000 [00:48<00:17, 163.36it/s]Running 10000 simulations.:  72%|███████▏  | 7162/10000 [00:48<00:17, 164.00it/s]Running 10000 simulations.:  72%|███████▏  | 7179/10000 [00:48<00:17, 162.13it/s]Running 10000 simulations.:  72%|███████▏  | 7196/10000 [00:48<00:17, 162.73it/s]Running 10000 simulations.:  72%|███████▏  | 7213/10000 [00:48<00:17, 163.41it/s]Running 10000 simulations.:  72%|███████▏  | 7230/10000 [00:48<00:16, 164.16it/s]Running 10000 simulations.:  72%|███████▏  | 7247/10000 [00:49<00:16, 162.17it/s]Running 10000 simulations.:  73%|███████▎  | 7264/10000 [00:49<00:16, 163.07it/s]Running 10000 simulations.:  73%|███████▎  | 7281/10000 [00:49<00:16, 162.98it/s]Running 10000 simulations.:  73%|███████▎  | 7298/10000 [00:49<00:16, 162.11it/s]Running 10000 simulations.:  73%|███████▎  | 7315/10000 [00:49<00:16, 162.56it/s]Running 10000 simulations.:  73%|███████▎  | 7332/10000 [00:49<00:16, 163.27it/s]Running 10000 simulations.:  73%|███████▎  | 7349/10000 [00:49<00:16, 162.42it/s]Running 10000 simulations.:  74%|███████▎  | 7366/10000 [00:49<00:16, 162.48it/s]Running 10000 simulations.:  74%|███████▍  | 7383/10000 [00:49<00:16, 163.35it/s]Running 10000 simulations.:  74%|███████▍  | 7400/10000 [00:50<00:15, 164.06it/s]Running 10000 simulations.:  74%|███████▍  | 7417/10000 [00:50<00:15, 164.14it/s]Running 10000 simulations.:  74%|███████▍  | 7434/10000 [00:50<00:15, 162.43it/s]Running 10000 simulations.:  75%|███████▍  | 7451/10000 [00:50<00:15, 160.23it/s]Running 10000 simulations.:  75%|███████▍  | 7468/10000 [00:50<00:15, 158.37it/s]Running 10000 simulations.:  75%|███████▍  | 7484/10000 [00:50<00:15, 158.47it/s]Running 10000 simulations.:  75%|███████▌  | 7500/10000 [00:50<00:16, 155.10it/s]Running 10000 simulations.:  75%|███████▌  | 7516/10000 [00:50<00:16, 153.74it/s]Running 10000 simulations.:  75%|███████▌  | 7532/10000 [00:50<00:16, 153.14it/s]Running 10000 simulations.:  75%|███████▌  | 7548/10000 [00:50<00:16, 152.38it/s]Running 10000 simulations.:  76%|███████▌  | 7565/10000 [00:51<00:15, 155.11it/s]Running 10000 simulations.:  76%|███████▌  | 7581/10000 [00:51<00:15, 156.37it/s]Running 10000 simulations.:  76%|███████▌  | 7597/10000 [00:51<00:15, 154.31it/s]Running 10000 simulations.:  76%|███████▌  | 7613/10000 [00:51<00:15, 152.43it/s]Running 10000 simulations.:  76%|███████▋  | 7629/10000 [00:51<00:15, 152.74it/s]Running 10000 simulations.:  76%|███████▋  | 7645/10000 [00:51<00:15, 152.41it/s]Running 10000 simulations.:  77%|███████▋  | 7661/10000 [00:51<00:15, 153.17it/s]Running 10000 simulations.:  77%|███████▋  | 7677/10000 [00:51<00:15, 152.10it/s]Running 10000 simulations.:  77%|███████▋  | 7693/10000 [00:51<00:15, 152.73it/s]Running 10000 simulations.:  77%|███████▋  | 7709/10000 [00:52<00:14, 152.99it/s]Running 10000 simulations.:  77%|███████▋  | 7725/10000 [00:52<00:14, 151.69it/s]Running 10000 simulations.:  77%|███████▋  | 7741/10000 [00:52<00:14, 150.73it/s]Running 10000 simulations.:  78%|███████▊  | 7757/10000 [00:52<00:14, 151.25it/s]Running 10000 simulations.:  78%|███████▊  | 7773/10000 [00:52<00:14, 151.55it/s]Running 10000 simulations.:  78%|███████▊  | 7789/10000 [00:52<00:14, 151.06it/s]Running 10000 simulations.:  78%|███████▊  | 7805/10000 [00:52<00:14, 150.02it/s]Running 10000 simulations.:  78%|███████▊  | 7821/10000 [00:52<00:14, 151.14it/s]Running 10000 simulations.:  78%|███████▊  | 7837/10000 [00:52<00:14, 149.07it/s]Running 10000 simulations.:  79%|███████▊  | 7853/10000 [00:52<00:14, 150.20it/s]Running 10000 simulations.:  79%|███████▊  | 7869/10000 [00:53<00:14, 149.42it/s]Running 10000 simulations.:  79%|███████▉  | 7885/10000 [00:53<00:14, 150.63it/s]Running 10000 simulations.:  79%|███████▉  | 7901/10000 [00:53<00:13, 150.57it/s]Running 10000 simulations.:  79%|███████▉  | 7917/10000 [00:53<00:13, 151.16it/s]Running 10000 simulations.:  79%|███████▉  | 7933/10000 [00:53<00:13, 151.68it/s]Running 10000 simulations.:  79%|███████▉  | 7949/10000 [00:53<00:13, 151.60it/s]Running 10000 simulations.:  80%|███████▉  | 7965/10000 [00:53<00:13, 150.45it/s]Running 10000 simulations.:  80%|███████▉  | 7981/10000 [00:53<00:13, 150.44it/s]Running 10000 simulations.:  80%|███████▉  | 7997/10000 [00:53<00:13, 150.98it/s]Running 10000 simulations.:  80%|████████  | 8013/10000 [00:54<00:13, 151.36it/s]Running 10000 simulations.:  80%|████████  | 8029/10000 [00:54<00:13, 149.14it/s]Running 10000 simulations.:  80%|████████  | 8045/10000 [00:54<00:13, 150.10it/s]Running 10000 simulations.:  81%|████████  | 8061/10000 [00:54<00:12, 150.80it/s]Running 10000 simulations.:  81%|████████  | 8077/10000 [00:54<00:12, 150.73it/s]Running 10000 simulations.:  81%|████████  | 8093/10000 [00:54<00:12, 151.58it/s]Running 10000 simulations.:  81%|████████  | 8109/10000 [00:54<00:12, 152.06it/s]Running 10000 simulations.:  81%|████████▏ | 8125/10000 [00:54<00:12, 152.68it/s]Running 10000 simulations.:  81%|████████▏ | 8141/10000 [00:54<00:12, 150.99it/s]Running 10000 simulations.:  82%|████████▏ | 8157/10000 [00:54<00:12, 151.69it/s]Running 10000 simulations.:  82%|████████▏ | 8173/10000 [00:55<00:12, 150.08it/s]Running 10000 simulations.:  82%|████████▏ | 8189/10000 [00:55<00:12, 150.76it/s]Running 10000 simulations.:  82%|████████▏ | 8205/10000 [00:55<00:11, 150.77it/s]Running 10000 simulations.:  82%|████████▏ | 8221/10000 [00:55<00:11, 151.21it/s]Running 10000 simulations.:  82%|████████▏ | 8237/10000 [00:55<00:11, 151.11it/s]Running 10000 simulations.:  83%|████████▎ | 8253/10000 [00:55<00:11, 150.49it/s]Running 10000 simulations.:  83%|████████▎ | 8269/10000 [00:55<00:11, 151.17it/s]Running 10000 simulations.:  83%|████████▎ | 8285/10000 [00:55<00:11, 150.81it/s]Running 10000 simulations.:  83%|████████▎ | 8301/10000 [00:55<00:11, 150.36it/s]Running 10000 simulations.:  83%|████████▎ | 8317/10000 [00:56<00:11, 150.29it/s]Running 10000 simulations.:  83%|████████▎ | 8333/10000 [00:56<00:11, 150.56it/s]Running 10000 simulations.:  83%|████████▎ | 8349/10000 [00:56<00:10, 151.02it/s]Running 10000 simulations.:  84%|████████▎ | 8365/10000 [00:56<00:10, 150.35it/s]Running 10000 simulations.:  84%|████████▍ | 8381/10000 [00:56<00:10, 150.89it/s]Running 10000 simulations.:  84%|████████▍ | 8397/10000 [00:56<00:10, 150.41it/s]Running 10000 simulations.:  84%|████████▍ | 8413/10000 [00:56<00:10, 150.41it/s]Running 10000 simulations.:  84%|████████▍ | 8429/10000 [00:56<00:10, 149.62it/s]Running 10000 simulations.:  84%|████████▍ | 8445/10000 [00:56<00:10, 150.40it/s]Running 10000 simulations.:  85%|████████▍ | 8461/10000 [00:57<00:10, 151.21it/s]Running 10000 simulations.:  85%|████████▍ | 8477/10000 [00:57<00:10, 149.38it/s]Running 10000 simulations.:  85%|████████▍ | 8492/10000 [00:57<00:10, 149.28it/s]Running 10000 simulations.:  85%|████████▌ | 8508/10000 [00:57<00:09, 150.46it/s]Running 10000 simulations.:  85%|████████▌ | 8524/10000 [00:57<00:09, 151.33it/s]Running 10000 simulations.:  85%|████████▌ | 8540/10000 [00:57<00:09, 150.99it/s]Running 10000 simulations.:  86%|████████▌ | 8556/10000 [00:57<00:09, 149.76it/s]Running 10000 simulations.:  86%|████████▌ | 8572/10000 [00:57<00:09, 150.67it/s]Running 10000 simulations.:  86%|████████▌ | 8588/10000 [00:57<00:09, 149.60it/s]Running 10000 simulations.:  86%|████████▌ | 8604/10000 [00:57<00:09, 149.56it/s]Running 10000 simulations.:  86%|████████▌ | 8619/10000 [00:58<00:09, 147.82it/s]Running 10000 simulations.:  86%|████████▋ | 8635/10000 [00:58<00:09, 149.23it/s]Running 10000 simulations.:  87%|████████▋ | 8651/10000 [00:58<00:08, 150.29it/s]Running 10000 simulations.:  87%|████████▋ | 8667/10000 [00:58<00:09, 136.50it/s]Running 10000 simulations.:  87%|████████▋ | 8681/10000 [00:58<00:10, 125.65it/s]Running 10000 simulations.:  87%|████████▋ | 8694/10000 [00:58<00:11, 118.07it/s]Running 10000 simulations.:  87%|████████▋ | 8707/10000 [00:58<00:11, 115.05it/s]Running 10000 simulations.:  87%|████████▋ | 8719/10000 [00:58<00:11, 111.57it/s]Running 10000 simulations.:  87%|████████▋ | 8731/10000 [00:59<00:11, 108.96it/s]Running 10000 simulations.:  87%|████████▋ | 8743/10000 [00:59<00:11, 106.08it/s]Running 10000 simulations.:  88%|████████▊ | 8754/10000 [00:59<00:11, 106.56it/s]Running 10000 simulations.:  88%|████████▊ | 8765/10000 [00:59<00:11, 106.36it/s]Running 10000 simulations.:  88%|████████▊ | 8776/10000 [00:59<00:11, 106.02it/s]Running 10000 simulations.:  88%|████████▊ | 8787/10000 [00:59<00:11, 106.35it/s]Running 10000 simulations.:  88%|████████▊ | 8798/10000 [00:59<00:11, 107.01it/s]Running 10000 simulations.:  88%|████████▊ | 8809/10000 [00:59<00:11, 104.70it/s]Running 10000 simulations.:  88%|████████▊ | 8820/10000 [00:59<00:11, 105.68it/s]Running 10000 simulations.:  88%|████████▊ | 8832/10000 [00:59<00:10, 107.09it/s]Running 10000 simulations.:  88%|████████▊ | 8844/10000 [01:00<00:10, 109.34it/s]Running 10000 simulations.:  89%|████████▊ | 8860/10000 [01:00<00:09, 119.82it/s]Running 10000 simulations.:  89%|████████▉ | 8876/10000 [01:00<00:08, 129.55it/s]Running 10000 simulations.:  89%|████████▉ | 8892/10000 [01:00<00:08, 137.10it/s]Running 10000 simulations.:  89%|████████▉ | 8908/10000 [01:00<00:07, 143.15it/s]Running 10000 simulations.:  89%|████████▉ | 8924/10000 [01:00<00:07, 145.97it/s]Running 10000 simulations.:  89%|████████▉ | 8940/10000 [01:00<00:07, 149.25it/s]Running 10000 simulations.:  90%|████████▉ | 8956/10000 [01:00<00:06, 152.00it/s]Running 10000 simulations.:  90%|████████▉ | 8972/10000 [01:00<00:06, 154.25it/s]Running 10000 simulations.:  90%|████████▉ | 8988/10000 [01:01<00:06, 153.47it/s]Running 10000 simulations.:  90%|█████████ | 9004/10000 [01:01<00:06, 154.69it/s]Running 10000 simulations.:  90%|█████████ | 9020/10000 [01:01<00:06, 155.90it/s]Running 10000 simulations.:  90%|█████████ | 9036/10000 [01:01<00:06, 156.93it/s]Running 10000 simulations.:  91%|█████████ | 9052/10000 [01:01<00:06, 155.78it/s]Running 10000 simulations.:  91%|█████████ | 9068/10000 [01:01<00:05, 156.07it/s]Running 10000 simulations.:  91%|█████████ | 9084/10000 [01:01<00:05, 156.98it/s]Running 10000 simulations.:  91%|█████████ | 9100/10000 [01:01<00:05, 157.68it/s]Running 10000 simulations.:  91%|█████████ | 9116/10000 [01:01<00:05, 155.95it/s]Running 10000 simulations.:  91%|█████████▏| 9132/10000 [01:01<00:05, 155.56it/s]Running 10000 simulations.:  91%|█████████▏| 9148/10000 [01:02<00:05, 156.26it/s]Running 10000 simulations.:  92%|█████████▏| 9164/10000 [01:02<00:05, 156.58it/s]Running 10000 simulations.:  92%|█████████▏| 9180/10000 [01:02<00:05, 155.18it/s]Running 10000 simulations.:  92%|█████████▏| 9196/10000 [01:02<00:05, 155.94it/s]Running 10000 simulations.:  92%|█████████▏| 9212/10000 [01:02<00:05, 154.89it/s]Running 10000 simulations.:  92%|█████████▏| 9228/10000 [01:02<00:04, 154.67it/s]Running 10000 simulations.:  92%|█████████▏| 9244/10000 [01:02<00:04, 155.42it/s]Running 10000 simulations.:  93%|█████████▎| 9260/10000 [01:02<00:04, 155.81it/s]Running 10000 simulations.:  93%|█████████▎| 9276/10000 [01:02<00:04, 154.43it/s]Running 10000 simulations.:  93%|█████████▎| 9292/10000 [01:02<00:04, 154.62it/s]Running 10000 simulations.:  93%|█████████▎| 9308/10000 [01:03<00:04, 149.20it/s]Running 10000 simulations.:  93%|█████████▎| 9324/10000 [01:03<00:04, 152.00it/s]Running 10000 simulations.:  93%|█████████▎| 9340/10000 [01:03<00:04, 152.09it/s]Running 10000 simulations.:  94%|█████████▎| 9356/10000 [01:03<00:04, 153.83it/s]Running 10000 simulations.:  94%|█████████▎| 9372/10000 [01:03<00:04, 155.33it/s]Running 10000 simulations.:  94%|█████████▍| 9388/10000 [01:03<00:03, 155.07it/s]Running 10000 simulations.:  94%|█████████▍| 9404/10000 [01:03<00:03, 153.15it/s]Running 10000 simulations.:  94%|█████████▍| 9420/10000 [01:03<00:03, 154.44it/s]Running 10000 simulations.:  94%|█████████▍| 9436/10000 [01:03<00:03, 155.34it/s]Running 10000 simulations.:  95%|█████████▍| 9452/10000 [01:04<00:03, 155.61it/s]Running 10000 simulations.:  95%|█████████▍| 9468/10000 [01:04<00:03, 154.82it/s]Running 10000 simulations.:  95%|█████████▍| 9484/10000 [01:04<00:03, 155.74it/s]Running 10000 simulations.:  95%|█████████▌| 9500/10000 [01:04<00:03, 156.58it/s]Running 10000 simulations.:  95%|█████████▌| 9516/10000 [01:04<00:03, 157.01it/s]Running 10000 simulations.:  95%|█████████▌| 9532/10000 [01:04<00:03, 155.45it/s]Running 10000 simulations.:  95%|█████████▌| 9548/10000 [01:04<00:02, 155.76it/s]Running 10000 simulations.:  96%|█████████▌| 9564/10000 [01:04<00:02, 155.97it/s]Running 10000 simulations.:  96%|█████████▌| 9580/10000 [01:04<00:02, 155.96it/s]Running 10000 simulations.:  96%|█████████▌| 9596/10000 [01:04<00:02, 154.30it/s]Running 10000 simulations.:  96%|█████████▌| 9612/10000 [01:05<00:02, 154.78it/s]Running 10000 simulations.:  96%|█████████▋| 9628/10000 [01:05<00:02, 155.38it/s]Running 10000 simulations.:  96%|█████████▋| 9644/10000 [01:05<00:02, 156.29it/s]Running 10000 simulations.:  97%|█████████▋| 9660/10000 [01:05<00:02, 154.68it/s]Running 10000 simulations.:  97%|█████████▋| 9676/10000 [01:05<00:02, 154.47it/s]Running 10000 simulations.:  97%|█████████▋| 9692/10000 [01:05<00:01, 154.82it/s]Running 10000 simulations.:  97%|█████████▋| 9708/10000 [01:05<00:01, 153.75it/s]Running 10000 simulations.:  97%|█████████▋| 9724/10000 [01:05<00:01, 154.68it/s]Running 10000 simulations.:  97%|█████████▋| 9740/10000 [01:05<00:01, 154.69it/s]Running 10000 simulations.:  98%|█████████▊| 9756/10000 [01:05<00:01, 154.94it/s]Running 10000 simulations.:  98%|█████████▊| 9772/10000 [01:06<00:01, 153.55it/s]Running 10000 simulations.:  98%|█████████▊| 9788/10000 [01:06<00:01, 154.41it/s]Running 10000 simulations.:  98%|█████████▊| 9804/10000 [01:06<00:01, 155.10it/s]Running 10000 simulations.:  98%|█████████▊| 9820/10000 [01:06<00:01, 155.57it/s]Running 10000 simulations.:  98%|█████████▊| 9836/10000 [01:06<00:01, 153.55it/s]Running 10000 simulations.:  99%|█████████▊| 9852/10000 [01:06<00:00, 154.69it/s]Running 10000 simulations.:  99%|█████████▊| 9868/10000 [01:06<00:00, 155.31it/s]Running 10000 simulations.:  99%|█████████▉| 9884/10000 [01:06<00:00, 155.76it/s]Running 10000 simulations.:  99%|█████████▉| 9900/10000 [01:06<00:00, 153.76it/s]Running 10000 simulations.:  99%|█████████▉| 9916/10000 [01:07<00:00, 154.32it/s]Running 10000 simulations.:  99%|█████████▉| 9932/10000 [01:07<00:00, 154.65it/s]Running 10000 simulations.:  99%|█████████▉| 9948/10000 [01:07<00:00, 155.66it/s]Running 10000 simulations.: 100%|█████████▉| 9964/10000 [01:07<00:00, 155.28it/s]Running 10000 simulations.: 100%|█████████▉| 9980/10000 [01:07<00:00, 155.37it/s]Running 10000 simulations.: 100%|█████████▉| 9996/10000 [01:07<00:00, 155.97it/s]Running 10000 simulations.: 100%|██████████| 10000/10000 [01:07<00:00, 148.06it/s]
Running 10000 simulations.:   0%|          | 0/10000 [00:00<?, ?it/s]Running 10000 simulations.:   0%|          | 18/10000 [00:00<00:58, 171.23it/s]Running 10000 simulations.:   0%|          | 36/10000 [00:00<00:58, 171.07it/s]Running 10000 simulations.:   1%|          | 53/10000 [00:00<00:58, 170.67it/s]Running 10000 simulations.:   1%|          | 71/10000 [00:00<00:58, 170.47it/s]Running 10000 simulations.:   1%|          | 88/10000 [00:00<00:58, 170.31it/s]Running 10000 simulations.:   1%|          | 106/10000 [00:00<00:58, 170.55it/s]Running 10000 simulations.:   1%|          | 123/10000 [00:00<00:58, 170.20it/s]Running 10000 simulations.:   1%|▏         | 140/10000 [00:00<00:58, 169.76it/s]Running 10000 simulations.:   2%|▏         | 157/10000 [00:00<00:58, 167.15it/s]Running 10000 simulations.:   2%|▏         | 174/10000 [00:01<00:59, 165.17it/s]Running 10000 simulations.:   2%|▏         | 191/10000 [00:01<00:59, 164.36it/s]Running 10000 simulations.:   2%|▏         | 208/10000 [00:01<00:59, 163.24it/s]Running 10000 simulations.:   2%|▏         | 225/10000 [00:01<01:00, 162.47it/s]Running 10000 simulations.:   2%|▏         | 242/10000 [00:01<01:00, 162.12it/s]Running 10000 simulations.:   3%|▎         | 259/10000 [00:01<01:00, 162.06it/s]Running 10000 simulations.:   3%|▎         | 276/10000 [00:01<01:00, 161.99it/s]Running 10000 simulations.:   3%|▎         | 293/10000 [00:01<01:00, 161.15it/s]Running 10000 simulations.:   3%|▎         | 310/10000 [00:01<01:00, 160.69it/s]Running 10000 simulations.:   3%|▎         | 327/10000 [00:01<01:00, 160.36it/s]Running 10000 simulations.:   3%|▎         | 344/10000 [00:02<01:00, 160.43it/s]Running 10000 simulations.:   4%|▎         | 361/10000 [00:02<01:00, 159.65it/s]Running 10000 simulations.:   4%|▍         | 377/10000 [00:02<01:00, 158.96it/s]Running 10000 simulations.:   4%|▍         | 393/10000 [00:02<01:00, 159.14it/s]Running 10000 simulations.:   4%|▍         | 409/10000 [00:02<01:00, 158.46it/s]Running 10000 simulations.:   4%|▍         | 425/10000 [00:02<01:00, 157.90it/s]Running 10000 simulations.:   4%|▍         | 441/10000 [00:02<01:00, 157.98it/s]Running 10000 simulations.:   5%|▍         | 457/10000 [00:02<01:00, 158.33it/s]Running 10000 simulations.:   5%|▍         | 473/10000 [00:02<01:00, 157.92it/s]Running 10000 simulations.:   5%|▍         | 489/10000 [00:03<01:00, 158.33it/s]Running 10000 simulations.:   5%|▌         | 506/10000 [00:03<00:59, 159.08it/s]Running 10000 simulations.:   5%|▌         | 523/10000 [00:03<00:59, 160.11it/s]Running 10000 simulations.:   5%|▌         | 540/10000 [00:03<00:59, 159.60it/s]Running 10000 simulations.:   6%|▌         | 557/10000 [00:03<00:59, 159.93it/s]Running 10000 simulations.:   6%|▌         | 574/10000 [00:03<00:58, 160.31it/s]Running 10000 simulations.:   6%|▌         | 591/10000 [00:03<00:58, 160.64it/s]Running 10000 simulations.:   6%|▌         | 608/10000 [00:03<00:58, 160.76it/s]Running 10000 simulations.:   6%|▋         | 625/10000 [00:03<00:58, 160.70it/s]Running 10000 simulations.:   6%|▋         | 642/10000 [00:03<00:58, 160.45it/s]Running 10000 simulations.:   7%|▋         | 659/10000 [00:04<00:58, 159.81it/s]Running 10000 simulations.:   7%|▋         | 675/10000 [00:04<00:58, 159.83it/s]Running 10000 simulations.:   7%|▋         | 692/10000 [00:04<00:58, 160.26it/s]Running 10000 simulations.:   7%|▋         | 709/10000 [00:04<00:58, 160.14it/s]Running 10000 simulations.:   7%|▋         | 726/10000 [00:04<00:58, 159.83it/s]Running 10000 simulations.:   7%|▋         | 742/10000 [00:04<00:58, 159.17it/s]Running 10000 simulations.:   8%|▊         | 758/10000 [00:04<00:58, 158.50it/s]Running 10000 simulations.:   8%|▊         | 774/10000 [00:04<00:58, 158.92it/s]Running 10000 simulations.:   8%|▊         | 790/10000 [00:04<00:58, 158.33it/s]Running 10000 simulations.:   8%|▊         | 806/10000 [00:04<00:58, 158.37it/s]Running 10000 simulations.:   8%|▊         | 822/10000 [00:05<00:57, 158.59it/s]Running 10000 simulations.:   8%|▊         | 838/10000 [00:05<00:57, 158.34it/s]Running 10000 simulations.:   9%|▊         | 854/10000 [00:05<00:57, 158.02it/s]Running 10000 simulations.:   9%|▊         | 870/10000 [00:05<00:58, 156.95it/s]Running 10000 simulations.:   9%|▉         | 886/10000 [00:05<00:58, 156.43it/s]Running 10000 simulations.:   9%|▉         | 902/10000 [00:05<00:58, 156.81it/s]Running 10000 simulations.:   9%|▉         | 918/10000 [00:05<00:57, 157.28it/s]Running 10000 simulations.:   9%|▉         | 934/10000 [00:05<00:57, 157.45it/s]Running 10000 simulations.:  10%|▉         | 950/10000 [00:05<00:57, 157.48it/s]Running 10000 simulations.:  10%|▉         | 966/10000 [00:06<00:57, 157.65it/s]Running 10000 simulations.:  10%|▉         | 982/10000 [00:06<00:57, 157.76it/s]Running 10000 simulations.:  10%|▉         | 998/10000 [00:06<00:56, 158.38it/s]Running 10000 simulations.:  10%|█         | 1014/10000 [00:06<00:58, 152.44it/s]Running 10000 simulations.:  10%|█         | 1030/10000 [00:06<00:58, 154.29it/s]Running 10000 simulations.:  10%|█         | 1047/10000 [00:06<00:57, 156.37it/s]Running 10000 simulations.:  11%|█         | 1064/10000 [00:06<00:56, 157.71it/s]Running 10000 simulations.:  11%|█         | 1081/10000 [00:06<00:56, 158.68it/s]Running 10000 simulations.:  11%|█         | 1097/10000 [00:06<00:56, 158.50it/s]Running 10000 simulations.:  11%|█         | 1113/10000 [00:06<00:56, 158.37it/s]Running 10000 simulations.:  11%|█▏        | 1129/10000 [00:07<00:56, 158.13it/s]Running 10000 simulations.:  11%|█▏        | 1145/10000 [00:07<00:55, 158.55it/s]Running 10000 simulations.:  12%|█▏        | 1162/10000 [00:07<00:55, 159.04it/s]Running 10000 simulations.:  12%|█▏        | 1178/10000 [00:07<00:55, 159.32it/s]Running 10000 simulations.:  12%|█▏        | 1194/10000 [00:07<00:55, 159.33it/s]Running 10000 simulations.:  12%|█▏        | 1210/10000 [00:07<00:55, 158.84it/s]Running 10000 simulations.:  12%|█▏        | 1226/10000 [00:07<00:55, 158.10it/s]Running 10000 simulations.:  12%|█▏        | 1242/10000 [00:07<00:55, 158.27it/s]Running 10000 simulations.:  13%|█▎        | 1258/10000 [00:07<00:55, 158.23it/s]Running 10000 simulations.:  13%|█▎        | 1274/10000 [00:07<00:55, 157.92it/s]Running 10000 simulations.:  13%|█▎        | 1290/10000 [00:08<00:55, 158.18it/s]Running 10000 simulations.:  13%|█▎        | 1306/10000 [00:08<00:55, 157.68it/s]Running 10000 simulations.:  13%|█▎        | 1322/10000 [00:08<00:55, 157.66it/s]Running 10000 simulations.:  13%|█▎        | 1338/10000 [00:08<00:54, 157.60it/s]Running 10000 simulations.:  14%|█▎        | 1354/10000 [00:08<00:54, 157.22it/s]Running 10000 simulations.:  14%|█▎        | 1370/10000 [00:08<00:54, 157.55it/s]Running 10000 simulations.:  14%|█▍        | 1386/10000 [00:08<00:54, 158.12it/s]Running 10000 simulations.:  14%|█▍        | 1402/10000 [00:08<00:54, 158.24it/s]Running 10000 simulations.:  14%|█▍        | 1418/10000 [00:08<00:54, 158.20it/s]Running 10000 simulations.:  14%|█▍        | 1434/10000 [00:08<00:54, 157.84it/s]Running 10000 simulations.:  14%|█▍        | 1450/10000 [00:09<00:54, 157.98it/s]Running 10000 simulations.:  15%|█▍        | 1466/10000 [00:09<00:53, 158.06it/s]Running 10000 simulations.:  15%|█▍        | 1482/10000 [00:09<00:53, 158.48it/s]Running 10000 simulations.:  15%|█▍        | 1498/10000 [00:09<00:53, 158.30it/s]Running 10000 simulations.:  15%|█▌        | 1514/10000 [00:09<00:53, 157.37it/s]Running 10000 simulations.:  15%|█▌        | 1530/10000 [00:09<00:53, 157.10it/s]Running 10000 simulations.:  15%|█▌        | 1546/10000 [00:09<00:53, 156.99it/s]Running 10000 simulations.:  16%|█▌        | 1562/10000 [00:09<00:53, 157.17it/s]Running 10000 simulations.:  16%|█▌        | 1578/10000 [00:09<00:53, 157.30it/s]Running 10000 simulations.:  16%|█▌        | 1594/10000 [00:09<00:53, 157.53it/s]Running 10000 simulations.:  16%|█▌        | 1610/10000 [00:10<00:53, 156.76it/s]Running 10000 simulations.:  16%|█▋        | 1626/10000 [00:10<00:53, 156.44it/s]Running 10000 simulations.:  16%|█▋        | 1642/10000 [00:10<00:53, 156.72it/s]Running 10000 simulations.:  17%|█▋        | 1658/10000 [00:10<00:53, 156.61it/s]Running 10000 simulations.:  17%|█▋        | 1674/10000 [00:10<00:53, 156.46it/s]Running 10000 simulations.:  17%|█▋        | 1690/10000 [00:10<00:53, 156.40it/s]Running 10000 simulations.:  17%|█▋        | 1706/10000 [00:10<00:53, 156.36it/s]Running 10000 simulations.:  17%|█▋        | 1722/10000 [00:10<00:52, 156.61it/s]Running 10000 simulations.:  17%|█▋        | 1738/10000 [00:10<00:52, 156.40it/s]Running 10000 simulations.:  18%|█▊        | 1754/10000 [00:11<00:52, 156.33it/s]Running 10000 simulations.:  18%|█▊        | 1770/10000 [00:11<00:52, 157.30it/s]Running 10000 simulations.:  18%|█▊        | 1786/10000 [00:11<00:52, 157.78it/s]Running 10000 simulations.:  18%|█▊        | 1802/10000 [00:11<00:52, 157.17it/s]Running 10000 simulations.:  18%|█▊        | 1818/10000 [00:11<00:52, 156.64it/s]Running 10000 simulations.:  18%|█▊        | 1834/10000 [00:11<00:52, 156.32it/s]Running 10000 simulations.:  18%|█▊        | 1850/10000 [00:11<00:52, 156.36it/s]Running 10000 simulations.:  19%|█▊        | 1866/10000 [00:11<00:51, 156.54it/s]Running 10000 simulations.:  19%|█▉        | 1882/10000 [00:11<00:51, 156.65it/s]Running 10000 simulations.:  19%|█▉        | 1898/10000 [00:11<00:51, 156.45it/s]Running 10000 simulations.:  19%|█▉        | 1914/10000 [00:12<00:51, 156.24it/s]Running 10000 simulations.:  19%|█▉        | 1930/10000 [00:12<00:51, 156.25it/s]Running 10000 simulations.:  19%|█▉        | 1946/10000 [00:12<00:51, 156.03it/s]Running 10000 simulations.:  20%|█▉        | 1962/10000 [00:12<00:51, 155.90it/s]Running 10000 simulations.:  20%|█▉        | 1978/10000 [00:12<00:51, 156.16it/s]Running 10000 simulations.:  20%|█▉        | 1994/10000 [00:12<00:51, 155.76it/s]Running 10000 simulations.:  20%|██        | 2010/10000 [00:12<00:51, 155.97it/s]Running 10000 simulations.:  20%|██        | 2026/10000 [00:12<00:51, 156.08it/s]Running 10000 simulations.:  20%|██        | 2042/10000 [00:12<00:51, 156.03it/s]Running 10000 simulations.:  21%|██        | 2058/10000 [00:12<00:50, 156.98it/s]Running 10000 simulations.:  21%|██        | 2075/10000 [00:13<00:50, 157.96it/s]Running 10000 simulations.:  21%|██        | 2091/10000 [00:13<00:50, 158.14it/s]Running 10000 simulations.:  21%|██        | 2107/10000 [00:13<00:49, 158.05it/s]Running 10000 simulations.:  21%|██        | 2123/10000 [00:13<00:49, 157.70it/s]Running 10000 simulations.:  21%|██▏       | 2139/10000 [00:13<00:49, 157.47it/s]Running 10000 simulations.:  22%|██▏       | 2155/10000 [00:13<00:50, 156.42it/s]Running 10000 simulations.:  22%|██▏       | 2171/10000 [00:13<00:49, 156.72it/s]Running 10000 simulations.:  22%|██▏       | 2187/10000 [00:13<00:49, 157.07it/s]Running 10000 simulations.:  22%|██▏       | 2203/10000 [00:13<00:49, 157.35it/s]Running 10000 simulations.:  22%|██▏       | 2219/10000 [00:13<00:49, 157.52it/s]Running 10000 simulations.:  22%|██▏       | 2235/10000 [00:14<00:49, 157.33it/s]Running 10000 simulations.:  23%|██▎       | 2251/10000 [00:14<00:49, 156.92it/s]Running 10000 simulations.:  23%|██▎       | 2267/10000 [00:14<00:49, 156.56it/s]Running 10000 simulations.:  23%|██▎       | 2283/10000 [00:14<00:49, 155.64it/s]Running 10000 simulations.:  23%|██▎       | 2299/10000 [00:14<00:49, 155.83it/s]Running 10000 simulations.:  23%|██▎       | 2315/10000 [00:14<00:49, 155.63it/s]Running 10000 simulations.:  23%|██▎       | 2331/10000 [00:14<00:49, 155.62it/s]Running 10000 simulations.:  23%|██▎       | 2347/10000 [00:14<00:49, 155.78it/s]Running 10000 simulations.:  24%|██▎       | 2363/10000 [00:14<00:48, 156.61it/s]Running 10000 simulations.:  24%|██▍       | 2379/10000 [00:15<00:48, 157.04it/s]Running 10000 simulations.:  24%|██▍       | 2395/10000 [00:15<00:48, 156.83it/s]Running 10000 simulations.:  24%|██▍       | 2411/10000 [00:15<00:48, 156.70it/s]Running 10000 simulations.:  24%|██▍       | 2427/10000 [00:15<00:48, 156.72it/s]Running 10000 simulations.:  24%|██▍       | 2444/10000 [00:15<00:47, 160.03it/s]Running 10000 simulations.:  25%|██▍       | 2463/10000 [00:15<00:45, 166.14it/s]Running 10000 simulations.:  25%|██▍       | 2481/10000 [00:15<00:44, 169.21it/s]Running 10000 simulations.:  25%|██▍       | 2499/10000 [00:15<00:43, 171.54it/s]Running 10000 simulations.:  25%|██▌       | 2517/10000 [00:15<00:43, 170.35it/s]Running 10000 simulations.:  25%|██▌       | 2535/10000 [00:15<00:43, 170.31it/s]Running 10000 simulations.:  26%|██▌       | 2553/10000 [00:16<00:43, 170.36it/s]Running 10000 simulations.:  26%|██▌       | 2571/10000 [00:16<00:43, 170.36it/s]Running 10000 simulations.:  26%|██▌       | 2589/10000 [00:16<00:43, 169.70it/s]Running 10000 simulations.:  26%|██▌       | 2606/10000 [00:16<00:43, 168.87it/s]Running 10000 simulations.:  26%|██▌       | 2623/10000 [00:16<00:43, 168.87it/s]Running 10000 simulations.:  26%|██▋       | 2640/10000 [00:16<00:44, 164.11it/s]Running 10000 simulations.:  27%|██▋       | 2657/10000 [00:16<00:50, 144.82it/s]Running 10000 simulations.:  27%|██▋       | 2672/10000 [00:17<01:30, 80.81it/s] Running 10000 simulations.:  27%|██▋       | 2684/10000 [00:17<01:22, 88.89it/s]Running 10000 simulations.:  27%|██▋       | 2696/10000 [00:17<01:16, 95.63it/s]Running 10000 simulations.:  27%|██▋       | 2708/10000 [00:17<01:12, 101.00it/s]Running 10000 simulations.:  27%|██▋       | 2720/10000 [00:17<01:09, 104.71it/s]Running 10000 simulations.:  27%|██▋       | 2732/10000 [00:17<01:07, 108.00it/s]Running 10000 simulations.:  27%|██▋       | 2744/10000 [00:17<01:05, 111.16it/s]Running 10000 simulations.:  28%|██▊       | 2756/10000 [00:17<01:04, 112.70it/s]Running 10000 simulations.:  28%|██▊       | 2768/10000 [00:17<01:03, 113.48it/s]Running 10000 simulations.:  28%|██▊       | 2780/10000 [00:18<01:02, 114.96it/s]Running 10000 simulations.:  28%|██▊       | 2792/10000 [00:18<01:02, 115.70it/s]Running 10000 simulations.:  28%|██▊       | 2804/10000 [00:18<01:01, 116.77it/s]Running 10000 simulations.:  28%|██▊       | 2816/10000 [00:18<01:01, 116.91it/s]Running 10000 simulations.:  28%|██▊       | 2828/10000 [00:18<01:02, 114.61it/s]Running 10000 simulations.:  28%|██▊       | 2840/10000 [00:18<01:02, 115.09it/s]Running 10000 simulations.:  29%|██▊       | 2852/10000 [00:18<01:01, 116.32it/s]Running 10000 simulations.:  29%|██▊       | 2864/10000 [00:18<01:01, 116.81it/s]Running 10000 simulations.:  29%|██▉       | 2876/10000 [00:18<01:01, 116.33it/s]Running 10000 simulations.:  29%|██▉       | 2888/10000 [00:18<01:00, 116.66it/s]Running 10000 simulations.:  29%|██▉       | 2901/10000 [00:19<00:59, 119.98it/s]Running 10000 simulations.:  29%|██▉       | 2916/10000 [00:19<00:55, 127.14it/s]Running 10000 simulations.:  29%|██▉       | 2930/10000 [00:19<00:54, 130.18it/s]Running 10000 simulations.:  29%|██▉       | 2944/10000 [00:19<00:53, 131.00it/s]Running 10000 simulations.:  30%|██▉       | 2958/10000 [00:19<00:53, 131.37it/s]Running 10000 simulations.:  30%|██▉       | 2972/10000 [00:19<00:53, 130.71it/s]Running 10000 simulations.:  30%|██▉       | 2986/10000 [00:19<00:53, 131.14it/s]Running 10000 simulations.:  30%|███       | 3000/10000 [00:19<00:52, 133.42it/s]Running 10000 simulations.:  30%|███       | 3014/10000 [00:19<00:51, 135.10it/s]Running 10000 simulations.:  30%|███       | 3029/10000 [00:19<00:50, 138.06it/s]Running 10000 simulations.:  30%|███       | 3043/10000 [00:20<00:50, 137.55it/s]Running 10000 simulations.:  31%|███       | 3057/10000 [00:20<00:51, 135.41it/s]Running 10000 simulations.:  31%|███       | 3071/10000 [00:20<00:51, 133.87it/s]Running 10000 simulations.:  31%|███       | 3085/10000 [00:20<00:52, 132.93it/s]Running 10000 simulations.:  31%|███       | 3099/10000 [00:20<00:52, 132.26it/s]Running 10000 simulations.:  31%|███       | 3113/10000 [00:20<00:52, 131.63it/s]Running 10000 simulations.:  31%|███▏      | 3127/10000 [00:20<00:52, 131.76it/s]Running 10000 simulations.:  31%|███▏      | 3141/10000 [00:20<00:52, 130.94it/s]Running 10000 simulations.:  32%|███▏      | 3155/10000 [00:20<00:52, 130.08it/s]Running 10000 simulations.:  32%|███▏      | 3169/10000 [00:21<00:52, 130.13it/s]Running 10000 simulations.:  32%|███▏      | 3183/10000 [00:21<00:52, 129.82it/s]Running 10000 simulations.:  32%|███▏      | 3197/10000 [00:21<00:52, 130.43it/s]Running 10000 simulations.:  32%|███▏      | 3211/10000 [00:21<00:51, 130.76it/s]Running 10000 simulations.:  32%|███▏      | 3225/10000 [00:21<00:51, 130.98it/s]Running 10000 simulations.:  32%|███▏      | 3239/10000 [00:21<00:51, 131.19it/s]Running 10000 simulations.:  33%|███▎      | 3253/10000 [00:21<00:51, 130.90it/s]Running 10000 simulations.:  33%|███▎      | 3267/10000 [00:21<00:51, 130.49it/s]Running 10000 simulations.:  33%|███▎      | 3281/10000 [00:21<00:52, 128.28it/s]Running 10000 simulations.:  33%|███▎      | 3294/10000 [00:22<00:52, 128.74it/s]Running 10000 simulations.:  33%|███▎      | 3308/10000 [00:22<00:51, 129.36it/s]Running 10000 simulations.:  33%|███▎      | 3322/10000 [00:22<00:51, 129.84it/s]Running 10000 simulations.:  33%|███▎      | 3336/10000 [00:22<00:51, 130.22it/s]Running 10000 simulations.:  34%|███▎      | 3350/10000 [00:22<00:50, 130.48it/s]Running 10000 simulations.:  34%|███▎      | 3364/10000 [00:22<00:50, 130.47it/s]Running 10000 simulations.:  34%|███▍      | 3378/10000 [00:22<00:50, 130.17it/s]Running 10000 simulations.:  34%|███▍      | 3392/10000 [00:22<00:50, 130.21it/s]Running 10000 simulations.:  34%|███▍      | 3406/10000 [00:22<00:50, 130.06it/s]Running 10000 simulations.:  34%|███▍      | 3420/10000 [00:22<00:50, 130.20it/s]Running 10000 simulations.:  34%|███▍      | 3434/10000 [00:23<00:50, 130.43it/s]Running 10000 simulations.:  34%|███▍      | 3448/10000 [00:23<00:50, 130.35it/s]Running 10000 simulations.:  35%|███▍      | 3462/10000 [00:23<00:50, 129.94it/s]Running 10000 simulations.:  35%|███▍      | 3476/10000 [00:23<00:50, 130.06it/s]Running 10000 simulations.:  35%|███▍      | 3490/10000 [00:23<00:49, 130.32it/s]Running 10000 simulations.:  35%|███▌      | 3504/10000 [00:23<00:49, 130.93it/s]Running 10000 simulations.:  35%|███▌      | 3518/10000 [00:23<00:49, 131.37it/s]Running 10000 simulations.:  35%|███▌      | 3532/10000 [00:23<00:49, 131.25it/s]Running 10000 simulations.:  35%|███▌      | 3546/10000 [00:23<00:49, 131.19it/s]Running 10000 simulations.:  36%|███▌      | 3560/10000 [00:24<00:49, 131.36it/s]Running 10000 simulations.:  36%|███▌      | 3574/10000 [00:24<00:48, 131.20it/s]Running 10000 simulations.:  36%|███▌      | 3588/10000 [00:24<00:49, 130.44it/s]Running 10000 simulations.:  36%|███▌      | 3602/10000 [00:24<00:49, 130.45it/s]Running 10000 simulations.:  36%|███▌      | 3616/10000 [00:24<00:48, 130.71it/s]Running 10000 simulations.:  36%|███▋      | 3630/10000 [00:24<00:48, 130.58it/s]Running 10000 simulations.:  36%|███▋      | 3644/10000 [00:24<00:48, 130.70it/s]Running 10000 simulations.:  37%|███▋      | 3658/10000 [00:24<00:48, 130.78it/s]Running 10000 simulations.:  37%|███▋      | 3672/10000 [00:24<00:48, 131.17it/s]Running 10000 simulations.:  37%|███▋      | 3686/10000 [00:25<00:48, 131.23it/s]Running 10000 simulations.:  37%|███▋      | 3700/10000 [00:25<00:48, 130.60it/s]Running 10000 simulations.:  37%|███▋      | 3714/10000 [00:25<00:48, 130.49it/s]Running 10000 simulations.:  37%|███▋      | 3728/10000 [00:25<00:47, 130.90it/s]Running 10000 simulations.:  37%|███▋      | 3742/10000 [00:25<00:47, 130.92it/s]Running 10000 simulations.:  38%|███▊      | 3756/10000 [00:25<00:47, 130.90it/s]Running 10000 simulations.:  38%|███▊      | 3770/10000 [00:25<00:47, 130.72it/s]Running 10000 simulations.:  38%|███▊      | 3784/10000 [00:25<00:47, 130.79it/s]Running 10000 simulations.:  38%|███▊      | 3798/10000 [00:25<00:47, 130.47it/s]Running 10000 simulations.:  38%|███▊      | 3812/10000 [00:25<00:47, 130.26it/s]Running 10000 simulations.:  38%|███▊      | 3826/10000 [00:26<00:47, 130.57it/s]Running 10000 simulations.:  38%|███▊      | 3840/10000 [00:26<00:47, 130.95it/s]Running 10000 simulations.:  39%|███▊      | 3854/10000 [00:26<00:46, 131.39it/s]Running 10000 simulations.:  39%|███▊      | 3868/10000 [00:26<00:46, 131.37it/s]Running 10000 simulations.:  39%|███▉      | 3882/10000 [00:26<00:46, 131.24it/s]Running 10000 simulations.:  39%|███▉      | 3896/10000 [00:26<00:46, 130.91it/s]Running 10000 simulations.:  39%|███▉      | 3910/10000 [00:26<00:46, 130.99it/s]Running 10000 simulations.:  39%|███▉      | 3924/10000 [00:26<00:46, 131.30it/s]Running 10000 simulations.:  39%|███▉      | 3938/10000 [00:26<00:46, 131.28it/s]Running 10000 simulations.:  40%|███▉      | 3952/10000 [00:27<00:46, 131.30it/s]Running 10000 simulations.:  40%|███▉      | 3966/10000 [00:27<00:45, 131.88it/s]Running 10000 simulations.:  40%|███▉      | 3980/10000 [00:27<00:45, 132.17it/s]Running 10000 simulations.:  40%|███▉      | 3994/10000 [00:27<00:45, 131.85it/s]Running 10000 simulations.:  40%|████      | 4008/10000 [00:27<00:45, 131.63it/s]Running 10000 simulations.:  40%|████      | 4022/10000 [00:27<00:45, 131.24it/s]Running 10000 simulations.:  40%|████      | 4036/10000 [00:27<00:45, 131.33it/s]Running 10000 simulations.:  40%|████      | 4050/10000 [00:27<00:45, 131.17it/s]Running 10000 simulations.:  41%|████      | 4064/10000 [00:27<00:45, 131.05it/s]Running 10000 simulations.:  41%|████      | 4078/10000 [00:27<00:45, 130.94it/s]Running 10000 simulations.:  41%|████      | 4092/10000 [00:28<00:45, 130.80it/s]Running 10000 simulations.:  41%|████      | 4106/10000 [00:28<00:45, 130.74it/s]Running 10000 simulations.:  41%|████      | 4120/10000 [00:28<00:45, 130.10it/s]Running 10000 simulations.:  41%|████▏     | 4134/10000 [00:28<00:45, 130.34it/s]Running 10000 simulations.:  41%|████▏     | 4148/10000 [00:28<00:45, 129.92it/s]Running 10000 simulations.:  42%|████▏     | 4161/10000 [00:28<00:45, 129.31it/s]Running 10000 simulations.:  42%|████▏     | 4175/10000 [00:28<00:44, 129.82it/s]Running 10000 simulations.:  42%|████▏     | 4189/10000 [00:28<00:44, 130.23it/s]Running 10000 simulations.:  42%|████▏     | 4203/10000 [00:28<00:44, 130.17it/s]Running 10000 simulations.:  42%|████▏     | 4217/10000 [00:29<00:44, 129.89it/s]Running 10000 simulations.:  42%|████▏     | 4230/10000 [00:29<00:44, 129.80it/s]Running 10000 simulations.:  42%|████▏     | 4244/10000 [00:29<00:44, 130.05it/s]Running 10000 simulations.:  43%|████▎     | 4258/10000 [00:29<00:44, 129.63it/s]Running 10000 simulations.:  43%|████▎     | 4271/10000 [00:29<00:44, 129.31it/s]Running 10000 simulations.:  43%|████▎     | 4285/10000 [00:29<00:44, 129.82it/s]Running 10000 simulations.:  43%|████▎     | 4299/10000 [00:29<00:43, 130.17it/s]Running 10000 simulations.:  43%|████▎     | 4313/10000 [00:29<00:43, 130.36it/s]Running 10000 simulations.:  43%|████▎     | 4327/10000 [00:29<00:43, 130.62it/s]Running 10000 simulations.:  43%|████▎     | 4341/10000 [00:30<00:43, 130.95it/s]Running 10000 simulations.:  44%|████▎     | 4355/10000 [00:30<00:42, 131.38it/s]Running 10000 simulations.:  44%|████▎     | 4369/10000 [00:30<00:42, 131.80it/s]Running 10000 simulations.:  44%|████▍     | 4383/10000 [00:30<00:42, 131.90it/s]Running 10000 simulations.:  44%|████▍     | 4397/10000 [00:30<00:42, 131.96it/s]Running 10000 simulations.:  44%|████▍     | 4411/10000 [00:30<00:42, 131.73it/s]Running 10000 simulations.:  44%|████▍     | 4425/10000 [00:30<00:42, 131.48it/s]Running 10000 simulations.:  44%|████▍     | 4439/10000 [00:30<00:42, 130.95it/s]Running 10000 simulations.:  45%|████▍     | 4453/10000 [00:30<00:42, 130.68it/s]Running 10000 simulations.:  45%|████▍     | 4467/10000 [00:30<00:42, 130.71it/s]Running 10000 simulations.:  45%|████▍     | 4481/10000 [00:31<00:42, 130.79it/s]Running 10000 simulations.:  45%|████▍     | 4495/10000 [00:31<00:42, 130.70it/s]Running 10000 simulations.:  45%|████▌     | 4509/10000 [00:31<00:41, 131.22it/s]Running 10000 simulations.:  45%|████▌     | 4523/10000 [00:31<00:41, 131.48it/s]Running 10000 simulations.:  45%|████▌     | 4537/10000 [00:31<00:41, 131.59it/s]Running 10000 simulations.:  46%|████▌     | 4551/10000 [00:31<00:41, 130.61it/s]Running 10000 simulations.:  46%|████▌     | 4565/10000 [00:31<00:41, 130.27it/s]Running 10000 simulations.:  46%|████▌     | 4579/10000 [00:31<00:41, 130.36it/s]Running 10000 simulations.:  46%|████▌     | 4593/10000 [00:31<00:41, 130.85it/s]Running 10000 simulations.:  46%|████▌     | 4607/10000 [00:32<00:41, 131.46it/s]Running 10000 simulations.:  46%|████▌     | 4621/10000 [00:32<00:40, 131.87it/s]Running 10000 simulations.:  46%|████▋     | 4637/10000 [00:32<00:38, 139.07it/s]Running 10000 simulations.:  47%|████▋     | 4655/10000 [00:32<00:36, 147.59it/s]Running 10000 simulations.:  47%|████▋     | 4673/10000 [00:32<00:34, 153.89it/s]Running 10000 simulations.:  47%|████▋     | 4690/10000 [00:32<00:33, 157.49it/s]Running 10000 simulations.:  47%|████▋     | 4707/10000 [00:32<00:33, 160.28it/s]Running 10000 simulations.:  47%|████▋     | 4724/10000 [00:32<00:32, 162.51it/s]Running 10000 simulations.:  47%|████▋     | 4741/10000 [00:32<00:32, 164.28it/s]Running 10000 simulations.:  48%|████▊     | 4758/10000 [00:32<00:31, 165.41it/s]Running 10000 simulations.:  48%|████▊     | 4775/10000 [00:33<00:31, 165.71it/s]Running 10000 simulations.:  48%|████▊     | 4792/10000 [00:33<00:31, 164.06it/s]Running 10000 simulations.:  48%|████▊     | 4809/10000 [00:33<00:32, 159.80it/s]Running 10000 simulations.:  48%|████▊     | 4826/10000 [00:33<00:32, 159.11it/s]Running 10000 simulations.:  48%|████▊     | 4842/10000 [00:33<00:32, 159.24it/s]Running 10000 simulations.:  49%|████▊     | 4858/10000 [00:33<00:32, 157.64it/s]Running 10000 simulations.:  49%|████▊     | 4874/10000 [00:33<00:32, 156.89it/s]Running 10000 simulations.:  49%|████▉     | 4890/10000 [00:33<00:32, 156.20it/s]Running 10000 simulations.:  49%|████▉     | 4906/10000 [00:33<00:32, 156.93it/s]Running 10000 simulations.:  49%|████▉     | 4923/10000 [00:34<00:32, 158.63it/s]Running 10000 simulations.:  49%|████▉     | 4939/10000 [00:34<00:32, 156.71it/s]Running 10000 simulations.:  50%|████▉     | 4955/10000 [00:34<00:32, 155.04it/s]Running 10000 simulations.:  50%|████▉     | 4971/10000 [00:34<00:32, 153.53it/s]Running 10000 simulations.:  50%|████▉     | 4987/10000 [00:34<00:32, 153.25it/s]Running 10000 simulations.:  50%|█████     | 5003/10000 [00:34<00:32, 153.33it/s]Running 10000 simulations.:  50%|█████     | 5019/10000 [00:34<00:32, 153.29it/s]Running 10000 simulations.:  50%|█████     | 5035/10000 [00:34<00:32, 152.80it/s]Running 10000 simulations.:  51%|█████     | 5051/10000 [00:34<00:32, 152.39it/s]Running 10000 simulations.:  51%|█████     | 5067/10000 [00:34<00:32, 152.57it/s]Running 10000 simulations.:  51%|█████     | 5083/10000 [00:35<00:32, 152.80it/s]Running 10000 simulations.:  51%|█████     | 5099/10000 [00:35<00:32, 153.08it/s]Running 10000 simulations.:  51%|█████     | 5115/10000 [00:35<00:32, 152.43it/s]Running 10000 simulations.:  51%|█████▏    | 5131/10000 [00:35<00:32, 150.91it/s]Running 10000 simulations.:  51%|█████▏    | 5147/10000 [00:35<00:33, 145.04it/s]Running 10000 simulations.:  52%|█████▏    | 5162/10000 [00:35<00:35, 136.98it/s]Running 10000 simulations.:  52%|█████▏    | 5176/10000 [00:35<00:36, 132.07it/s]Running 10000 simulations.:  52%|█████▏    | 5190/10000 [00:35<00:37, 128.73it/s]Running 10000 simulations.:  52%|█████▏    | 5203/10000 [00:35<00:37, 126.64it/s]Running 10000 simulations.:  52%|█████▏    | 5216/10000 [00:36<00:38, 124.63it/s]Running 10000 simulations.:  52%|█████▏    | 5229/10000 [00:36<00:38, 123.86it/s]Running 10000 simulations.:  52%|█████▏    | 5242/10000 [00:36<00:39, 121.91it/s]Running 10000 simulations.:  53%|█████▎    | 5255/10000 [00:36<00:41, 115.45it/s]Running 10000 simulations.:  53%|█████▎    | 5267/10000 [00:36<00:41, 115.40it/s]Running 10000 simulations.:  53%|█████▎    | 5279/10000 [00:36<00:40, 116.59it/s]Running 10000 simulations.:  53%|█████▎    | 5291/10000 [00:36<00:40, 117.52it/s]Running 10000 simulations.:  53%|█████▎    | 5303/10000 [00:36<00:39, 118.10it/s]Running 10000 simulations.:  53%|█████▎    | 5315/10000 [00:36<00:39, 117.55it/s]Running 10000 simulations.:  53%|█████▎    | 5328/10000 [00:37<00:39, 118.50it/s]Running 10000 simulations.:  53%|█████▎    | 5340/10000 [00:37<00:39, 117.39it/s]Running 10000 simulations.:  54%|█████▎    | 5353/10000 [00:37<00:39, 118.49it/s]Running 10000 simulations.:  54%|█████▎    | 5365/10000 [00:37<00:39, 117.14it/s]Running 10000 simulations.:  54%|█████▍    | 5380/10000 [00:37<00:36, 125.27it/s]Running 10000 simulations.:  54%|█████▍    | 5396/10000 [00:37<00:34, 132.55it/s]Running 10000 simulations.:  54%|█████▍    | 5412/10000 [00:37<00:33, 138.99it/s]Running 10000 simulations.:  54%|█████▍    | 5428/10000 [00:37<00:31, 144.36it/s]Running 10000 simulations.:  54%|█████▍    | 5444/10000 [00:37<00:30, 147.47it/s]Running 10000 simulations.:  55%|█████▍    | 5460/10000 [00:37<00:30, 149.56it/s]Running 10000 simulations.:  55%|█████▍    | 5476/10000 [00:38<00:30, 150.66it/s]Running 10000 simulations.:  55%|█████▍    | 5492/10000 [00:38<00:29, 153.12it/s]Running 10000 simulations.:  55%|█████▌    | 5509/10000 [00:38<00:28, 156.56it/s]Running 10000 simulations.:  55%|█████▌    | 5525/10000 [00:38<00:30, 147.10it/s]Running 10000 simulations.:  55%|█████▌    | 5540/10000 [00:38<00:32, 137.91it/s]Running 10000 simulations.:  56%|█████▌    | 5555/10000 [00:38<00:33, 131.69it/s]Running 10000 simulations.:  56%|█████▌    | 5569/10000 [00:38<00:34, 128.34it/s]Running 10000 simulations.:  56%|█████▌    | 5583/10000 [00:38<00:35, 125.52it/s]Running 10000 simulations.:  56%|█████▌    | 5596/10000 [00:38<00:35, 124.88it/s]Running 10000 simulations.:  56%|█████▌    | 5609/10000 [00:39<00:35, 122.89it/s]Running 10000 simulations.:  56%|█████▌    | 5622/10000 [00:39<00:35, 123.08it/s]Running 10000 simulations.:  56%|█████▋    | 5635/10000 [00:39<00:35, 122.21it/s]Running 10000 simulations.:  56%|█████▋    | 5648/10000 [00:39<00:35, 121.55it/s]Running 10000 simulations.:  57%|█████▋    | 5661/10000 [00:39<00:35, 121.55it/s]Running 10000 simulations.:  57%|█████▋    | 5674/10000 [00:39<00:35, 121.68it/s]Running 10000 simulations.:  57%|█████▋    | 5687/10000 [00:39<00:35, 122.08it/s]Running 10000 simulations.:  57%|█████▋    | 5700/10000 [00:39<00:35, 120.61it/s]Running 10000 simulations.:  57%|█████▋    | 5713/10000 [00:39<00:35, 120.27it/s]Running 10000 simulations.:  57%|█████▋    | 5726/10000 [00:40<00:36, 118.47it/s]Running 10000 simulations.:  57%|█████▋    | 5738/10000 [00:40<00:35, 118.79it/s]Running 10000 simulations.:  57%|█████▊    | 5750/10000 [00:40<00:35, 118.49it/s]Running 10000 simulations.:  58%|█████▊    | 5762/10000 [00:40<00:36, 116.06it/s]Running 10000 simulations.:  58%|█████▊    | 5774/10000 [00:40<00:36, 116.14it/s]Running 10000 simulations.:  58%|█████▊    | 5787/10000 [00:40<00:35, 118.28it/s]Running 10000 simulations.:  58%|█████▊    | 5801/10000 [00:40<00:33, 123.60it/s]Running 10000 simulations.:  58%|█████▊    | 5818/10000 [00:40<00:31, 133.95it/s]Running 10000 simulations.:  58%|█████▊    | 5835/10000 [00:40<00:29, 141.69it/s]Running 10000 simulations.:  59%|█████▊    | 5852/10000 [00:40<00:28, 147.83it/s]Running 10000 simulations.:  59%|█████▊    | 5869/10000 [00:41<00:27, 152.46it/s]Running 10000 simulations.:  59%|█████▉    | 5886/10000 [00:41<00:26, 155.97it/s]Running 10000 simulations.:  59%|█████▉    | 5903/10000 [00:41<00:25, 159.06it/s]Running 10000 simulations.:  59%|█████▉    | 5920/10000 [00:41<00:25, 161.03it/s]Running 10000 simulations.:  59%|█████▉    | 5937/10000 [00:41<00:25, 161.74it/s]Running 10000 simulations.:  60%|█████▉    | 5954/10000 [00:41<00:24, 162.76it/s]Running 10000 simulations.:  60%|█████▉    | 5971/10000 [00:41<00:24, 163.96it/s]Running 10000 simulations.:  60%|█████▉    | 5988/10000 [00:41<00:24, 164.93it/s]Running 10000 simulations.:  60%|██████    | 6005/10000 [00:41<00:24, 165.43it/s]Running 10000 simulations.:  60%|██████    | 6022/10000 [00:42<00:24, 164.75it/s]Running 10000 simulations.:  60%|██████    | 6039/10000 [00:42<00:23, 165.25it/s]Running 10000 simulations.:  61%|██████    | 6056/10000 [00:42<00:23, 165.43it/s]Running 10000 simulations.:  61%|██████    | 6073/10000 [00:42<00:23, 164.41it/s]Running 10000 simulations.:  61%|██████    | 6090/10000 [00:42<00:23, 164.23it/s]Running 10000 simulations.:  61%|██████    | 6107/10000 [00:42<00:23, 164.26it/s]Running 10000 simulations.:  61%|██████    | 6124/10000 [00:42<00:23, 165.08it/s]Running 10000 simulations.:  61%|██████▏   | 6141/10000 [00:42<00:23, 165.28it/s]Running 10000 simulations.:  62%|██████▏   | 6158/10000 [00:42<00:23, 165.13it/s]Running 10000 simulations.:  62%|██████▏   | 6175/10000 [00:42<00:23, 165.60it/s]Running 10000 simulations.:  62%|██████▏   | 6192/10000 [00:43<00:23, 165.34it/s]Running 10000 simulations.:  62%|██████▏   | 6209/10000 [00:43<00:22, 165.67it/s]Running 10000 simulations.:  62%|██████▏   | 6226/10000 [00:43<00:22, 165.49it/s]Running 10000 simulations.:  62%|██████▏   | 6243/10000 [00:43<00:22, 165.36it/s]Running 10000 simulations.:  63%|██████▎   | 6260/10000 [00:43<00:22, 165.49it/s]Running 10000 simulations.:  63%|██████▎   | 6277/10000 [00:43<00:22, 165.59it/s]Running 10000 simulations.:  63%|██████▎   | 6294/10000 [00:43<00:22, 165.59it/s]Running 10000 simulations.:  63%|██████▎   | 6311/10000 [00:43<00:22, 165.03it/s]Running 10000 simulations.:  63%|██████▎   | 6328/10000 [00:43<00:22, 164.58it/s]Running 10000 simulations.:  63%|██████▎   | 6345/10000 [00:43<00:22, 164.29it/s]Running 10000 simulations.:  64%|██████▎   | 6362/10000 [00:44<00:22, 165.09it/s]Running 10000 simulations.:  64%|██████▍   | 6379/10000 [00:44<00:21, 165.84it/s]Running 10000 simulations.:  64%|██████▍   | 6396/10000 [00:44<00:21, 166.46it/s]Running 10000 simulations.:  64%|██████▍   | 6413/10000 [00:44<00:21, 166.71it/s]Running 10000 simulations.:  64%|██████▍   | 6430/10000 [00:44<00:21, 166.27it/s]Running 10000 simulations.:  64%|██████▍   | 6447/10000 [00:44<00:22, 160.72it/s]Running 10000 simulations.:  65%|██████▍   | 6464/10000 [00:44<00:22, 155.97it/s]Running 10000 simulations.:  65%|██████▍   | 6480/10000 [00:44<00:23, 152.77it/s]Running 10000 simulations.:  65%|██████▍   | 6496/10000 [00:44<00:23, 150.32it/s]Running 10000 simulations.:  65%|██████▌   | 6512/10000 [00:45<00:23, 149.07it/s]Running 10000 simulations.:  65%|██████▌   | 6527/10000 [00:45<00:23, 147.81it/s]Running 10000 simulations.:  65%|██████▌   | 6542/10000 [00:45<00:23, 146.60it/s]Running 10000 simulations.:  66%|██████▌   | 6557/10000 [00:45<00:23, 146.33it/s]Running 10000 simulations.:  66%|██████▌   | 6572/10000 [00:45<00:23, 145.98it/s]Running 10000 simulations.:  66%|██████▌   | 6587/10000 [00:45<00:23, 145.91it/s]Running 10000 simulations.:  66%|██████▌   | 6602/10000 [00:45<00:23, 146.19it/s]Running 10000 simulations.:  66%|██████▌   | 6617/10000 [00:45<00:23, 145.49it/s]Running 10000 simulations.:  66%|██████▋   | 6632/10000 [00:45<00:23, 144.71it/s]Running 10000 simulations.:  66%|██████▋   | 6647/10000 [00:45<00:23, 144.30it/s]Running 10000 simulations.:  67%|██████▋   | 6662/10000 [00:46<00:23, 144.72it/s]Running 10000 simulations.:  67%|██████▋   | 6677/10000 [00:46<00:22, 144.85it/s]Running 10000 simulations.:  67%|██████▋   | 6693/10000 [00:46<00:22, 147.07it/s]Running 10000 simulations.:  67%|██████▋   | 6709/10000 [00:46<00:22, 148.89it/s]Running 10000 simulations.:  67%|██████▋   | 6726/10000 [00:46<00:21, 152.63it/s]Running 10000 simulations.:  67%|██████▋   | 6742/10000 [00:46<00:21, 153.82it/s]Running 10000 simulations.:  68%|██████▊   | 6758/10000 [00:46<00:21, 154.02it/s]Running 10000 simulations.:  68%|██████▊   | 6774/10000 [00:46<00:20, 154.31it/s]Running 10000 simulations.:  68%|██████▊   | 6790/10000 [00:46<00:20, 154.88it/s]Running 10000 simulations.:  68%|██████▊   | 6807/10000 [00:47<00:20, 157.39it/s]Running 10000 simulations.:  68%|██████▊   | 6824/10000 [00:47<00:19, 159.73it/s]Running 10000 simulations.:  68%|██████▊   | 6840/10000 [00:47<00:21, 150.34it/s]Running 10000 simulations.:  69%|██████▊   | 6856/10000 [00:47<00:22, 137.79it/s]Running 10000 simulations.:  69%|██████▊   | 6871/10000 [00:47<00:23, 133.54it/s]Running 10000 simulations.:  69%|██████▉   | 6885/10000 [00:47<00:23, 131.50it/s]Running 10000 simulations.:  69%|██████▉   | 6899/10000 [00:47<00:23, 130.14it/s]Running 10000 simulations.:  69%|██████▉   | 6913/10000 [00:47<00:24, 127.74it/s]Running 10000 simulations.:  69%|██████▉   | 6926/10000 [00:47<00:24, 127.30it/s]Running 10000 simulations.:  69%|██████▉   | 6939/10000 [00:48<00:24, 125.17it/s]Running 10000 simulations.:  70%|██████▉   | 6952/10000 [00:48<00:24, 124.81it/s]Running 10000 simulations.:  70%|██████▉   | 6965/10000 [00:48<00:24, 124.07it/s]Running 10000 simulations.:  70%|██████▉   | 6978/10000 [00:48<00:24, 122.82it/s]Running 10000 simulations.:  70%|██████▉   | 6991/10000 [00:48<00:24, 122.70it/s]Running 10000 simulations.:  70%|███████   | 7004/10000 [00:48<00:24, 123.74it/s]Running 10000 simulations.:  70%|███████   | 7017/10000 [00:48<00:24, 123.37it/s]Running 10000 simulations.:  70%|███████   | 7030/10000 [00:48<00:24, 123.05it/s]Running 10000 simulations.:  70%|███████   | 7043/10000 [00:48<00:24, 120.96it/s]Running 10000 simulations.:  71%|███████   | 7056/10000 [00:49<00:24, 121.77it/s]Running 10000 simulations.:  71%|███████   | 7070/10000 [00:49<00:23, 126.12it/s]Running 10000 simulations.:  71%|███████   | 7084/10000 [00:49<00:22, 129.27it/s]Running 10000 simulations.:  71%|███████   | 7098/10000 [00:49<00:22, 130.69it/s]Running 10000 simulations.:  71%|███████   | 7112/10000 [00:49<00:21, 132.80it/s]Running 10000 simulations.:  71%|███████▏  | 7127/10000 [00:49<00:21, 135.48it/s]Running 10000 simulations.:  71%|███████▏  | 7142/10000 [00:49<00:20, 137.80it/s]Running 10000 simulations.:  72%|███████▏  | 7157/10000 [00:49<00:20, 139.30it/s]Running 10000 simulations.:  72%|███████▏  | 7171/10000 [00:49<00:20, 137.68it/s]Running 10000 simulations.:  72%|███████▏  | 7185/10000 [00:49<00:21, 132.57it/s]Running 10000 simulations.:  72%|███████▏  | 7199/10000 [00:50<00:22, 123.70it/s]Running 10000 simulations.:  72%|███████▏  | 7212/10000 [00:50<00:23, 118.52it/s]Running 10000 simulations.:  72%|███████▏  | 7225/10000 [00:50<00:24, 113.42it/s]Running 10000 simulations.:  72%|███████▏  | 7237/10000 [00:50<00:24, 112.62it/s]Running 10000 simulations.:  72%|███████▏  | 7249/10000 [00:50<00:24, 112.10it/s]Running 10000 simulations.:  73%|███████▎  | 7261/10000 [00:50<00:24, 112.01it/s]Running 10000 simulations.:  73%|███████▎  | 7273/10000 [00:50<00:24, 111.92it/s]Running 10000 simulations.:  73%|███████▎  | 7285/10000 [00:50<00:24, 110.25it/s]Running 10000 simulations.:  73%|███████▎  | 7297/10000 [00:50<00:24, 109.69it/s]Running 10000 simulations.:  73%|███████▎  | 7308/10000 [00:51<00:25, 107.38it/s]Running 10000 simulations.:  73%|███████▎  | 7319/10000 [00:51<00:24, 108.08it/s]Running 10000 simulations.:  73%|███████▎  | 7330/10000 [00:51<00:24, 107.86it/s]Running 10000 simulations.:  73%|███████▎  | 7341/10000 [00:51<00:24, 106.39it/s]Running 10000 simulations.:  74%|███████▎  | 7353/10000 [00:51<00:24, 107.82it/s]Running 10000 simulations.:  74%|███████▎  | 7365/10000 [00:51<00:24, 108.60it/s]Running 10000 simulations.:  74%|███████▍  | 7380/10000 [00:51<00:22, 117.91it/s]Running 10000 simulations.:  74%|███████▍  | 7397/10000 [00:51<00:20, 128.23it/s]Running 10000 simulations.:  74%|███████▍  | 7414/10000 [00:51<00:18, 136.89it/s]Running 10000 simulations.:  74%|███████▍  | 7431/10000 [00:52<00:17, 143.50it/s]Running 10000 simulations.:  74%|███████▍  | 7448/10000 [00:52<00:17, 148.86it/s]Running 10000 simulations.:  75%|███████▍  | 7464/10000 [00:52<00:16, 151.77it/s]Running 10000 simulations.:  75%|███████▍  | 7480/10000 [00:52<00:16, 153.87it/s]Running 10000 simulations.:  75%|███████▍  | 7496/10000 [00:52<00:16, 155.58it/s]Running 10000 simulations.:  75%|███████▌  | 7512/10000 [00:52<00:15, 156.69it/s]Running 10000 simulations.:  75%|███████▌  | 7528/10000 [00:52<00:15, 157.57it/s]Running 10000 simulations.:  75%|███████▌  | 7544/10000 [00:52<00:15, 158.27it/s]Running 10000 simulations.:  76%|███████▌  | 7560/10000 [00:52<00:15, 157.71it/s]Running 10000 simulations.:  76%|███████▌  | 7576/10000 [00:52<00:15, 157.63it/s]Running 10000 simulations.:  76%|███████▌  | 7593/10000 [00:53<00:15, 158.47it/s]Running 10000 simulations.:  76%|███████▌  | 7609/10000 [00:53<00:15, 158.60it/s]Running 10000 simulations.:  76%|███████▋  | 7625/10000 [00:53<00:15, 158.05it/s]Running 10000 simulations.:  76%|███████▋  | 7641/10000 [00:53<00:14, 157.89it/s]Running 10000 simulations.:  77%|███████▋  | 7658/10000 [00:53<00:14, 158.59it/s]Running 10000 simulations.:  77%|███████▋  | 7675/10000 [00:53<00:14, 159.64it/s]Running 10000 simulations.:  77%|███████▋  | 7692/10000 [00:53<00:14, 160.48it/s]Running 10000 simulations.:  77%|███████▋  | 7709/10000 [00:53<00:14, 160.57it/s]Running 10000 simulations.:  77%|███████▋  | 7726/10000 [00:53<00:14, 160.63it/s]Running 10000 simulations.:  77%|███████▋  | 7743/10000 [00:53<00:14, 160.18it/s]Running 10000 simulations.:  78%|███████▊  | 7760/10000 [00:54<00:13, 160.58it/s]Running 10000 simulations.:  78%|███████▊  | 7777/10000 [00:54<00:13, 160.58it/s]Running 10000 simulations.:  78%|███████▊  | 7794/10000 [00:54<00:13, 161.17it/s]Running 10000 simulations.:  78%|███████▊  | 7811/10000 [00:54<00:13, 161.27it/s]Running 10000 simulations.:  78%|███████▊  | 7828/10000 [00:54<00:13, 160.45it/s]Running 10000 simulations.:  78%|███████▊  | 7845/10000 [00:54<00:13, 159.49it/s]Running 10000 simulations.:  79%|███████▊  | 7861/10000 [00:54<00:13, 159.37it/s]Running 10000 simulations.:  79%|███████▉  | 7877/10000 [00:54<00:13, 159.15it/s]Running 10000 simulations.:  79%|███████▉  | 7893/10000 [00:54<00:13, 159.14it/s]Running 10000 simulations.:  79%|███████▉  | 7909/10000 [00:55<00:13, 159.06it/s]Running 10000 simulations.:  79%|███████▉  | 7925/10000 [00:55<00:13, 158.56it/s]Running 10000 simulations.:  79%|███████▉  | 7941/10000 [00:55<00:13, 157.96it/s]Running 10000 simulations.:  80%|███████▉  | 7957/10000 [00:55<00:12, 157.66it/s]Running 10000 simulations.:  80%|███████▉  | 7973/10000 [00:55<00:12, 158.18it/s]Running 10000 simulations.:  80%|███████▉  | 7989/10000 [00:55<00:12, 158.21it/s]Running 10000 simulations.:  80%|████████  | 8005/10000 [00:55<00:12, 158.26it/s]Running 10000 simulations.:  80%|████████  | 8021/10000 [00:55<00:12, 158.33it/s]Running 10000 simulations.:  80%|████████  | 8037/10000 [00:55<00:12, 158.42it/s]Running 10000 simulations.:  81%|████████  | 8053/10000 [00:55<00:12, 158.36it/s]Running 10000 simulations.:  81%|████████  | 8069/10000 [00:56<00:12, 158.58it/s]Running 10000 simulations.:  81%|████████  | 8085/10000 [00:56<00:12, 158.67it/s]Running 10000 simulations.:  81%|████████  | 8101/10000 [00:56<00:11, 159.02it/s]Running 10000 simulations.:  81%|████████  | 8118/10000 [00:56<00:11, 159.67it/s]Running 10000 simulations.:  81%|████████▏ | 8134/10000 [00:56<00:11, 159.59it/s]Running 10000 simulations.:  82%|████████▏ | 8150/10000 [00:56<00:11, 159.26it/s]Running 10000 simulations.:  82%|████████▏ | 8166/10000 [00:56<00:11, 158.67it/s]Running 10000 simulations.:  82%|████████▏ | 8182/10000 [00:56<00:11, 158.48it/s]Running 10000 simulations.:  82%|████████▏ | 8198/10000 [00:56<00:11, 158.26it/s]Running 10000 simulations.:  82%|████████▏ | 8214/10000 [00:56<00:11, 158.71it/s]Running 10000 simulations.:  82%|████████▏ | 8230/10000 [00:57<00:11, 158.67it/s]Running 10000 simulations.:  82%|████████▏ | 8246/10000 [00:57<00:11, 158.85it/s]Running 10000 simulations.:  83%|████████▎ | 8263/10000 [00:57<00:10, 159.30it/s]Running 10000 simulations.:  83%|████████▎ | 8279/10000 [00:57<00:10, 159.22it/s]Running 10000 simulations.:  83%|████████▎ | 8295/10000 [00:57<00:10, 158.11it/s]Running 10000 simulations.:  83%|████████▎ | 8312/10000 [00:57<00:10, 158.76it/s]Running 10000 simulations.:  83%|████████▎ | 8329/10000 [00:57<00:10, 159.24it/s]Running 10000 simulations.:  83%|████████▎ | 8345/10000 [00:57<00:10, 159.21it/s]Running 10000 simulations.:  84%|████████▎ | 8361/10000 [00:57<00:10, 158.96it/s]Running 10000 simulations.:  84%|████████▍ | 8377/10000 [00:57<00:10, 158.99it/s]Running 10000 simulations.:  84%|████████▍ | 8393/10000 [00:58<00:10, 158.27it/s]Running 10000 simulations.:  84%|████████▍ | 8409/10000 [00:58<00:10, 157.95it/s]Running 10000 simulations.:  84%|████████▍ | 8425/10000 [00:58<00:09, 158.32it/s]Running 10000 simulations.:  84%|████████▍ | 8442/10000 [00:58<00:09, 158.97it/s]Running 10000 simulations.:  85%|████████▍ | 8459/10000 [00:58<00:09, 159.97it/s]Running 10000 simulations.:  85%|████████▍ | 8476/10000 [00:58<00:09, 160.13it/s]Running 10000 simulations.:  85%|████████▍ | 8493/10000 [00:58<00:09, 160.15it/s]Running 10000 simulations.:  85%|████████▌ | 8510/10000 [00:58<00:09, 160.21it/s]Running 10000 simulations.:  85%|████████▌ | 8527/10000 [00:58<00:09, 160.18it/s]Running 10000 simulations.:  85%|████████▌ | 8544/10000 [00:59<00:09, 159.45it/s]Running 10000 simulations.:  86%|████████▌ | 8560/10000 [00:59<00:09, 158.94it/s]Running 10000 simulations.:  86%|████████▌ | 8576/10000 [00:59<00:08, 158.89it/s]Running 10000 simulations.:  86%|████████▌ | 8592/10000 [00:59<00:08, 158.85it/s]Running 10000 simulations.:  86%|████████▌ | 8608/10000 [00:59<00:08, 158.69it/s]Running 10000 simulations.:  86%|████████▌ | 8624/10000 [00:59<00:08, 158.38it/s]Running 10000 simulations.:  86%|████████▋ | 8640/10000 [00:59<00:08, 158.51it/s]Running 10000 simulations.:  87%|████████▋ | 8656/10000 [00:59<00:08, 157.95it/s]Running 10000 simulations.:  87%|████████▋ | 8672/10000 [00:59<00:08, 158.03it/s]Running 10000 simulations.:  87%|████████▋ | 8688/10000 [00:59<00:08, 158.53it/s]Running 10000 simulations.:  87%|████████▋ | 8704/10000 [01:00<00:08, 158.06it/s]Running 10000 simulations.:  87%|████████▋ | 8720/10000 [01:00<00:08, 158.26it/s]Running 10000 simulations.:  87%|████████▋ | 8737/10000 [01:00<00:07, 158.99it/s]Running 10000 simulations.:  88%|████████▊ | 8753/10000 [01:00<00:07, 158.58it/s]Running 10000 simulations.:  88%|████████▊ | 8770/10000 [01:00<00:07, 159.51it/s]Running 10000 simulations.:  88%|████████▊ | 8786/10000 [01:00<00:07, 159.24it/s]Running 10000 simulations.:  88%|████████▊ | 8802/10000 [01:00<00:09, 129.95it/s]Running 10000 simulations.:  88%|████████▊ | 8816/10000 [01:00<00:10, 109.08it/s]Running 10000 simulations.:  88%|████████▊ | 8829/10000 [01:01<00:11, 98.26it/s] Running 10000 simulations.:  88%|████████▊ | 8840/10000 [01:01<00:12, 91.69it/s]Running 10000 simulations.:  88%|████████▊ | 8850/10000 [01:01<00:13, 88.27it/s]Running 10000 simulations.:  89%|████████▊ | 8860/10000 [01:01<00:13, 86.63it/s]Running 10000 simulations.:  89%|████████▊ | 8870/10000 [01:01<00:13, 85.10it/s]Running 10000 simulations.:  89%|████████▉ | 8879/10000 [01:01<00:13, 83.22it/s]Running 10000 simulations.:  89%|████████▉ | 8888/10000 [01:01<00:13, 81.93it/s]Running 10000 simulations.:  89%|████████▉ | 8897/10000 [01:01<00:13, 81.83it/s]Running 10000 simulations.:  89%|████████▉ | 8906/10000 [01:02<00:13, 81.16it/s]Running 10000 simulations.:  89%|████████▉ | 8915/10000 [01:02<00:13, 80.58it/s]Running 10000 simulations.:  89%|████████▉ | 8924/10000 [01:02<00:13, 82.60it/s]Running 10000 simulations.:  89%|████████▉ | 8937/10000 [01:02<00:11, 91.13it/s]Running 10000 simulations.:  90%|████████▉ | 8950/10000 [01:02<00:10, 98.42it/s]Running 10000 simulations.:  90%|████████▉ | 8963/10000 [01:02<00:09, 104.46it/s]Running 10000 simulations.:  90%|████████▉ | 8976/10000 [01:02<00:09, 108.87it/s]Running 10000 simulations.:  90%|████████▉ | 8989/10000 [01:02<00:09, 112.08it/s]Running 10000 simulations.:  90%|█████████ | 9002/10000 [01:02<00:08, 114.56it/s]Running 10000 simulations.:  90%|█████████ | 9015/10000 [01:02<00:08, 116.97it/s]Running 10000 simulations.:  90%|█████████ | 9028/10000 [01:03<00:08, 118.74it/s]Running 10000 simulations.:  90%|█████████ | 9041/10000 [01:03<00:08, 119.61it/s]Running 10000 simulations.:  91%|█████████ | 9054/10000 [01:03<00:07, 120.14it/s]Running 10000 simulations.:  91%|█████████ | 9067/10000 [01:03<00:07, 120.76it/s]Running 10000 simulations.:  91%|█████████ | 9080/10000 [01:03<00:07, 121.01it/s]Running 10000 simulations.:  91%|█████████ | 9093/10000 [01:03<00:07, 121.38it/s]Running 10000 simulations.:  91%|█████████ | 9106/10000 [01:03<00:07, 121.59it/s]Running 10000 simulations.:  91%|█████████ | 9119/10000 [01:03<00:07, 120.89it/s]Running 10000 simulations.:  91%|█████████▏| 9132/10000 [01:03<00:07, 120.79it/s]Running 10000 simulations.:  91%|█████████▏| 9145/10000 [01:04<00:07, 120.89it/s]Running 10000 simulations.:  92%|█████████▏| 9158/10000 [01:04<00:06, 121.07it/s]Running 10000 simulations.:  92%|█████████▏| 9171/10000 [01:04<00:06, 120.44it/s]Running 10000 simulations.:  92%|█████████▏| 9184/10000 [01:04<00:06, 120.29it/s]Running 10000 simulations.:  92%|█████████▏| 9197/10000 [01:04<00:06, 120.38it/s]Running 10000 simulations.:  92%|█████████▏| 9210/10000 [01:04<00:06, 120.95it/s]Running 10000 simulations.:  92%|█████████▏| 9223/10000 [01:04<00:06, 121.82it/s]Running 10000 simulations.:  92%|█████████▏| 9236/10000 [01:04<00:06, 121.64it/s]Running 10000 simulations.:  92%|█████████▏| 9249/10000 [01:04<00:06, 121.27it/s]Running 10000 simulations.:  93%|█████████▎| 9262/10000 [01:05<00:06, 121.11it/s]Running 10000 simulations.:  93%|█████████▎| 9275/10000 [01:05<00:06, 120.65it/s]Running 10000 simulations.:  93%|█████████▎| 9288/10000 [01:05<00:05, 120.82it/s]Running 10000 simulations.:  93%|█████████▎| 9301/10000 [01:05<00:05, 120.76it/s]Running 10000 simulations.:  93%|█████████▎| 9314/10000 [01:05<00:05, 121.15it/s]Running 10000 simulations.:  93%|█████████▎| 9327/10000 [01:05<00:05, 121.74it/s]Running 10000 simulations.:  93%|█████████▎| 9340/10000 [01:05<00:05, 121.71it/s]Running 10000 simulations.:  94%|█████████▎| 9353/10000 [01:05<00:05, 121.34it/s]Running 10000 simulations.:  94%|█████████▎| 9366/10000 [01:05<00:05, 121.22it/s]Running 10000 simulations.:  94%|█████████▍| 9379/10000 [01:05<00:05, 121.49it/s]Running 10000 simulations.:  94%|█████████▍| 9392/10000 [01:06<00:05, 121.46it/s]Running 10000 simulations.:  94%|█████████▍| 9405/10000 [01:06<00:04, 121.67it/s]Running 10000 simulations.:  94%|█████████▍| 9418/10000 [01:06<00:04, 116.90it/s]Running 10000 simulations.:  94%|█████████▍| 9431/10000 [01:06<00:04, 117.98it/s]Running 10000 simulations.:  94%|█████████▍| 9444/10000 [01:06<00:04, 118.71it/s]Running 10000 simulations.:  95%|█████████▍| 9457/10000 [01:06<00:04, 119.91it/s]Running 10000 simulations.:  95%|█████████▍| 9470/10000 [01:06<00:04, 120.74it/s]Running 10000 simulations.:  95%|█████████▍| 9483/10000 [01:06<00:04, 121.13it/s]Running 10000 simulations.:  95%|█████████▍| 9496/10000 [01:06<00:04, 121.74it/s]Running 10000 simulations.:  95%|█████████▌| 9509/10000 [01:07<00:04, 121.47it/s]Running 10000 simulations.:  95%|█████████▌| 9523/10000 [01:07<00:03, 125.72it/s]Running 10000 simulations.:  95%|█████████▌| 9542/10000 [01:07<00:03, 138.67it/s]Running 10000 simulations.:  96%|█████████▌| 9560/10000 [01:07<00:02, 148.14it/s]Running 10000 simulations.:  96%|█████████▌| 9578/10000 [01:07<00:02, 155.68it/s]Running 10000 simulations.:  96%|█████████▌| 9596/10000 [01:07<00:02, 160.31it/s]Running 10000 simulations.:  96%|█████████▌| 9614/10000 [01:07<00:02, 163.37it/s]Running 10000 simulations.:  96%|█████████▋| 9631/10000 [01:07<00:02, 164.99it/s]Running 10000 simulations.:  96%|█████████▋| 9648/10000 [01:07<00:02, 166.45it/s]Running 10000 simulations.:  97%|█████████▋| 9666/10000 [01:07<00:01, 167.52it/s]Running 10000 simulations.:  97%|█████████▋| 9683/10000 [01:08<00:01, 167.58it/s]Running 10000 simulations.:  97%|█████████▋| 9700/10000 [01:08<00:01, 167.88it/s]Running 10000 simulations.:  97%|█████████▋| 9717/10000 [01:08<00:01, 165.21it/s]Running 10000 simulations.:  97%|█████████▋| 9734/10000 [01:08<00:01, 142.33it/s]Running 10000 simulations.:  97%|█████████▋| 9749/10000 [01:08<00:01, 129.82it/s]Running 10000 simulations.:  98%|█████████▊| 9763/10000 [01:08<00:01, 130.39it/s]Running 10000 simulations.:  98%|█████████▊| 9780/10000 [01:08<00:01, 138.37it/s]Running 10000 simulations.:  98%|█████████▊| 9797/10000 [01:08<00:01, 144.29it/s]Running 10000 simulations.:  98%|█████████▊| 9814/10000 [01:09<00:01, 148.84it/s]Running 10000 simulations.:  98%|█████████▊| 9830/10000 [01:09<00:01, 151.69it/s]Running 10000 simulations.:  98%|█████████▊| 9846/10000 [01:09<00:01, 153.49it/s]Running 10000 simulations.:  99%|█████████▊| 9862/10000 [01:09<00:00, 155.20it/s]Running 10000 simulations.:  99%|█████████▉| 9878/10000 [01:09<00:00, 156.25it/s]Running 10000 simulations.:  99%|█████████▉| 9895/10000 [01:09<00:00, 157.34it/s]Running 10000 simulations.:  99%|█████████▉| 9911/10000 [01:09<00:00, 157.91it/s]Running 10000 simulations.:  99%|█████████▉| 9927/10000 [01:09<00:00, 158.22it/s]Running 10000 simulations.:  99%|█████████▉| 9943/10000 [01:09<00:00, 158.71it/s]Running 10000 simulations.: 100%|█████████▉| 9959/10000 [01:09<00:00, 158.99it/s]Running 10000 simulations.: 100%|█████████▉| 9975/10000 [01:10<00:00, 158.93it/s]Running 10000 simulations.: 100%|█████████▉| 9991/10000 [01:10<00:00, 159.05it/s]Running 10000 simulations.: 100%|██████████| 10000/10000 [01:10<00:00, 142.46it/s]
Running 10000 simulations.:   0%|          | 0/10000 [00:00<?, ?it/s]Running 10000 simulations.:   0%|          | 17/10000 [00:00<00:58, 169.99it/s]Running 10000 simulations.:   0%|          | 35/10000 [00:00<00:58, 170.03it/s]Running 10000 simulations.:   1%|          | 52/10000 [00:00<00:58, 169.44it/s]Running 10000 simulations.:   1%|          | 69/10000 [00:00<00:58, 169.22it/s]Running 10000 simulations.:   1%|          | 86/10000 [00:00<00:58, 168.87it/s]Running 10000 simulations.:   1%|          | 103/10000 [00:00<00:58, 169.06it/s]Running 10000 simulations.:   1%|          | 120/10000 [00:00<00:58, 168.81it/s]Running 10000 simulations.:   1%|▏         | 137/10000 [00:00<00:58, 168.91it/s]Running 10000 simulations.:   2%|▏         | 154/10000 [00:00<00:58, 168.25it/s]Running 10000 simulations.:   2%|▏         | 171/10000 [00:01<00:58, 168.41it/s]Running 10000 simulations.:   2%|▏         | 188/10000 [00:01<00:58, 168.30it/s]Running 10000 simulations.:   2%|▏         | 205/10000 [00:01<00:58, 168.24it/s]Running 10000 simulations.:   2%|▏         | 222/10000 [00:01<00:58, 168.26it/s]Running 10000 simulations.:   2%|▏         | 239/10000 [00:01<00:58, 168.10it/s]Running 10000 simulations.:   3%|▎         | 256/10000 [00:01<00:57, 168.36it/s]Running 10000 simulations.:   3%|▎         | 273/10000 [00:01<00:57, 168.12it/s]Running 10000 simulations.:   3%|▎         | 290/10000 [00:01<00:57, 168.07it/s]Running 10000 simulations.:   3%|▎         | 307/10000 [00:01<00:57, 168.16it/s]Running 10000 simulations.:   3%|▎         | 324/10000 [00:01<00:57, 167.70it/s]Running 10000 simulations.:   3%|▎         | 341/10000 [00:02<00:57, 167.84it/s]Running 10000 simulations.:   4%|▎         | 358/10000 [00:02<00:57, 167.72it/s]Running 10000 simulations.:   4%|▍         | 375/10000 [00:02<00:57, 167.96it/s]Running 10000 simulations.:   4%|▍         | 392/10000 [00:02<00:57, 167.66it/s]Running 10000 simulations.:   4%|▍         | 409/10000 [00:02<00:57, 168.16it/s]Running 10000 simulations.:   4%|▍         | 426/10000 [00:02<00:56, 167.99it/s]Running 10000 simulations.:   4%|▍         | 443/10000 [00:02<00:56, 168.08it/s]Running 10000 simulations.:   5%|▍         | 460/10000 [00:02<00:56, 167.77it/s]Running 10000 simulations.:   5%|▍         | 477/10000 [00:02<00:56, 167.32it/s]Running 10000 simulations.:   5%|▍         | 494/10000 [00:02<00:56, 167.32it/s]Running 10000 simulations.:   5%|▌         | 511/10000 [00:03<00:56, 167.41it/s]Running 10000 simulations.:   5%|▌         | 528/10000 [00:03<00:56, 167.28it/s]Running 10000 simulations.:   5%|▌         | 545/10000 [00:03<00:56, 167.38it/s]Running 10000 simulations.:   6%|▌         | 562/10000 [00:03<00:56, 167.54it/s]Running 10000 simulations.:   6%|▌         | 579/10000 [00:03<00:56, 166.06it/s]Running 10000 simulations.:   6%|▌         | 596/10000 [00:03<00:56, 165.44it/s]Running 10000 simulations.:   6%|▌         | 613/10000 [00:03<00:56, 165.68it/s]Running 10000 simulations.:   6%|▋         | 630/10000 [00:03<00:56, 166.06it/s]Running 10000 simulations.:   6%|▋         | 647/10000 [00:03<00:56, 166.28it/s]Running 10000 simulations.:   7%|▋         | 664/10000 [00:03<00:56, 166.51it/s]Running 10000 simulations.:   7%|▋         | 681/10000 [00:04<00:56, 166.07it/s]Running 10000 simulations.:   7%|▋         | 698/10000 [00:04<00:55, 166.36it/s]Running 10000 simulations.:   7%|▋         | 715/10000 [00:04<00:55, 166.57it/s]Running 10000 simulations.:   7%|▋         | 732/10000 [00:04<00:55, 166.59it/s]Running 10000 simulations.:   7%|▋         | 749/10000 [00:04<00:55, 166.89it/s]Running 10000 simulations.:   8%|▊         | 766/10000 [00:04<00:55, 166.55it/s]Running 10000 simulations.:   8%|▊         | 783/10000 [00:04<00:55, 166.79it/s]Running 10000 simulations.:   8%|▊         | 800/10000 [00:04<00:55, 166.69it/s]Running 10000 simulations.:   8%|▊         | 817/10000 [00:04<00:54, 166.99it/s]Running 10000 simulations.:   8%|▊         | 834/10000 [00:04<00:54, 166.78it/s]Running 10000 simulations.:   9%|▊         | 851/10000 [00:05<00:54, 166.72it/s]Running 10000 simulations.:   9%|▊         | 868/10000 [00:05<00:54, 166.41it/s]Running 10000 simulations.:   9%|▉         | 885/10000 [00:05<00:54, 166.60it/s]Running 10000 simulations.:   9%|▉         | 902/10000 [00:05<00:54, 166.37it/s]Running 10000 simulations.:   9%|▉         | 919/10000 [00:05<00:54, 166.26it/s]Running 10000 simulations.:   9%|▉         | 936/10000 [00:05<00:54, 166.13it/s]Running 10000 simulations.:  10%|▉         | 953/10000 [00:05<00:54, 165.87it/s]Running 10000 simulations.:  10%|▉         | 970/10000 [00:05<00:54, 166.26it/s]Running 10000 simulations.:  10%|▉         | 987/10000 [00:05<00:54, 166.15it/s]Running 10000 simulations.:  10%|█         | 1004/10000 [00:06<00:54, 166.51it/s]Running 10000 simulations.:  10%|█         | 1021/10000 [00:06<00:54, 166.22it/s]Running 10000 simulations.:  10%|█         | 1038/10000 [00:06<00:53, 166.46it/s]Running 10000 simulations.:  11%|█         | 1055/10000 [00:06<00:53, 166.36it/s]Running 10000 simulations.:  11%|█         | 1072/10000 [00:06<00:53, 166.73it/s]Running 10000 simulations.:  11%|█         | 1089/10000 [00:06<00:53, 166.53it/s]Running 10000 simulations.:  11%|█         | 1106/10000 [00:06<00:53, 166.38it/s]Running 10000 simulations.:  11%|█         | 1123/10000 [00:06<00:53, 166.06it/s]Running 10000 simulations.:  11%|█▏        | 1140/10000 [00:06<00:53, 166.28it/s]Running 10000 simulations.:  12%|█▏        | 1157/10000 [00:06<00:53, 166.22it/s]Running 10000 simulations.:  12%|█▏        | 1174/10000 [00:07<00:53, 166.33it/s]Running 10000 simulations.:  12%|█▏        | 1191/10000 [00:07<00:52, 166.33it/s]Running 10000 simulations.:  12%|█▏        | 1208/10000 [00:07<00:52, 166.10it/s]Running 10000 simulations.:  12%|█▏        | 1225/10000 [00:07<00:52, 166.32it/s]Running 10000 simulations.:  12%|█▏        | 1242/10000 [00:07<00:52, 165.73it/s]Running 10000 simulations.:  13%|█▎        | 1259/10000 [00:07<00:52, 165.57it/s]Running 10000 simulations.:  13%|█▎        | 1276/10000 [00:07<00:53, 163.68it/s]Running 10000 simulations.:  13%|█▎        | 1293/10000 [00:07<00:53, 161.91it/s]Running 10000 simulations.:  13%|█▎        | 1310/10000 [00:07<00:54, 160.76it/s]Running 10000 simulations.:  13%|█▎        | 1327/10000 [00:07<00:54, 159.92it/s]Running 10000 simulations.:  13%|█▎        | 1343/10000 [00:08<00:54, 159.37it/s]Running 10000 simulations.:  14%|█▎        | 1359/10000 [00:08<00:54, 158.85it/s]Running 10000 simulations.:  14%|█▍        | 1375/10000 [00:08<00:54, 158.82it/s]Running 10000 simulations.:  14%|█▍        | 1391/10000 [00:08<00:54, 158.36it/s]Running 10000 simulations.:  14%|█▍        | 1407/10000 [00:08<00:54, 158.09it/s]Running 10000 simulations.:  14%|█▍        | 1423/10000 [00:08<00:54, 157.91it/s]Running 10000 simulations.:  14%|█▍        | 1439/10000 [00:08<00:54, 157.58it/s]Running 10000 simulations.:  15%|█▍        | 1455/10000 [00:08<00:54, 157.63it/s]Running 10000 simulations.:  15%|█▍        | 1471/10000 [00:08<00:54, 157.64it/s]Running 10000 simulations.:  15%|█▍        | 1487/10000 [00:08<00:53, 157.75it/s]Running 10000 simulations.:  15%|█▌        | 1503/10000 [00:09<00:53, 157.78it/s]Running 10000 simulations.:  15%|█▌        | 1519/10000 [00:09<00:53, 157.81it/s]Running 10000 simulations.:  15%|█▌        | 1535/10000 [00:09<00:53, 157.85it/s]Running 10000 simulations.:  16%|█▌        | 1551/10000 [00:09<00:53, 157.65it/s]Running 10000 simulations.:  16%|█▌        | 1567/10000 [00:09<00:53, 157.33it/s]Running 10000 simulations.:  16%|█▌        | 1583/10000 [00:09<00:53, 157.42it/s]Running 10000 simulations.:  16%|█▌        | 1599/10000 [00:09<00:53, 157.33it/s]Running 10000 simulations.:  16%|█▌        | 1615/10000 [00:09<00:53, 156.97it/s]Running 10000 simulations.:  16%|█▋        | 1631/10000 [00:09<00:53, 157.24it/s]Running 10000 simulations.:  16%|█▋        | 1647/10000 [00:09<00:53, 157.52it/s]Running 10000 simulations.:  17%|█▋        | 1663/10000 [00:10<00:53, 157.26it/s]Running 10000 simulations.:  17%|█▋        | 1679/10000 [00:10<00:52, 157.89it/s]Running 10000 simulations.:  17%|█▋        | 1695/10000 [00:10<00:52, 158.43it/s]Running 10000 simulations.:  17%|█▋        | 1711/10000 [00:10<00:52, 158.83it/s]Running 10000 simulations.:  17%|█▋        | 1727/10000 [00:10<00:52, 158.98it/s]Running 10000 simulations.:  17%|█▋        | 1743/10000 [00:10<00:51, 158.98it/s]Running 10000 simulations.:  18%|█▊        | 1759/10000 [00:10<00:51, 158.76it/s]Running 10000 simulations.:  18%|█▊        | 1775/10000 [00:10<00:51, 158.73it/s]Running 10000 simulations.:  18%|█▊        | 1791/10000 [00:10<00:51, 158.70it/s]Running 10000 simulations.:  18%|█▊        | 1807/10000 [00:11<00:51, 158.71it/s]Running 10000 simulations.:  18%|█▊        | 1824/10000 [00:11<00:50, 160.99it/s]Running 10000 simulations.:  18%|█▊        | 1842/10000 [00:11<00:49, 165.93it/s]Running 10000 simulations.:  19%|█▊        | 1860/10000 [00:11<00:48, 168.36it/s]Running 10000 simulations.:  19%|█▉        | 1877/10000 [00:11<00:48, 168.09it/s]Running 10000 simulations.:  19%|█▉        | 1894/10000 [00:11<00:48, 167.57it/s]Running 10000 simulations.:  19%|█▉        | 1911/10000 [00:11<00:49, 164.74it/s]Running 10000 simulations.:  19%|█▉        | 1928/10000 [00:11<00:50, 161.16it/s]Running 10000 simulations.:  19%|█▉        | 1945/10000 [00:11<00:50, 158.69it/s]Running 10000 simulations.:  20%|█▉        | 1961/10000 [00:11<00:51, 156.76it/s]Running 10000 simulations.:  20%|█▉        | 1977/10000 [00:12<00:51, 156.23it/s]Running 10000 simulations.:  20%|█▉        | 1993/10000 [00:12<00:51, 156.66it/s]Running 10000 simulations.:  20%|██        | 2009/10000 [00:12<00:51, 156.20it/s]Running 10000 simulations.:  20%|██        | 2026/10000 [00:12<00:50, 157.93it/s]Running 10000 simulations.:  20%|██        | 2042/10000 [00:12<00:50, 158.02it/s]Running 10000 simulations.:  21%|██        | 2058/10000 [00:12<00:50, 157.86it/s]Running 10000 simulations.:  21%|██        | 2074/10000 [00:12<00:50, 157.80it/s]Running 10000 simulations.:  21%|██        | 2090/10000 [00:12<00:50, 157.84it/s]Running 10000 simulations.:  21%|██        | 2106/10000 [00:12<00:49, 157.97it/s]Running 10000 simulations.:  21%|██        | 2122/10000 [00:12<00:49, 158.06it/s]Running 10000 simulations.:  21%|██▏       | 2138/10000 [00:13<00:49, 157.95it/s]Running 10000 simulations.:  22%|██▏       | 2154/10000 [00:13<00:49, 158.07it/s]Running 10000 simulations.:  22%|██▏       | 2170/10000 [00:13<00:49, 157.99it/s]Running 10000 simulations.:  22%|██▏       | 2186/10000 [00:13<00:49, 157.71it/s]Running 10000 simulations.:  22%|██▏       | 2202/10000 [00:13<00:49, 157.85it/s]Running 10000 simulations.:  22%|██▏       | 2218/10000 [00:13<00:49, 157.97it/s]Running 10000 simulations.:  22%|██▏       | 2234/10000 [00:13<00:49, 157.97it/s]Running 10000 simulations.:  22%|██▎       | 2250/10000 [00:13<00:49, 158.06it/s]Running 10000 simulations.:  23%|██▎       | 2266/10000 [00:13<00:49, 157.83it/s]Running 10000 simulations.:  23%|██▎       | 2282/10000 [00:13<00:48, 158.04it/s]Running 10000 simulations.:  23%|██▎       | 2298/10000 [00:14<00:48, 158.23it/s]Running 10000 simulations.:  23%|██▎       | 2314/10000 [00:14<00:48, 158.12it/s]Running 10000 simulations.:  23%|██▎       | 2330/10000 [00:14<00:48, 158.21it/s]Running 10000 simulations.:  23%|██▎       | 2346/10000 [00:14<00:48, 158.21it/s]Running 10000 simulations.:  24%|██▎       | 2362/10000 [00:14<00:48, 157.92it/s]Running 10000 simulations.:  24%|██▍       | 2378/10000 [00:14<00:48, 158.22it/s]Running 10000 simulations.:  24%|██▍       | 2394/10000 [00:14<00:48, 157.08it/s]Running 10000 simulations.:  24%|██▍       | 2410/10000 [00:14<00:48, 157.15it/s]Running 10000 simulations.:  24%|██▍       | 2426/10000 [00:14<00:48, 157.44it/s]Running 10000 simulations.:  24%|██▍       | 2442/10000 [00:14<00:47, 157.63it/s]Running 10000 simulations.:  25%|██▍       | 2458/10000 [00:15<00:47, 157.80it/s]Running 10000 simulations.:  25%|██▍       | 2474/10000 [00:15<00:47, 157.78it/s]Running 10000 simulations.:  25%|██▍       | 2490/10000 [00:15<00:47, 157.73it/s]Running 10000 simulations.:  25%|██▌       | 2506/10000 [00:15<00:47, 157.72it/s]Running 10000 simulations.:  25%|██▌       | 2522/10000 [00:15<00:47, 157.99it/s]Running 10000 simulations.:  25%|██▌       | 2538/10000 [00:15<00:47, 157.83it/s]Running 10000 simulations.:  26%|██▌       | 2554/10000 [00:15<00:47, 157.98it/s]Running 10000 simulations.:  26%|██▌       | 2570/10000 [00:15<00:47, 157.75it/s]Running 10000 simulations.:  26%|██▌       | 2586/10000 [00:15<00:46, 158.16it/s]Running 10000 simulations.:  26%|██▌       | 2602/10000 [00:16<00:46, 158.37it/s]Running 10000 simulations.:  26%|██▌       | 2618/10000 [00:16<00:46, 158.20it/s]Running 10000 simulations.:  26%|██▋       | 2634/10000 [00:16<00:46, 158.23it/s]Running 10000 simulations.:  26%|██▋       | 2650/10000 [00:16<00:46, 158.23it/s]Running 10000 simulations.:  27%|██▋       | 2666/10000 [00:16<00:46, 158.24it/s]Running 10000 simulations.:  27%|██▋       | 2682/10000 [00:16<00:46, 158.38it/s]Running 10000 simulations.:  27%|██▋       | 2698/10000 [00:16<00:46, 158.47it/s]Running 10000 simulations.:  27%|██▋       | 2714/10000 [00:16<00:45, 158.75it/s]Running 10000 simulations.:  27%|██▋       | 2730/10000 [00:16<00:45, 158.77it/s]Running 10000 simulations.:  27%|██▋       | 2746/10000 [00:16<00:45, 158.98it/s]Running 10000 simulations.:  28%|██▊       | 2762/10000 [00:17<00:45, 159.27it/s]Running 10000 simulations.:  28%|██▊       | 2778/10000 [00:17<00:45, 158.96it/s]Running 10000 simulations.:  28%|██▊       | 2794/10000 [00:17<00:45, 158.26it/s]Running 10000 simulations.:  28%|██▊       | 2810/10000 [00:17<00:45, 158.08it/s]Running 10000 simulations.:  28%|██▊       | 2826/10000 [00:17<00:45, 158.28it/s]Running 10000 simulations.:  28%|██▊       | 2842/10000 [00:17<00:45, 158.23it/s]Running 10000 simulations.:  29%|██▊       | 2858/10000 [00:17<00:45, 158.22it/s]Running 10000 simulations.:  29%|██▊       | 2874/10000 [00:17<00:45, 157.93it/s]Running 10000 simulations.:  29%|██▉       | 2890/10000 [00:17<00:45, 157.35it/s]Running 10000 simulations.:  29%|██▉       | 2906/10000 [00:17<00:45, 156.42it/s]Running 10000 simulations.:  29%|██▉       | 2922/10000 [00:18<00:45, 155.75it/s]Running 10000 simulations.:  29%|██▉       | 2938/10000 [00:18<00:45, 154.82it/s]Running 10000 simulations.:  30%|██▉       | 2954/10000 [00:18<00:45, 154.49it/s]Running 10000 simulations.:  30%|██▉       | 2970/10000 [00:18<00:45, 154.35it/s]Running 10000 simulations.:  30%|██▉       | 2986/10000 [00:18<00:45, 154.73it/s]Running 10000 simulations.:  30%|███       | 3002/10000 [00:18<00:45, 154.68it/s]Running 10000 simulations.:  30%|███       | 3018/10000 [00:18<00:45, 154.49it/s]Running 10000 simulations.:  30%|███       | 3034/10000 [00:18<00:45, 154.10it/s]Running 10000 simulations.:  30%|███       | 3050/10000 [00:18<00:45, 153.96it/s]Running 10000 simulations.:  31%|███       | 3066/10000 [00:18<00:45, 154.08it/s]Running 10000 simulations.:  31%|███       | 3082/10000 [00:19<00:44, 154.29it/s]Running 10000 simulations.:  31%|███       | 3098/10000 [00:19<00:44, 154.21it/s]Running 10000 simulations.:  31%|███       | 3114/10000 [00:19<00:44, 154.16it/s]Running 10000 simulations.:  31%|███▏      | 3130/10000 [00:19<00:44, 153.79it/s]Running 10000 simulations.:  31%|███▏      | 3146/10000 [00:19<00:44, 153.78it/s]Running 10000 simulations.:  32%|███▏      | 3162/10000 [00:19<00:44, 153.84it/s]Running 10000 simulations.:  32%|███▏      | 3178/10000 [00:19<00:44, 153.73it/s]Running 10000 simulations.:  32%|███▏      | 3194/10000 [00:19<00:44, 153.48it/s]Running 10000 simulations.:  32%|███▏      | 3210/10000 [00:19<00:44, 153.62it/s]Running 10000 simulations.:  32%|███▏      | 3226/10000 [00:20<00:44, 153.40it/s]Running 10000 simulations.:  32%|███▏      | 3242/10000 [00:20<00:44, 153.03it/s]Running 10000 simulations.:  33%|███▎      | 3258/10000 [00:20<00:44, 153.02it/s]Running 10000 simulations.:  33%|███▎      | 3274/10000 [00:20<00:44, 152.76it/s]Running 10000 simulations.:  33%|███▎      | 3290/10000 [00:20<00:43, 152.90it/s]Running 10000 simulations.:  33%|███▎      | 3306/10000 [00:20<00:43, 152.69it/s]Running 10000 simulations.:  33%|███▎      | 3322/10000 [00:20<00:43, 152.94it/s]Running 10000 simulations.:  33%|███▎      | 3338/10000 [00:20<00:43, 152.57it/s]Running 10000 simulations.:  34%|███▎      | 3354/10000 [00:20<00:43, 152.32it/s]Running 10000 simulations.:  34%|███▎      | 3370/10000 [00:20<00:43, 152.37it/s]Running 10000 simulations.:  34%|███▍      | 3386/10000 [00:21<00:43, 152.42it/s]Running 10000 simulations.:  34%|███▍      | 3402/10000 [00:21<00:42, 153.47it/s]Running 10000 simulations.:  34%|███▍      | 3421/10000 [00:21<00:40, 161.26it/s]Running 10000 simulations.:  34%|███▍      | 3439/10000 [00:21<00:39, 165.67it/s]Running 10000 simulations.:  35%|███▍      | 3457/10000 [00:21<00:38, 168.08it/s]Running 10000 simulations.:  35%|███▍      | 3475/10000 [00:21<00:38, 169.83it/s]Running 10000 simulations.:  35%|███▍      | 3493/10000 [00:21<00:38, 170.34it/s]Running 10000 simulations.:  35%|███▌      | 3511/10000 [00:21<00:38, 170.56it/s]Running 10000 simulations.:  35%|███▌      | 3529/10000 [00:21<00:38, 170.11it/s]Running 10000 simulations.:  35%|███▌      | 3547/10000 [00:22<00:37, 169.97it/s]Running 10000 simulations.:  36%|███▌      | 3565/10000 [00:22<00:37, 169.47it/s]Running 10000 simulations.:  36%|███▌      | 3582/10000 [00:22<00:38, 168.84it/s]Running 10000 simulations.:  36%|███▌      | 3599/10000 [00:22<00:38, 167.93it/s]Running 10000 simulations.:  36%|███▌      | 3616/10000 [00:22<00:41, 153.59it/s]Running 10000 simulations.:  36%|███▋      | 3632/10000 [00:22<00:45, 139.15it/s]Running 10000 simulations.:  36%|███▋      | 3647/10000 [00:22<00:48, 131.21it/s]Running 10000 simulations.:  37%|███▋      | 3661/10000 [00:22<00:50, 126.11it/s]Running 10000 simulations.:  37%|███▋      | 3674/10000 [00:22<00:51, 123.25it/s]Running 10000 simulations.:  37%|███▋      | 3687/10000 [00:23<00:51, 121.75it/s]Running 10000 simulations.:  37%|███▋      | 3700/10000 [00:23<00:52, 120.22it/s]Running 10000 simulations.:  37%|███▋      | 3713/10000 [00:23<00:52, 118.75it/s]Running 10000 simulations.:  37%|███▋      | 3725/10000 [00:23<00:53, 118.33it/s]Running 10000 simulations.:  37%|███▋      | 3737/10000 [00:23<00:52, 118.33it/s]Running 10000 simulations.:  38%|███▊      | 3750/10000 [00:23<00:52, 118.75it/s]Running 10000 simulations.:  38%|███▊      | 3762/10000 [00:23<00:52, 118.43it/s]Running 10000 simulations.:  38%|███▊      | 3774/10000 [00:23<00:52, 117.64it/s]Running 10000 simulations.:  38%|███▊      | 3787/10000 [00:23<00:52, 118.52it/s]Running 10000 simulations.:  38%|███▊      | 3799/10000 [00:24<00:52, 118.68it/s]Running 10000 simulations.:  38%|███▊      | 3811/10000 [00:24<00:52, 117.72it/s]Running 10000 simulations.:  38%|███▊      | 3823/10000 [00:24<00:53, 115.39it/s]Running 10000 simulations.:  38%|███▊      | 3835/10000 [00:24<00:53, 115.49it/s]Running 10000 simulations.:  38%|███▊      | 3847/10000 [00:24<00:53, 115.42it/s]Running 10000 simulations.:  39%|███▊      | 3859/10000 [00:24<00:52, 116.01it/s]Running 10000 simulations.:  39%|███▊      | 3871/10000 [00:24<00:52, 116.33it/s]Running 10000 simulations.:  39%|███▉      | 3883/10000 [00:24<00:52, 116.62it/s]Running 10000 simulations.:  39%|███▉      | 3895/10000 [00:24<00:52, 116.70it/s]Running 10000 simulations.:  39%|███▉      | 3907/10000 [00:24<00:52, 116.81it/s]Running 10000 simulations.:  39%|███▉      | 3919/10000 [00:25<00:52, 116.36it/s]Running 10000 simulations.:  39%|███▉      | 3931/10000 [00:25<00:51, 117.12it/s]Running 10000 simulations.:  39%|███▉      | 3945/10000 [00:25<00:50, 121.07it/s]Running 10000 simulations.:  40%|███▉      | 3959/10000 [00:25<00:48, 123.87it/s]Running 10000 simulations.:  40%|███▉      | 3973/10000 [00:25<00:47, 126.07it/s]Running 10000 simulations.:  40%|███▉      | 3987/10000 [00:25<00:47, 127.73it/s]Running 10000 simulations.:  40%|████      | 4001/10000 [00:25<00:46, 128.61it/s]Running 10000 simulations.:  40%|████      | 4015/10000 [00:25<00:46, 129.30it/s]Running 10000 simulations.:  40%|████      | 4028/10000 [00:25<00:46, 128.77it/s]Running 10000 simulations.:  40%|████      | 4042/10000 [00:25<00:46, 129.30it/s]Running 10000 simulations.:  41%|████      | 4056/10000 [00:26<00:45, 130.03it/s]Running 10000 simulations.:  41%|████      | 4070/10000 [00:26<00:45, 130.36it/s]Running 10000 simulations.:  41%|████      | 4084/10000 [00:26<00:45, 130.68it/s]Running 10000 simulations.:  41%|████      | 4098/10000 [00:26<00:45, 130.85it/s]Running 10000 simulations.:  41%|████      | 4112/10000 [00:26<00:45, 130.71it/s]Running 10000 simulations.:  41%|████▏     | 4126/10000 [00:26<00:44, 130.89it/s]Running 10000 simulations.:  41%|████▏     | 4140/10000 [00:26<00:44, 130.85it/s]Running 10000 simulations.:  42%|████▏     | 4154/10000 [00:26<00:44, 131.00it/s]Running 10000 simulations.:  42%|████▏     | 4168/10000 [00:26<00:44, 130.92it/s]Running 10000 simulations.:  42%|████▏     | 4182/10000 [00:27<00:44, 131.03it/s]Running 10000 simulations.:  42%|████▏     | 4196/10000 [00:27<00:44, 131.12it/s]Running 10000 simulations.:  42%|████▏     | 4210/10000 [00:27<00:44, 131.26it/s]Running 10000 simulations.:  42%|████▏     | 4224/10000 [00:27<00:44, 131.25it/s]Running 10000 simulations.:  42%|████▏     | 4238/10000 [00:27<00:43, 131.42it/s]Running 10000 simulations.:  43%|████▎     | 4252/10000 [00:27<00:43, 131.27it/s]Running 10000 simulations.:  43%|████▎     | 4266/10000 [00:27<00:43, 131.46it/s]Running 10000 simulations.:  43%|████▎     | 4280/10000 [00:27<00:43, 131.21it/s]Running 10000 simulations.:  43%|████▎     | 4294/10000 [00:27<00:43, 131.17it/s]Running 10000 simulations.:  43%|████▎     | 4308/10000 [00:28<00:43, 131.30it/s]Running 10000 simulations.:  43%|████▎     | 4322/10000 [00:28<00:43, 131.36it/s]Running 10000 simulations.:  43%|████▎     | 4336/10000 [00:28<00:43, 131.61it/s]Running 10000 simulations.:  44%|████▎     | 4350/10000 [00:28<00:44, 126.31it/s]Running 10000 simulations.:  44%|████▎     | 4364/10000 [00:28<00:44, 127.59it/s]Running 10000 simulations.:  44%|████▍     | 4378/10000 [00:28<00:43, 128.73it/s]Running 10000 simulations.:  44%|████▍     | 4391/10000 [00:28<00:43, 129.05it/s]Running 10000 simulations.:  44%|████▍     | 4405/10000 [00:28<00:43, 129.66it/s]Running 10000 simulations.:  44%|████▍     | 4419/10000 [00:28<00:42, 130.24it/s]Running 10000 simulations.:  44%|████▍     | 4433/10000 [00:28<00:42, 130.53it/s]Running 10000 simulations.:  44%|████▍     | 4447/10000 [00:29<00:42, 130.87it/s]Running 10000 simulations.:  45%|████▍     | 4461/10000 [00:29<00:42, 131.13it/s]Running 10000 simulations.:  45%|████▍     | 4475/10000 [00:29<00:42, 131.06it/s]Running 10000 simulations.:  45%|████▍     | 4489/10000 [00:29<00:41, 131.22it/s]Running 10000 simulations.:  45%|████▌     | 4503/10000 [00:29<00:41, 131.41it/s]Running 10000 simulations.:  45%|████▌     | 4517/10000 [00:29<00:41, 131.59it/s]Running 10000 simulations.:  45%|████▌     | 4531/10000 [00:29<00:41, 131.53it/s]Running 10000 simulations.:  45%|████▌     | 4545/10000 [00:29<00:41, 131.67it/s]Running 10000 simulations.:  46%|████▌     | 4559/10000 [00:29<00:41, 131.55it/s]Running 10000 simulations.:  46%|████▌     | 4573/10000 [00:30<00:41, 131.51it/s]Running 10000 simulations.:  46%|████▌     | 4587/10000 [00:30<00:41, 131.61it/s]Running 10000 simulations.:  46%|████▌     | 4601/10000 [00:30<00:41, 131.66it/s]Running 10000 simulations.:  46%|████▌     | 4615/10000 [00:30<00:40, 131.36it/s]Running 10000 simulations.:  46%|████▋     | 4629/10000 [00:30<00:40, 131.35it/s]Running 10000 simulations.:  46%|████▋     | 4643/10000 [00:30<00:40, 131.45it/s]Running 10000 simulations.:  47%|████▋     | 4657/10000 [00:30<00:40, 131.41it/s]Running 10000 simulations.:  47%|████▋     | 4671/10000 [00:30<00:40, 131.53it/s]Running 10000 simulations.:  47%|████▋     | 4685/10000 [00:30<00:40, 131.48it/s]Running 10000 simulations.:  47%|████▋     | 4699/10000 [00:31<00:40, 131.60it/s]Running 10000 simulations.:  47%|████▋     | 4713/10000 [00:31<00:40, 131.46it/s]Running 10000 simulations.:  47%|████▋     | 4727/10000 [00:31<00:40, 131.34it/s]Running 10000 simulations.:  47%|████▋     | 4741/10000 [00:31<00:40, 131.30it/s]Running 10000 simulations.:  48%|████▊     | 4755/10000 [00:31<00:39, 131.30it/s]Running 10000 simulations.:  48%|████▊     | 4769/10000 [00:31<00:39, 131.15it/s]Running 10000 simulations.:  48%|████▊     | 4783/10000 [00:31<00:39, 131.39it/s]Running 10000 simulations.:  48%|████▊     | 4797/10000 [00:31<00:39, 131.57it/s]Running 10000 simulations.:  48%|████▊     | 4811/10000 [00:31<00:39, 131.67it/s]Running 10000 simulations.:  48%|████▊     | 4825/10000 [00:31<00:39, 131.50it/s]Running 10000 simulations.:  48%|████▊     | 4839/10000 [00:32<00:39, 131.45it/s]Running 10000 simulations.:  49%|████▊     | 4853/10000 [00:32<00:39, 131.42it/s]Running 10000 simulations.:  49%|████▊     | 4867/10000 [00:32<00:39, 131.27it/s]Running 10000 simulations.:  49%|████▉     | 4881/10000 [00:32<00:38, 131.26it/s]Running 10000 simulations.:  49%|████▉     | 4895/10000 [00:32<00:38, 131.20it/s]Running 10000 simulations.:  49%|████▉     | 4909/10000 [00:32<00:38, 131.25it/s]Running 10000 simulations.:  49%|████▉     | 4923/10000 [00:32<00:38, 131.37it/s]Running 10000 simulations.:  49%|████▉     | 4937/10000 [00:32<00:38, 131.38it/s]Running 10000 simulations.:  50%|████▉     | 4951/10000 [00:32<00:38, 131.38it/s]Running 10000 simulations.:  50%|████▉     | 4965/10000 [00:33<00:38, 131.45it/s]Running 10000 simulations.:  50%|████▉     | 4979/10000 [00:33<00:38, 131.48it/s]Running 10000 simulations.:  50%|████▉     | 4993/10000 [00:33<00:38, 131.53it/s]Running 10000 simulations.:  50%|█████     | 5007/10000 [00:33<00:37, 131.74it/s]Running 10000 simulations.:  50%|█████     | 5021/10000 [00:33<00:37, 131.70it/s]Running 10000 simulations.:  50%|█████     | 5035/10000 [00:33<00:37, 131.71it/s]Running 10000 simulations.:  50%|█████     | 5049/10000 [00:33<00:37, 131.65it/s]Running 10000 simulations.:  51%|█████     | 5063/10000 [00:33<00:37, 131.27it/s]Running 10000 simulations.:  51%|█████     | 5077/10000 [00:33<00:37, 131.22it/s]Running 10000 simulations.:  51%|█████     | 5091/10000 [00:33<00:37, 131.15it/s]Running 10000 simulations.:  51%|█████     | 5105/10000 [00:34<00:37, 131.20it/s]Running 10000 simulations.:  51%|█████     | 5119/10000 [00:34<00:37, 131.29it/s]Running 10000 simulations.:  51%|█████▏    | 5133/10000 [00:34<00:37, 131.24it/s]Running 10000 simulations.:  51%|█████▏    | 5147/10000 [00:34<00:36, 131.29it/s]Running 10000 simulations.:  52%|█████▏    | 5161/10000 [00:34<00:36, 131.31it/s]Running 10000 simulations.:  52%|█████▏    | 5175/10000 [00:34<00:36, 131.29it/s]Running 10000 simulations.:  52%|█████▏    | 5189/10000 [00:34<00:36, 131.49it/s]Running 10000 simulations.:  52%|█████▏    | 5203/10000 [00:34<00:36, 131.36it/s]Running 10000 simulations.:  52%|█████▏    | 5217/10000 [00:34<00:36, 131.22it/s]Running 10000 simulations.:  52%|█████▏    | 5231/10000 [00:35<00:36, 131.31it/s]Running 10000 simulations.:  52%|█████▏    | 5245/10000 [00:35<00:36, 131.31it/s]Running 10000 simulations.:  53%|█████▎    | 5259/10000 [00:35<00:36, 131.50it/s]Running 10000 simulations.:  53%|█████▎    | 5273/10000 [00:35<00:35, 131.42it/s]Running 10000 simulations.:  53%|█████▎    | 5287/10000 [00:35<00:35, 131.46it/s]Running 10000 simulations.:  53%|█████▎    | 5301/10000 [00:35<00:35, 131.43it/s]Running 10000 simulations.:  53%|█████▎    | 5315/10000 [00:35<00:35, 131.36it/s]Running 10000 simulations.:  53%|█████▎    | 5329/10000 [00:35<00:35, 131.26it/s]Running 10000 simulations.:  53%|█████▎    | 5343/10000 [00:35<00:35, 131.16it/s]Running 10000 simulations.:  54%|█████▎    | 5357/10000 [00:36<00:35, 131.07it/s]Running 10000 simulations.:  54%|█████▎    | 5371/10000 [00:36<00:35, 130.86it/s]Running 10000 simulations.:  54%|█████▍    | 5385/10000 [00:36<00:35, 131.10it/s]Running 10000 simulations.:  54%|█████▍    | 5399/10000 [00:36<00:35, 130.98it/s]Running 10000 simulations.:  54%|█████▍    | 5413/10000 [00:36<00:35, 130.84it/s]Running 10000 simulations.:  54%|█████▍    | 5427/10000 [00:36<00:34, 130.96it/s]Running 10000 simulations.:  54%|█████▍    | 5441/10000 [00:36<00:34, 130.92it/s]Running 10000 simulations.:  55%|█████▍    | 5455/10000 [00:36<00:34, 130.87it/s]Running 10000 simulations.:  55%|█████▍    | 5469/10000 [00:36<00:34, 131.28it/s]Running 10000 simulations.:  55%|█████▍    | 5483/10000 [00:36<00:34, 131.30it/s]Running 10000 simulations.:  55%|█████▍    | 5497/10000 [00:37<00:34, 131.37it/s]Running 10000 simulations.:  55%|█████▌    | 5511/10000 [00:37<00:34, 131.33it/s]Running 10000 simulations.:  55%|█████▌    | 5525/10000 [00:37<00:34, 131.36it/s]Running 10000 simulations.:  55%|█████▌    | 5540/10000 [00:37<00:32, 135.89it/s]Running 10000 simulations.:  56%|█████▌    | 5557/10000 [00:37<00:30, 143.90it/s]Running 10000 simulations.:  56%|█████▌    | 5575/10000 [00:37<00:29, 152.33it/s]Running 10000 simulations.:  56%|█████▌    | 5592/10000 [00:37<00:28, 156.93it/s]Running 10000 simulations.:  56%|█████▌    | 5609/10000 [00:37<00:27, 159.81it/s]Running 10000 simulations.:  56%|█████▋    | 5626/10000 [00:37<00:27, 161.79it/s]Running 10000 simulations.:  56%|█████▋    | 5643/10000 [00:38<00:26, 163.41it/s]Running 10000 simulations.:  57%|█████▋    | 5660/10000 [00:38<00:26, 164.26it/s]Running 10000 simulations.:  57%|█████▋    | 5677/10000 [00:38<00:26, 162.91it/s]Running 10000 simulations.:  57%|█████▋    | 5694/10000 [00:38<00:26, 164.31it/s]Running 10000 simulations.:  57%|█████▋    | 5711/10000 [00:38<00:26, 164.70it/s]Running 10000 simulations.:  57%|█████▋    | 5728/10000 [00:38<00:25, 164.77it/s]Running 10000 simulations.:  57%|█████▋    | 5745/10000 [00:38<00:25, 164.88it/s]Running 10000 simulations.:  58%|█████▊    | 5762/10000 [00:38<00:25, 165.09it/s]Running 10000 simulations.:  58%|█████▊    | 5779/10000 [00:38<00:25, 164.87it/s]Running 10000 simulations.:  58%|█████▊    | 5796/10000 [00:38<00:25, 165.15it/s]Running 10000 simulations.:  58%|█████▊    | 5813/10000 [00:39<00:25, 165.24it/s]Running 10000 simulations.:  58%|█████▊    | 5830/10000 [00:39<00:25, 165.55it/s]Running 10000 simulations.:  58%|█████▊    | 5847/10000 [00:39<00:25, 165.42it/s]Running 10000 simulations.:  59%|█████▊    | 5864/10000 [00:39<00:25, 165.33it/s]Running 10000 simulations.:  59%|█████▉    | 5881/10000 [00:39<00:24, 165.40it/s]Running 10000 simulations.:  59%|█████▉    | 5898/10000 [00:39<00:24, 165.24it/s]Running 10000 simulations.:  59%|█████▉    | 5915/10000 [00:39<00:24, 165.26it/s]Running 10000 simulations.:  59%|█████▉    | 5932/10000 [00:39<00:24, 165.48it/s]Running 10000 simulations.:  59%|█████▉    | 5949/10000 [00:39<00:24, 165.75it/s]Running 10000 simulations.:  60%|█████▉    | 5966/10000 [00:39<00:24, 165.76it/s]Running 10000 simulations.:  60%|█████▉    | 5983/10000 [00:40<00:24, 165.71it/s]Running 10000 simulations.:  60%|██████    | 6000/10000 [00:40<00:24, 165.12it/s]Running 10000 simulations.:  60%|██████    | 6017/10000 [00:40<00:24, 165.11it/s]Running 10000 simulations.:  60%|██████    | 6034/10000 [00:40<00:24, 165.07it/s]Running 10000 simulations.:  61%|██████    | 6051/10000 [00:40<00:23, 165.21it/s]Running 10000 simulations.:  61%|██████    | 6068/10000 [00:40<00:23, 164.67it/s]Running 10000 simulations.:  61%|██████    | 6085/10000 [00:40<00:24, 162.80it/s]Running 10000 simulations.:  61%|██████    | 6102/10000 [00:40<00:23, 163.49it/s]Running 10000 simulations.:  61%|██████    | 6119/10000 [00:40<00:23, 164.15it/s]Running 10000 simulations.:  61%|██████▏   | 6136/10000 [00:41<00:23, 164.07it/s]Running 10000 simulations.:  62%|██████▏   | 6153/10000 [00:41<00:23, 161.54it/s]Running 10000 simulations.:  62%|██████▏   | 6170/10000 [00:41<00:23, 159.87it/s]Running 10000 simulations.:  62%|██████▏   | 6186/10000 [00:41<00:24, 158.46it/s]Running 10000 simulations.:  62%|██████▏   | 6202/10000 [00:41<00:24, 157.67it/s]Running 10000 simulations.:  62%|██████▏   | 6218/10000 [00:41<00:24, 157.50it/s]Running 10000 simulations.:  62%|██████▏   | 6235/10000 [00:41<00:23, 159.19it/s]Running 10000 simulations.:  63%|██████▎   | 6251/10000 [00:41<00:23, 158.90it/s]Running 10000 simulations.:  63%|██████▎   | 6268/10000 [00:41<00:23, 161.15it/s]Running 10000 simulations.:  63%|██████▎   | 6285/10000 [00:41<00:22, 162.44it/s]Running 10000 simulations.:  63%|██████▎   | 6302/10000 [00:42<00:22, 163.40it/s]Running 10000 simulations.:  63%|██████▎   | 6319/10000 [00:42<00:22, 164.28it/s]Running 10000 simulations.:  63%|██████▎   | 6336/10000 [00:42<00:22, 164.66it/s]Running 10000 simulations.:  64%|██████▎   | 6353/10000 [00:42<00:22, 164.82it/s]Running 10000 simulations.:  64%|██████▎   | 6370/10000 [00:42<00:21, 165.31it/s]Running 10000 simulations.:  64%|██████▍   | 6387/10000 [00:42<00:21, 165.40it/s]Running 10000 simulations.:  64%|██████▍   | 6404/10000 [00:42<00:21, 165.51it/s]Running 10000 simulations.:  64%|██████▍   | 6421/10000 [00:42<00:21, 165.01it/s]Running 10000 simulations.:  64%|██████▍   | 6438/10000 [00:42<00:21, 165.02it/s]Running 10000 simulations.:  65%|██████▍   | 6455/10000 [00:42<00:21, 164.93it/s]Running 10000 simulations.:  65%|██████▍   | 6472/10000 [00:43<00:21, 164.65it/s]Running 10000 simulations.:  65%|██████▍   | 6489/10000 [00:43<00:21, 164.75it/s]Running 10000 simulations.:  65%|██████▌   | 6506/10000 [00:43<00:21, 164.67it/s]Running 10000 simulations.:  65%|██████▌   | 6523/10000 [00:43<00:21, 164.72it/s]Running 10000 simulations.:  65%|██████▌   | 6540/10000 [00:43<00:21, 164.53it/s]Running 10000 simulations.:  66%|██████▌   | 6557/10000 [00:43<00:20, 164.39it/s]Running 10000 simulations.:  66%|██████▌   | 6574/10000 [00:43<00:20, 164.35it/s]Running 10000 simulations.:  66%|██████▌   | 6591/10000 [00:43<00:20, 164.30it/s]Running 10000 simulations.:  66%|██████▌   | 6608/10000 [00:43<00:20, 164.55it/s]Running 10000 simulations.:  66%|██████▋   | 6625/10000 [00:43<00:20, 164.40it/s]Running 10000 simulations.:  66%|██████▋   | 6642/10000 [00:44<00:20, 164.47it/s]Running 10000 simulations.:  67%|██████▋   | 6659/10000 [00:44<00:20, 164.39it/s]Running 10000 simulations.:  67%|██████▋   | 6676/10000 [00:44<00:20, 164.16it/s]Running 10000 simulations.:  67%|██████▋   | 6693/10000 [00:44<00:20, 164.20it/s]Running 10000 simulations.:  67%|██████▋   | 6710/10000 [00:44<00:19, 164.70it/s]Running 10000 simulations.:  67%|██████▋   | 6727/10000 [00:44<00:19, 165.21it/s]Running 10000 simulations.:  67%|██████▋   | 6744/10000 [00:44<00:19, 164.95it/s]Running 10000 simulations.:  68%|██████▊   | 6761/10000 [00:44<00:19, 164.35it/s]Running 10000 simulations.:  68%|██████▊   | 6778/10000 [00:44<00:19, 164.50it/s]Running 10000 simulations.:  68%|██████▊   | 6795/10000 [00:45<00:19, 164.46it/s]Running 10000 simulations.:  68%|██████▊   | 6812/10000 [00:45<00:19, 164.50it/s]Running 10000 simulations.:  68%|██████▊   | 6829/10000 [00:45<00:19, 164.42it/s]Running 10000 simulations.:  68%|██████▊   | 6846/10000 [00:45<00:19, 164.13it/s]Running 10000 simulations.:  69%|██████▊   | 6863/10000 [00:45<00:19, 164.11it/s]Running 10000 simulations.:  69%|██████▉   | 6880/10000 [00:45<00:19, 164.04it/s]Running 10000 simulations.:  69%|██████▉   | 6897/10000 [00:45<00:18, 164.49it/s]Running 10000 simulations.:  69%|██████▉   | 6914/10000 [00:45<00:18, 164.63it/s]Running 10000 simulations.:  69%|██████▉   | 6931/10000 [00:45<00:18, 164.65it/s]Running 10000 simulations.:  69%|██████▉   | 6948/10000 [00:45<00:18, 164.21it/s]Running 10000 simulations.:  70%|██████▉   | 6965/10000 [00:46<00:18, 159.79it/s]Running 10000 simulations.:  70%|██████▉   | 6982/10000 [00:46<00:19, 153.34it/s]Running 10000 simulations.:  70%|██████▉   | 6998/10000 [00:46<00:19, 153.39it/s]Running 10000 simulations.:  70%|███████   | 7014/10000 [00:46<00:19, 154.92it/s]Running 10000 simulations.:  70%|███████   | 7030/10000 [00:46<00:19, 156.28it/s]Running 10000 simulations.:  70%|███████   | 7046/10000 [00:46<00:18, 156.19it/s]Running 10000 simulations.:  71%|███████   | 7062/10000 [00:46<00:18, 155.54it/s]Running 10000 simulations.:  71%|███████   | 7078/10000 [00:46<00:18, 155.26it/s]Running 10000 simulations.:  71%|███████   | 7094/10000 [00:46<00:18, 155.89it/s]Running 10000 simulations.:  71%|███████   | 7111/10000 [00:47<00:18, 157.73it/s]Running 10000 simulations.:  71%|███████▏  | 7128/10000 [00:47<00:17, 160.23it/s]Running 10000 simulations.:  71%|███████▏  | 7145/10000 [00:47<00:18, 158.09it/s]Running 10000 simulations.:  72%|███████▏  | 7161/10000 [00:47<00:18, 155.53it/s]Running 10000 simulations.:  72%|███████▏  | 7177/10000 [00:47<00:18, 154.93it/s]Running 10000 simulations.:  72%|███████▏  | 7193/10000 [00:47<00:18, 154.16it/s]Running 10000 simulations.:  72%|███████▏  | 7209/10000 [00:47<00:18, 153.71it/s]Running 10000 simulations.:  72%|███████▏  | 7225/10000 [00:47<00:18, 153.53it/s]Running 10000 simulations.:  72%|███████▏  | 7241/10000 [00:47<00:17, 153.36it/s]Running 10000 simulations.:  73%|███████▎  | 7257/10000 [00:47<00:17, 152.91it/s]Running 10000 simulations.:  73%|███████▎  | 7273/10000 [00:48<00:17, 153.02it/s]Running 10000 simulations.:  73%|███████▎  | 7289/10000 [00:48<00:17, 152.94it/s]Running 10000 simulations.:  73%|███████▎  | 7305/10000 [00:48<00:17, 152.91it/s]Running 10000 simulations.:  73%|███████▎  | 7321/10000 [00:48<00:17, 151.24it/s]Running 10000 simulations.:  73%|███████▎  | 7337/10000 [00:48<00:17, 151.56it/s]Running 10000 simulations.:  74%|███████▎  | 7353/10000 [00:48<00:17, 151.83it/s]Running 10000 simulations.:  74%|███████▎  | 7369/10000 [00:48<00:17, 152.30it/s]Running 10000 simulations.:  74%|███████▍  | 7385/10000 [00:48<00:17, 152.48it/s]Running 10000 simulations.:  74%|███████▍  | 7401/10000 [00:48<00:17, 152.07it/s]Running 10000 simulations.:  74%|███████▍  | 7417/10000 [00:49<00:16, 152.02it/s]Running 10000 simulations.:  74%|███████▍  | 7433/10000 [00:49<00:17, 149.43it/s]Running 10000 simulations.:  74%|███████▍  | 7448/10000 [00:49<00:17, 144.28it/s]Running 10000 simulations.:  75%|███████▍  | 7463/10000 [00:49<00:18, 134.76it/s]Running 10000 simulations.:  75%|███████▍  | 7477/10000 [00:49<00:19, 131.26it/s]Running 10000 simulations.:  75%|███████▍  | 7491/10000 [00:49<00:19, 128.97it/s]Running 10000 simulations.:  75%|███████▌  | 7504/10000 [00:49<00:19, 126.71it/s]Running 10000 simulations.:  75%|███████▌  | 7517/10000 [00:49<00:20, 123.35it/s]Running 10000 simulations.:  75%|███████▌  | 7530/10000 [00:49<00:20, 120.15it/s]Running 10000 simulations.:  75%|███████▌  | 7543/10000 [00:50<00:20, 120.22it/s]Running 10000 simulations.:  76%|███████▌  | 7556/10000 [00:50<00:20, 119.44it/s]Running 10000 simulations.:  76%|███████▌  | 7568/10000 [00:50<00:20, 118.56it/s]Running 10000 simulations.:  76%|███████▌  | 7580/10000 [00:50<00:20, 117.28it/s]Running 10000 simulations.:  76%|███████▌  | 7592/10000 [00:50<00:20, 115.79it/s]Running 10000 simulations.:  76%|███████▌  | 7604/10000 [00:50<00:21, 113.66it/s]Running 10000 simulations.:  76%|███████▌  | 7616/10000 [00:50<00:20, 114.95it/s]Running 10000 simulations.:  76%|███████▋  | 7629/10000 [00:50<00:20, 116.67it/s]Running 10000 simulations.:  76%|███████▋  | 7642/10000 [00:50<00:19, 117.95it/s]Running 10000 simulations.:  77%|███████▋  | 7655/10000 [00:50<00:19, 120.03it/s]Running 10000 simulations.:  77%|███████▋  | 7668/10000 [00:51<00:20, 112.73it/s]Running 10000 simulations.:  77%|███████▋  | 7681/10000 [00:51<00:19, 116.47it/s]Running 10000 simulations.:  77%|███████▋  | 7696/10000 [00:51<00:18, 124.16it/s]Running 10000 simulations.:  77%|███████▋  | 7711/10000 [00:51<00:17, 128.94it/s]Running 10000 simulations.:  77%|███████▋  | 7726/10000 [00:51<00:16, 134.34it/s]Running 10000 simulations.:  77%|███████▋  | 7741/10000 [00:51<00:16, 138.64it/s]Running 10000 simulations.:  78%|███████▊  | 7756/10000 [00:51<00:15, 141.37it/s]Running 10000 simulations.:  78%|███████▊  | 7771/10000 [00:51<00:15, 142.76it/s]Running 10000 simulations.:  78%|███████▊  | 7786/10000 [00:51<00:15, 143.36it/s]Running 10000 simulations.:  78%|███████▊  | 7801/10000 [00:52<00:15, 144.99it/s]Running 10000 simulations.:  78%|███████▊  | 7816/10000 [00:52<00:15, 144.84it/s]Running 10000 simulations.:  78%|███████▊  | 7831/10000 [00:52<00:14, 146.07it/s]Running 10000 simulations.:  78%|███████▊  | 7846/10000 [00:52<00:14, 145.78it/s]Running 10000 simulations.:  79%|███████▊  | 7861/10000 [00:52<00:14, 145.78it/s]Running 10000 simulations.:  79%|███████▉  | 7876/10000 [00:52<00:15, 133.98it/s]Running 10000 simulations.:  79%|███████▉  | 7890/10000 [00:52<00:16, 124.55it/s]Running 10000 simulations.:  79%|███████▉  | 7903/10000 [00:52<00:17, 117.27it/s]Running 10000 simulations.:  79%|███████▉  | 7916/10000 [00:52<00:18, 112.65it/s]Running 10000 simulations.:  79%|███████▉  | 7928/10000 [00:53<00:18, 110.15it/s]Running 10000 simulations.:  79%|███████▉  | 7940/10000 [00:53<00:18, 108.75it/s]Running 10000 simulations.:  80%|███████▉  | 7952/10000 [00:53<00:19, 107.30it/s]Running 10000 simulations.:  80%|███████▉  | 7963/10000 [00:53<00:19, 103.77it/s]Running 10000 simulations.:  80%|███████▉  | 7974/10000 [00:53<00:19, 103.33it/s]Running 10000 simulations.:  80%|███████▉  | 7985/10000 [00:53<00:19, 103.66it/s]Running 10000 simulations.:  80%|████████  | 8001/10000 [00:53<00:17, 115.27it/s]Running 10000 simulations.:  80%|████████  | 8017/10000 [00:53<00:15, 125.59it/s]Running 10000 simulations.:  80%|████████  | 8034/10000 [00:53<00:14, 134.77it/s]Running 10000 simulations.:  81%|████████  | 8051/10000 [00:54<00:13, 142.10it/s]Running 10000 simulations.:  81%|████████  | 8067/10000 [00:54<00:13, 147.01it/s]Running 10000 simulations.:  81%|████████  | 8084/10000 [00:54<00:12, 151.16it/s]Running 10000 simulations.:  81%|████████  | 8101/10000 [00:54<00:12, 153.72it/s]Running 10000 simulations.:  81%|████████  | 8118/10000 [00:54<00:12, 155.77it/s]Running 10000 simulations.:  81%|████████▏ | 8134/10000 [00:54<00:11, 156.99it/s]Running 10000 simulations.:  82%|████████▏ | 8150/10000 [00:54<00:11, 157.73it/s]Running 10000 simulations.:  82%|████████▏ | 8166/10000 [00:54<00:11, 158.18it/s]Running 10000 simulations.:  82%|████████▏ | 8183/10000 [00:54<00:11, 158.82it/s]Running 10000 simulations.:  82%|████████▏ | 8200/10000 [00:54<00:11, 159.20it/s]Running 10000 simulations.:  82%|████████▏ | 8216/10000 [00:55<00:11, 159.28it/s]Running 10000 simulations.:  82%|████████▏ | 8232/10000 [00:55<00:11, 159.44it/s]Running 10000 simulations.:  82%|████████▏ | 8249/10000 [00:55<00:10, 159.77it/s]Running 10000 simulations.:  83%|████████▎ | 8266/10000 [00:55<00:10, 160.07it/s]Running 10000 simulations.:  83%|████████▎ | 8283/10000 [00:55<00:10, 159.27it/s]Running 10000 simulations.:  83%|████████▎ | 8300/10000 [00:55<00:10, 159.52it/s]Running 10000 simulations.:  83%|████████▎ | 8317/10000 [00:55<00:10, 159.80it/s]Running 10000 simulations.:  83%|████████▎ | 8334/10000 [00:55<00:10, 160.05it/s]Running 10000 simulations.:  84%|████████▎ | 8351/10000 [00:55<00:10, 159.98it/s]Running 10000 simulations.:  84%|████████▎ | 8367/10000 [00:56<00:10, 159.90it/s]Running 10000 simulations.:  84%|████████▍ | 8383/10000 [00:56<00:10, 159.47it/s]Running 10000 simulations.:  84%|████████▍ | 8400/10000 [00:56<00:10, 159.70it/s]Running 10000 simulations.:  84%|████████▍ | 8417/10000 [00:56<00:09, 159.96it/s]Running 10000 simulations.:  84%|████████▍ | 8434/10000 [00:56<00:09, 160.18it/s]Running 10000 simulations.:  85%|████████▍ | 8451/10000 [00:56<00:09, 159.89it/s]Running 10000 simulations.:  85%|████████▍ | 8468/10000 [00:56<00:09, 159.98it/s]Running 10000 simulations.:  85%|████████▍ | 8484/10000 [00:56<00:09, 159.45it/s]Running 10000 simulations.:  85%|████████▌ | 8500/10000 [00:56<00:09, 159.39it/s]Running 10000 simulations.:  85%|████████▌ | 8517/10000 [00:56<00:09, 159.73it/s]Running 10000 simulations.:  85%|████████▌ | 8533/10000 [00:57<00:09, 159.73it/s]Running 10000 simulations.:  85%|████████▌ | 8549/10000 [00:57<00:09, 159.64it/s]Running 10000 simulations.:  86%|████████▌ | 8566/10000 [00:57<00:08, 159.82it/s]Running 10000 simulations.:  86%|████████▌ | 8582/10000 [00:57<00:08, 159.45it/s]Running 10000 simulations.:  86%|████████▌ | 8598/10000 [00:57<00:08, 158.73it/s]Running 10000 simulations.:  86%|████████▌ | 8614/10000 [00:57<00:08, 158.87it/s]Running 10000 simulations.:  86%|████████▋ | 8630/10000 [00:57<00:08, 158.85it/s]Running 10000 simulations.:  86%|████████▋ | 8646/10000 [00:57<00:08, 158.96it/s]Running 10000 simulations.:  87%|████████▋ | 8662/10000 [00:57<00:08, 159.21it/s]Running 10000 simulations.:  87%|████████▋ | 8678/10000 [00:57<00:08, 159.30it/s]Running 10000 simulations.:  87%|████████▋ | 8694/10000 [00:58<00:08, 158.48it/s]Running 10000 simulations.:  87%|████████▋ | 8710/10000 [00:58<00:08, 158.47it/s]Running 10000 simulations.:  87%|████████▋ | 8726/10000 [00:58<00:08, 158.84it/s]Running 10000 simulations.:  87%|████████▋ | 8742/10000 [00:58<00:08, 152.60it/s]Running 10000 simulations.:  88%|████████▊ | 8758/10000 [00:58<00:08, 154.66it/s]Running 10000 simulations.:  88%|████████▊ | 8775/10000 [00:58<00:07, 156.27it/s]Running 10000 simulations.:  88%|████████▊ | 8791/10000 [00:58<00:07, 157.30it/s]Running 10000 simulations.:  88%|████████▊ | 8807/10000 [00:58<00:07, 157.77it/s]Running 10000 simulations.:  88%|████████▊ | 8823/10000 [00:58<00:07, 158.22it/s]Running 10000 simulations.:  88%|████████▊ | 8839/10000 [00:59<00:07, 157.91it/s]Running 10000 simulations.:  89%|████████▊ | 8856/10000 [00:59<00:07, 158.62it/s]Running 10000 simulations.:  89%|████████▊ | 8872/10000 [00:59<00:07, 158.57it/s]Running 10000 simulations.:  89%|████████▉ | 8889/10000 [00:59<00:06, 159.25it/s]Running 10000 simulations.:  89%|████████▉ | 8906/10000 [00:59<00:06, 159.60it/s]Running 10000 simulations.:  89%|████████▉ | 8923/10000 [00:59<00:06, 159.73it/s]Running 10000 simulations.:  89%|████████▉ | 8939/10000 [00:59<00:06, 158.81it/s]Running 10000 simulations.:  90%|████████▉ | 8955/10000 [00:59<00:06, 158.84it/s]Running 10000 simulations.:  90%|████████▉ | 8972/10000 [00:59<00:06, 159.19it/s]Running 10000 simulations.:  90%|████████▉ | 8988/10000 [00:59<00:06, 159.11it/s]Running 10000 simulations.:  90%|█████████ | 9004/10000 [01:00<00:06, 159.34it/s]Running 10000 simulations.:  90%|█████████ | 9021/10000 [01:00<00:06, 159.97it/s]Running 10000 simulations.:  90%|█████████ | 9037/10000 [01:00<00:06, 159.50it/s]Running 10000 simulations.:  91%|█████████ | 9054/10000 [01:00<00:05, 159.68it/s]Running 10000 simulations.:  91%|█████████ | 9070/10000 [01:00<00:05, 159.63it/s]Running 10000 simulations.:  91%|█████████ | 9086/10000 [01:00<00:05, 159.58it/s]Running 10000 simulations.:  91%|█████████ | 9102/10000 [01:00<00:05, 159.60it/s]Running 10000 simulations.:  91%|█████████ | 9119/10000 [01:00<00:05, 160.25it/s]Running 10000 simulations.:  91%|█████████▏| 9136/10000 [01:00<00:05, 159.95it/s]Running 10000 simulations.:  92%|█████████▏| 9152/10000 [01:00<00:05, 159.86it/s]Running 10000 simulations.:  92%|█████████▏| 9168/10000 [01:01<00:05, 159.50it/s]Running 10000 simulations.:  92%|█████████▏| 9185/10000 [01:01<00:05, 159.82it/s]Running 10000 simulations.:  92%|█████████▏| 9201/10000 [01:01<00:05, 159.48it/s]Running 10000 simulations.:  92%|█████████▏| 9217/10000 [01:01<00:04, 158.85it/s]Running 10000 simulations.:  92%|█████████▏| 9233/10000 [01:01<00:04, 158.07it/s]Running 10000 simulations.:  92%|█████████▏| 9249/10000 [01:01<00:04, 157.60it/s]Running 10000 simulations.:  93%|█████████▎| 9265/10000 [01:01<00:04, 157.87it/s]Running 10000 simulations.:  93%|█████████▎| 9281/10000 [01:01<00:04, 158.44it/s]Running 10000 simulations.:  93%|█████████▎| 9298/10000 [01:01<00:04, 158.91it/s]Running 10000 simulations.:  93%|█████████▎| 9314/10000 [01:01<00:04, 159.14it/s]Running 10000 simulations.:  93%|█████████▎| 9331/10000 [01:02<00:04, 159.76it/s]Running 10000 simulations.:  93%|█████████▎| 9347/10000 [01:02<00:04, 159.25it/s]Running 10000 simulations.:  94%|█████████▎| 9363/10000 [01:02<00:03, 159.34it/s]Running 10000 simulations.:  94%|█████████▍| 9380/10000 [01:02<00:03, 159.84it/s]Running 10000 simulations.:  94%|█████████▍| 9396/10000 [01:02<00:03, 154.58it/s]Running 10000 simulations.:  94%|█████████▍| 9412/10000 [01:02<00:04, 121.75it/s]Running 10000 simulations.:  94%|█████████▍| 9426/10000 [01:02<00:05, 104.35it/s]Running 10000 simulations.:  94%|█████████▍| 9438/10000 [01:03<00:05, 95.55it/s] Running 10000 simulations.:  94%|█████████▍| 9449/10000 [01:03<00:06, 90.22it/s]Running 10000 simulations.:  95%|█████████▍| 9459/10000 [01:03<00:06, 86.75it/s]Running 10000 simulations.:  95%|█████████▍| 9469/10000 [01:03<00:06, 83.29it/s]Running 10000 simulations.:  95%|█████████▍| 9478/10000 [01:03<00:06, 80.43it/s]Running 10000 simulations.:  95%|█████████▍| 9487/10000 [01:03<00:06, 81.10it/s]Running 10000 simulations.:  95%|█████████▍| 9496/10000 [01:03<00:06, 80.23it/s]Running 10000 simulations.:  95%|█████████▌| 9505/10000 [01:03<00:06, 79.70it/s]Running 10000 simulations.:  95%|█████████▌| 9514/10000 [01:04<00:06, 78.51it/s]Running 10000 simulations.:  95%|█████████▌| 9523/10000 [01:04<00:06, 79.15it/s]Running 10000 simulations.:  95%|█████████▌| 9532/10000 [01:04<00:05, 79.87it/s]Running 10000 simulations.:  95%|█████████▌| 9541/10000 [01:04<00:05, 79.21it/s]Running 10000 simulations.:  96%|█████████▌| 9550/10000 [01:04<00:05, 79.49it/s]Running 10000 simulations.:  96%|█████████▌| 9558/10000 [01:04<00:05, 79.41it/s]Running 10000 simulations.:  96%|█████████▌| 9566/10000 [01:04<00:05, 79.12it/s]Running 10000 simulations.:  96%|█████████▌| 9575/10000 [01:04<00:05, 79.70it/s]Running 10000 simulations.:  96%|█████████▌| 9584/10000 [01:04<00:05, 80.20it/s]Running 10000 simulations.:  96%|█████████▌| 9593/10000 [01:05<00:05, 79.95it/s]Running 10000 simulations.:  96%|█████████▌| 9601/10000 [01:05<00:05, 79.42it/s]Running 10000 simulations.:  96%|█████████▌| 9609/10000 [01:05<00:04, 79.45it/s]Running 10000 simulations.:  96%|█████████▌| 9617/10000 [01:05<00:04, 78.92it/s]Running 10000 simulations.:  96%|█████████▋| 9625/10000 [01:05<00:04, 78.36it/s]Running 10000 simulations.:  96%|█████████▋| 9633/10000 [01:05<00:04, 78.17it/s]Running 10000 simulations.:  96%|█████████▋| 9641/10000 [01:05<00:04, 78.08it/s]Running 10000 simulations.:  96%|█████████▋| 9649/10000 [01:05<00:04, 78.48it/s]Running 10000 simulations.:  97%|█████████▋| 9657/10000 [01:05<00:04, 78.26it/s]Running 10000 simulations.:  97%|█████████▋| 9665/10000 [01:05<00:04, 78.23it/s]Running 10000 simulations.:  97%|█████████▋| 9673/10000 [01:06<00:04, 77.39it/s]Running 10000 simulations.:  97%|█████████▋| 9681/10000 [01:06<00:04, 77.92it/s]Running 10000 simulations.:  97%|█████████▋| 9691/10000 [01:06<00:03, 81.14it/s]Running 10000 simulations.:  97%|█████████▋| 9700/10000 [01:06<00:03, 80.98it/s]Running 10000 simulations.:  97%|█████████▋| 9709/10000 [01:06<00:03, 80.08it/s]Running 10000 simulations.:  97%|█████████▋| 9718/10000 [01:06<00:03, 81.66it/s]Running 10000 simulations.:  97%|█████████▋| 9728/10000 [01:06<00:03, 84.45it/s]Running 10000 simulations.:  97%|█████████▋| 9740/10000 [01:06<00:02, 91.32it/s]Running 10000 simulations.:  98%|█████████▊| 9753/10000 [01:06<00:02, 98.72it/s]Running 10000 simulations.:  98%|█████████▊| 9766/10000 [01:06<00:02, 106.07it/s]Running 10000 simulations.:  98%|█████████▊| 9779/10000 [01:07<00:02, 110.30it/s]Running 10000 simulations.:  98%|█████████▊| 9797/10000 [01:07<00:01, 123.61it/s]Running 10000 simulations.:  98%|█████████▊| 9815/10000 [01:07<00:01, 136.11it/s]Running 10000 simulations.:  98%|█████████▊| 9833/10000 [01:07<00:01, 145.72it/s]Running 10000 simulations.:  99%|█████████▊| 9851/10000 [01:07<00:00, 153.00it/s]Running 10000 simulations.:  99%|█████████▊| 9869/10000 [01:07<00:00, 157.89it/s]Running 10000 simulations.:  99%|█████████▉| 9887/10000 [01:07<00:00, 161.50it/s]Running 10000 simulations.:  99%|█████████▉| 9904/10000 [01:07<00:00, 163.76it/s]Running 10000 simulations.:  99%|█████████▉| 9921/10000 [01:07<00:00, 164.70it/s]Running 10000 simulations.:  99%|█████████▉| 9938/10000 [01:08<00:00, 165.66it/s]Running 10000 simulations.: 100%|█████████▉| 9955/10000 [01:08<00:00, 165.85it/s]Running 10000 simulations.: 100%|█████████▉| 9972/10000 [01:08<00:00, 166.10it/s]Running 10000 simulations.: 100%|█████████▉| 9989/10000 [01:08<00:00, 162.35it/s]Running 10000 simulations.: 100%|██████████| 10000/10000 [01:08<00:00, 146.16it/s]
Running 10000 simulations.:   0%|          | 0/10000 [00:00<?, ?it/s]Running 10000 simulations.:   0%|          | 17/10000 [00:00<00:58, 169.49it/s]Running 10000 simulations.:   0%|          | 34/10000 [00:00<00:59, 168.58it/s]Running 10000 simulations.:   0%|          | 49/10000 [00:00<01:01, 161.19it/s]Running 10000 simulations.:   1%|          | 66/10000 [00:00<01:00, 163.16it/s]Running 10000 simulations.:   1%|          | 83/10000 [00:00<01:00, 164.81it/s]Running 10000 simulations.:   1%|          | 100/10000 [00:00<00:59, 165.98it/s]Running 10000 simulations.:   1%|          | 117/10000 [00:00<00:59, 166.31it/s]Running 10000 simulations.:   1%|▏         | 134/10000 [00:00<00:59, 166.79it/s]Running 10000 simulations.:   2%|▏         | 151/10000 [00:00<00:58, 167.02it/s]Running 10000 simulations.:   2%|▏         | 168/10000 [00:01<00:58, 167.17it/s]Running 10000 simulations.:   2%|▏         | 185/10000 [00:01<00:58, 167.59it/s]Running 10000 simulations.:   2%|▏         | 202/10000 [00:01<00:58, 167.21it/s]Running 10000 simulations.:   2%|▏         | 219/10000 [00:01<00:58, 167.50it/s]Running 10000 simulations.:   2%|▏         | 236/10000 [00:01<00:58, 167.63it/s]Running 10000 simulations.:   3%|▎         | 253/10000 [00:01<00:58, 167.36it/s]Running 10000 simulations.:   3%|▎         | 270/10000 [00:01<00:58, 166.70it/s]Running 10000 simulations.:   3%|▎         | 287/10000 [00:01<00:58, 166.56it/s]Running 10000 simulations.:   3%|▎         | 304/10000 [00:01<00:58, 166.65it/s]Running 10000 simulations.:   3%|▎         | 321/10000 [00:01<00:58, 166.12it/s]Running 10000 simulations.:   3%|▎         | 338/10000 [00:02<00:58, 165.66it/s]Running 10000 simulations.:   4%|▎         | 355/10000 [00:02<00:58, 165.54it/s]Running 10000 simulations.:   4%|▎         | 372/10000 [00:02<00:58, 165.41it/s]Running 10000 simulations.:   4%|▍         | 389/10000 [00:02<00:57, 166.03it/s]Running 10000 simulations.:   4%|▍         | 406/10000 [00:02<00:57, 165.92it/s]Running 10000 simulations.:   4%|▍         | 423/10000 [00:02<00:57, 165.65it/s]Running 10000 simulations.:   4%|▍         | 440/10000 [00:02<00:57, 165.00it/s]Running 10000 simulations.:   5%|▍         | 457/10000 [00:02<00:57, 165.08it/s]Running 10000 simulations.:   5%|▍         | 474/10000 [00:02<00:57, 164.78it/s]Running 10000 simulations.:   5%|▍         | 491/10000 [00:02<00:57, 164.89it/s]Running 10000 simulations.:   5%|▌         | 508/10000 [00:03<00:57, 164.99it/s]Running 10000 simulations.:   5%|▌         | 525/10000 [00:03<00:57, 164.55it/s]Running 10000 simulations.:   5%|▌         | 542/10000 [00:03<00:57, 164.67it/s]Running 10000 simulations.:   6%|▌         | 559/10000 [00:03<00:57, 164.27it/s]Running 10000 simulations.:   6%|▌         | 576/10000 [00:03<00:57, 164.22it/s]Running 10000 simulations.:   6%|▌         | 593/10000 [00:03<00:57, 164.81it/s]Running 10000 simulations.:   6%|▌         | 610/10000 [00:03<00:56, 164.87it/s]Running 10000 simulations.:   6%|▋         | 627/10000 [00:03<00:56, 164.87it/s]Running 10000 simulations.:   6%|▋         | 644/10000 [00:03<00:56, 164.49it/s]Running 10000 simulations.:   7%|▋         | 661/10000 [00:03<00:56, 164.32it/s]Running 10000 simulations.:   7%|▋         | 678/10000 [00:04<00:56, 164.22it/s]Running 10000 simulations.:   7%|▋         | 695/10000 [00:04<00:57, 161.55it/s]Running 10000 simulations.:   7%|▋         | 712/10000 [00:04<00:57, 161.58it/s]Running 10000 simulations.:   7%|▋         | 729/10000 [00:04<00:57, 161.57it/s]Running 10000 simulations.:   7%|▋         | 746/10000 [00:04<00:56, 163.28it/s]Running 10000 simulations.:   8%|▊         | 763/10000 [00:04<00:56, 163.89it/s]Running 10000 simulations.:   8%|▊         | 780/10000 [00:04<00:56, 164.20it/s]Running 10000 simulations.:   8%|▊         | 797/10000 [00:04<00:55, 164.41it/s]Running 10000 simulations.:   8%|▊         | 814/10000 [00:04<00:55, 164.79it/s]Running 10000 simulations.:   8%|▊         | 831/10000 [00:05<00:55, 165.58it/s]Running 10000 simulations.:   8%|▊         | 848/10000 [00:05<00:55, 166.19it/s]Running 10000 simulations.:   9%|▊         | 865/10000 [00:05<00:55, 165.75it/s]Running 10000 simulations.:   9%|▉         | 882/10000 [00:05<00:55, 165.72it/s]Running 10000 simulations.:   9%|▉         | 899/10000 [00:05<00:54, 165.83it/s]Running 10000 simulations.:   9%|▉         | 916/10000 [00:05<00:54, 166.33it/s]Running 10000 simulations.:   9%|▉         | 933/10000 [00:05<00:54, 166.35it/s]Running 10000 simulations.:  10%|▉         | 950/10000 [00:05<00:54, 166.45it/s]Running 10000 simulations.:  10%|▉         | 967/10000 [00:05<00:54, 166.62it/s]Running 10000 simulations.:  10%|▉         | 984/10000 [00:05<00:54, 166.25it/s]Running 10000 simulations.:  10%|█         | 1001/10000 [00:06<00:53, 166.74it/s]Running 10000 simulations.:  10%|█         | 1018/10000 [00:06<00:53, 166.86it/s]Running 10000 simulations.:  10%|█         | 1035/10000 [00:06<00:53, 166.62it/s]Running 10000 simulations.:  11%|█         | 1052/10000 [00:06<00:53, 166.18it/s]Running 10000 simulations.:  11%|█         | 1069/10000 [00:06<00:53, 165.89it/s]Running 10000 simulations.:  11%|█         | 1086/10000 [00:06<00:53, 165.77it/s]Running 10000 simulations.:  11%|█         | 1103/10000 [00:06<00:53, 165.53it/s]Running 10000 simulations.:  11%|█         | 1120/10000 [00:06<00:53, 165.40it/s]Running 10000 simulations.:  11%|█▏        | 1137/10000 [00:06<00:53, 165.86it/s]Running 10000 simulations.:  12%|█▏        | 1154/10000 [00:06<00:53, 166.01it/s]Running 10000 simulations.:  12%|█▏        | 1171/10000 [00:07<00:52, 166.68it/s]Running 10000 simulations.:  12%|█▏        | 1188/10000 [00:07<00:52, 166.82it/s]Running 10000 simulations.:  12%|█▏        | 1205/10000 [00:07<00:52, 166.25it/s]Running 10000 simulations.:  12%|█▏        | 1222/10000 [00:07<00:52, 165.84it/s]Running 10000 simulations.:  12%|█▏        | 1239/10000 [00:07<00:52, 165.82it/s]Running 10000 simulations.:  13%|█▎        | 1256/10000 [00:07<00:52, 165.64it/s]Running 10000 simulations.:  13%|█▎        | 1273/10000 [00:07<00:52, 165.79it/s]Running 10000 simulations.:  13%|█▎        | 1290/10000 [00:07<00:52, 166.30it/s]Running 10000 simulations.:  13%|█▎        | 1307/10000 [00:07<00:52, 166.15it/s]Running 10000 simulations.:  13%|█▎        | 1324/10000 [00:08<00:52, 165.65it/s]Running 10000 simulations.:  13%|█▎        | 1341/10000 [00:08<00:52, 165.50it/s]Running 10000 simulations.:  14%|█▎        | 1358/10000 [00:08<00:52, 165.43it/s]Running 10000 simulations.:  14%|█▍        | 1375/10000 [00:08<00:52, 165.74it/s]Running 10000 simulations.:  14%|█▍        | 1392/10000 [00:08<00:51, 166.48it/s]Running 10000 simulations.:  14%|█▍        | 1409/10000 [00:08<00:51, 165.90it/s]Running 10000 simulations.:  14%|█▍        | 1426/10000 [00:08<00:51, 165.81it/s]Running 10000 simulations.:  14%|█▍        | 1443/10000 [00:08<00:51, 166.26it/s]Running 10000 simulations.:  15%|█▍        | 1460/10000 [00:08<00:51, 166.83it/s]Running 10000 simulations.:  15%|█▍        | 1477/10000 [00:08<00:51, 166.88it/s]Running 10000 simulations.:  15%|█▍        | 1494/10000 [00:09<00:51, 165.82it/s]Running 10000 simulations.:  15%|█▌        | 1511/10000 [00:09<00:51, 165.70it/s]Running 10000 simulations.:  15%|█▌        | 1528/10000 [00:09<00:51, 165.75it/s]Running 10000 simulations.:  15%|█▌        | 1545/10000 [00:09<00:50, 166.37it/s]Running 10000 simulations.:  16%|█▌        | 1562/10000 [00:09<00:50, 165.99it/s]Running 10000 simulations.:  16%|█▌        | 1579/10000 [00:09<00:50, 165.64it/s]Running 10000 simulations.:  16%|█▌        | 1596/10000 [00:09<00:50, 165.66it/s]Running 10000 simulations.:  16%|█▌        | 1613/10000 [00:09<00:50, 165.73it/s]Running 10000 simulations.:  16%|█▋        | 1630/10000 [00:09<00:50, 165.64it/s]Running 10000 simulations.:  16%|█▋        | 1647/10000 [00:09<00:50, 165.19it/s]Running 10000 simulations.:  17%|█▋        | 1664/10000 [00:10<00:50, 165.10it/s]Running 10000 simulations.:  17%|█▋        | 1681/10000 [00:10<00:50, 164.86it/s]Running 10000 simulations.:  17%|█▋        | 1698/10000 [00:10<00:50, 164.96it/s]Running 10000 simulations.:  17%|█▋        | 1715/10000 [00:10<00:49, 165.91it/s]Running 10000 simulations.:  17%|█▋        | 1732/10000 [00:10<00:49, 166.09it/s]Running 10000 simulations.:  17%|█▋        | 1749/10000 [00:10<00:49, 165.69it/s]Running 10000 simulations.:  18%|█▊        | 1766/10000 [00:10<00:49, 165.42it/s]Running 10000 simulations.:  18%|█▊        | 1783/10000 [00:10<00:49, 165.61it/s]Running 10000 simulations.:  18%|█▊        | 1800/10000 [00:10<00:49, 165.44it/s]Running 10000 simulations.:  18%|█▊        | 1817/10000 [00:10<00:49, 164.48it/s]Running 10000 simulations.:  18%|█▊        | 1834/10000 [00:11<00:49, 163.81it/s]Running 10000 simulations.:  19%|█▊        | 1851/10000 [00:11<00:49, 164.42it/s]Running 10000 simulations.:  19%|█▊        | 1868/10000 [00:11<00:49, 164.14it/s]Running 10000 simulations.:  19%|█▉        | 1885/10000 [00:11<00:49, 164.18it/s]Running 10000 simulations.:  19%|█▉        | 1902/10000 [00:11<00:48, 165.60it/s]Running 10000 simulations.:  19%|█▉        | 1919/10000 [00:11<00:48, 165.81it/s]Running 10000 simulations.:  19%|█▉        | 1936/10000 [00:11<00:48, 166.09it/s]Running 10000 simulations.:  20%|█▉        | 1953/10000 [00:11<00:48, 165.39it/s]Running 10000 simulations.:  20%|█▉        | 1970/10000 [00:11<00:48, 164.88it/s]Running 10000 simulations.:  20%|█▉        | 1987/10000 [00:12<00:48, 164.79it/s]Running 10000 simulations.:  20%|██        | 2004/10000 [00:12<00:48, 164.71it/s]Running 10000 simulations.:  20%|██        | 2021/10000 [00:12<00:48, 164.46it/s]Running 10000 simulations.:  20%|██        | 2038/10000 [00:12<00:48, 163.87it/s]Running 10000 simulations.:  21%|██        | 2055/10000 [00:12<00:48, 163.96it/s]Running 10000 simulations.:  21%|██        | 2072/10000 [00:12<00:48, 163.98it/s]Running 10000 simulations.:  21%|██        | 2089/10000 [00:12<00:48, 164.25it/s]Running 10000 simulations.:  21%|██        | 2106/10000 [00:12<00:48, 164.38it/s]Running 10000 simulations.:  21%|██        | 2123/10000 [00:12<00:47, 164.51it/s]Running 10000 simulations.:  21%|██▏       | 2140/10000 [00:12<00:47, 165.34it/s]Running 10000 simulations.:  22%|██▏       | 2159/10000 [00:13<00:45, 171.17it/s]Running 10000 simulations.:  22%|██▏       | 2177/10000 [00:13<00:45, 173.32it/s]Running 10000 simulations.:  22%|██▏       | 2195/10000 [00:13<00:45, 172.22it/s]Running 10000 simulations.:  22%|██▏       | 2213/10000 [00:13<00:46, 169.05it/s]Running 10000 simulations.:  22%|██▏       | 2230/10000 [00:13<00:47, 163.87it/s]Running 10000 simulations.:  22%|██▏       | 2247/10000 [00:13<00:48, 161.21it/s]Running 10000 simulations.:  23%|██▎       | 2264/10000 [00:13<00:48, 159.47it/s]Running 10000 simulations.:  23%|██▎       | 2280/10000 [00:13<00:48, 158.57it/s]Running 10000 simulations.:  23%|██▎       | 2297/10000 [00:13<00:48, 159.24it/s]Running 10000 simulations.:  23%|██▎       | 2313/10000 [00:13<00:48, 158.21it/s]Running 10000 simulations.:  23%|██▎       | 2330/10000 [00:14<00:47, 160.59it/s]Running 10000 simulations.:  23%|██▎       | 2347/10000 [00:14<00:47, 161.41it/s]Running 10000 simulations.:  24%|██▎       | 2364/10000 [00:14<00:47, 162.11it/s]Running 10000 simulations.:  24%|██▍       | 2381/10000 [00:14<00:46, 163.01it/s]Running 10000 simulations.:  24%|██▍       | 2398/10000 [00:14<00:46, 163.82it/s]Running 10000 simulations.:  24%|██▍       | 2415/10000 [00:14<00:46, 164.38it/s]Running 10000 simulations.:  24%|██▍       | 2432/10000 [00:14<00:45, 164.89it/s]Running 10000 simulations.:  24%|██▍       | 2449/10000 [00:14<00:45, 164.64it/s]Running 10000 simulations.:  25%|██▍       | 2466/10000 [00:14<00:45, 164.68it/s]Running 10000 simulations.:  25%|██▍       | 2483/10000 [00:15<00:45, 164.62it/s]Running 10000 simulations.:  25%|██▌       | 2500/10000 [00:15<00:45, 164.02it/s]Running 10000 simulations.:  25%|██▌       | 2517/10000 [00:15<00:45, 163.78it/s]Running 10000 simulations.:  25%|██▌       | 2534/10000 [00:15<00:45, 163.82it/s]Running 10000 simulations.:  26%|██▌       | 2551/10000 [00:15<00:45, 164.33it/s]Running 10000 simulations.:  26%|██▌       | 2568/10000 [00:15<00:45, 164.57it/s]Running 10000 simulations.:  26%|██▌       | 2585/10000 [00:15<00:45, 164.24it/s]Running 10000 simulations.:  26%|██▌       | 2602/10000 [00:15<00:45, 164.04it/s]Running 10000 simulations.:  26%|██▌       | 2619/10000 [00:15<00:45, 163.95it/s]Running 10000 simulations.:  26%|██▋       | 2636/10000 [00:15<00:44, 164.15it/s]Running 10000 simulations.:  27%|██▋       | 2653/10000 [00:16<00:44, 164.41it/s]Running 10000 simulations.:  27%|██▋       | 2670/10000 [00:16<00:44, 162.92it/s]Running 10000 simulations.:  27%|██▋       | 2687/10000 [00:16<00:44, 163.00it/s]Running 10000 simulations.:  27%|██▋       | 2704/10000 [00:16<00:44, 163.33it/s]Running 10000 simulations.:  27%|██▋       | 2721/10000 [00:16<00:44, 163.57it/s]Running 10000 simulations.:  27%|██▋       | 2738/10000 [00:16<00:44, 163.72it/s]Running 10000 simulations.:  28%|██▊       | 2755/10000 [00:16<00:44, 164.25it/s]Running 10000 simulations.:  28%|██▊       | 2772/10000 [00:16<00:43, 165.29it/s]Running 10000 simulations.:  28%|██▊       | 2789/10000 [00:16<00:43, 165.91it/s]Running 10000 simulations.:  28%|██▊       | 2806/10000 [00:16<00:43, 165.16it/s]Running 10000 simulations.:  28%|██▊       | 2823/10000 [00:17<00:43, 164.58it/s]Running 10000 simulations.:  28%|██▊       | 2840/10000 [00:17<00:43, 164.38it/s]Running 10000 simulations.:  29%|██▊       | 2857/10000 [00:17<00:43, 164.21it/s]Running 10000 simulations.:  29%|██▊       | 2874/10000 [00:17<00:43, 164.17it/s]Running 10000 simulations.:  29%|██▉       | 2891/10000 [00:17<00:43, 163.71it/s]Running 10000 simulations.:  29%|██▉       | 2908/10000 [00:17<00:43, 163.59it/s]Running 10000 simulations.:  29%|██▉       | 2925/10000 [00:17<00:43, 164.03it/s]Running 10000 simulations.:  29%|██▉       | 2942/10000 [00:17<00:42, 164.86it/s]Running 10000 simulations.:  30%|██▉       | 2959/10000 [00:17<00:42, 164.89it/s]Running 10000 simulations.:  30%|██▉       | 2976/10000 [00:18<00:42, 164.82it/s]Running 10000 simulations.:  30%|██▉       | 2993/10000 [00:18<00:42, 165.54it/s]Running 10000 simulations.:  30%|███       | 3010/10000 [00:18<00:42, 165.49it/s]Running 10000 simulations.:  30%|███       | 3027/10000 [00:18<00:42, 165.27it/s]Running 10000 simulations.:  30%|███       | 3044/10000 [00:18<00:42, 164.99it/s]Running 10000 simulations.:  31%|███       | 3061/10000 [00:18<00:41, 165.31it/s]Running 10000 simulations.:  31%|███       | 3078/10000 [00:18<00:41, 164.95it/s]Running 10000 simulations.:  31%|███       | 3095/10000 [00:18<00:41, 164.62it/s]Running 10000 simulations.:  31%|███       | 3112/10000 [00:18<00:41, 164.39it/s]Running 10000 simulations.:  31%|███▏      | 3129/10000 [00:18<00:41, 164.23it/s]Running 10000 simulations.:  31%|███▏      | 3146/10000 [00:19<00:41, 164.75it/s]Running 10000 simulations.:  32%|███▏      | 3163/10000 [00:19<00:41, 164.83it/s]Running 10000 simulations.:  32%|███▏      | 3180/10000 [00:19<00:41, 165.31it/s]Running 10000 simulations.:  32%|███▏      | 3197/10000 [00:19<00:41, 165.07it/s]Running 10000 simulations.:  32%|███▏      | 3214/10000 [00:19<00:41, 164.47it/s]Running 10000 simulations.:  32%|███▏      | 3231/10000 [00:19<00:41, 164.22it/s]Running 10000 simulations.:  32%|███▏      | 3248/10000 [00:19<00:41, 164.68it/s]Running 10000 simulations.:  33%|███▎      | 3265/10000 [00:19<00:41, 164.21it/s]Running 10000 simulations.:  33%|███▎      | 3282/10000 [00:19<00:40, 164.00it/s]Running 10000 simulations.:  33%|███▎      | 3299/10000 [00:19<00:40, 164.55it/s]Running 10000 simulations.:  33%|███▎      | 3316/10000 [00:20<00:40, 165.12it/s]Running 10000 simulations.:  33%|███▎      | 3333/10000 [00:20<00:40, 165.53it/s]Running 10000 simulations.:  34%|███▎      | 3350/10000 [00:20<00:40, 165.81it/s]Running 10000 simulations.:  34%|███▎      | 3367/10000 [00:20<00:39, 165.84it/s]Running 10000 simulations.:  34%|███▍      | 3384/10000 [00:20<00:39, 165.80it/s]Running 10000 simulations.:  34%|███▍      | 3401/10000 [00:20<00:39, 165.60it/s]Running 10000 simulations.:  34%|███▍      | 3418/10000 [00:20<00:39, 165.42it/s]Running 10000 simulations.:  34%|███▍      | 3435/10000 [00:20<00:39, 165.66it/s]Running 10000 simulations.:  35%|███▍      | 3452/10000 [00:20<00:39, 165.94it/s]Running 10000 simulations.:  35%|███▍      | 3469/10000 [00:21<00:39, 166.33it/s]Running 10000 simulations.:  35%|███▍      | 3486/10000 [00:21<00:39, 165.87it/s]Running 10000 simulations.:  35%|███▌      | 3503/10000 [00:21<00:39, 165.38it/s]Running 10000 simulations.:  35%|███▌      | 3520/10000 [00:21<00:39, 165.13it/s]Running 10000 simulations.:  35%|███▌      | 3537/10000 [00:21<00:39, 164.68it/s]Running 10000 simulations.:  36%|███▌      | 3554/10000 [00:21<00:39, 164.17it/s]Running 10000 simulations.:  36%|███▌      | 3571/10000 [00:21<00:39, 164.58it/s]Running 10000 simulations.:  36%|███▌      | 3588/10000 [00:21<00:39, 163.96it/s]Running 10000 simulations.:  36%|███▌      | 3605/10000 [00:21<00:39, 163.33it/s]Running 10000 simulations.:  36%|███▌      | 3622/10000 [00:21<00:38, 163.74it/s]Running 10000 simulations.:  36%|███▋      | 3639/10000 [00:22<00:38, 164.32it/s]Running 10000 simulations.:  37%|███▋      | 3656/10000 [00:22<00:38, 165.04it/s]Running 10000 simulations.:  37%|███▋      | 3673/10000 [00:22<00:38, 165.60it/s]Running 10000 simulations.:  37%|███▋      | 3690/10000 [00:22<00:38, 165.95it/s]Running 10000 simulations.:  37%|███▋      | 3707/10000 [00:22<00:37, 166.23it/s]Running 10000 simulations.:  37%|███▋      | 3724/10000 [00:22<00:37, 165.65it/s]Running 10000 simulations.:  37%|███▋      | 3741/10000 [00:22<00:37, 164.97it/s]Running 10000 simulations.:  38%|███▊      | 3758/10000 [00:22<00:37, 165.46it/s]Running 10000 simulations.:  38%|███▊      | 3775/10000 [00:22<00:37, 165.73it/s]Running 10000 simulations.:  38%|███▊      | 3792/10000 [00:22<00:37, 166.42it/s]Running 10000 simulations.:  38%|███▊      | 3809/10000 [00:23<00:37, 166.34it/s]Running 10000 simulations.:  38%|███▊      | 3826/10000 [00:23<00:37, 165.75it/s]Running 10000 simulations.:  38%|███▊      | 3843/10000 [00:23<00:37, 165.63it/s]Running 10000 simulations.:  39%|███▊      | 3860/10000 [00:23<00:37, 165.49it/s]Running 10000 simulations.:  39%|███▉      | 3877/10000 [00:23<00:37, 164.82it/s]Running 10000 simulations.:  39%|███▉      | 3894/10000 [00:23<00:37, 164.51it/s]Running 10000 simulations.:  39%|███▉      | 3911/10000 [00:23<00:37, 164.12it/s]Running 10000 simulations.:  39%|███▉      | 3928/10000 [00:23<00:37, 163.78it/s]Running 10000 simulations.:  39%|███▉      | 3945/10000 [00:23<00:37, 163.64it/s]Running 10000 simulations.:  40%|███▉      | 3962/10000 [00:24<00:36, 164.27it/s]Running 10000 simulations.:  40%|███▉      | 3979/10000 [00:24<00:36, 165.50it/s]Running 10000 simulations.:  40%|███▉      | 3996/10000 [00:24<00:36, 165.10it/s]Running 10000 simulations.:  40%|████      | 4013/10000 [00:24<00:36, 164.55it/s]Running 10000 simulations.:  40%|████      | 4030/10000 [00:24<00:36, 164.37it/s]Running 10000 simulations.:  40%|████      | 4047/10000 [00:24<00:36, 164.54it/s]Running 10000 simulations.:  41%|████      | 4064/10000 [00:24<00:35, 165.81it/s]Running 10000 simulations.:  41%|████      | 4081/10000 [00:24<00:35, 165.55it/s]Running 10000 simulations.:  41%|████      | 4098/10000 [00:24<00:35, 164.57it/s]Running 10000 simulations.:  41%|████      | 4115/10000 [00:24<00:35, 164.15it/s]Running 10000 simulations.:  41%|████▏     | 4132/10000 [00:25<00:35, 164.02it/s]Running 10000 simulations.:  41%|████▏     | 4149/10000 [00:25<00:35, 164.66it/s]Running 10000 simulations.:  42%|████▏     | 4166/10000 [00:25<00:35, 164.62it/s]Running 10000 simulations.:  42%|████▏     | 4183/10000 [00:25<00:35, 164.60it/s]Running 10000 simulations.:  42%|████▏     | 4200/10000 [00:25<00:35, 164.34it/s]Running 10000 simulations.:  42%|████▏     | 4217/10000 [00:25<00:35, 164.90it/s]Running 10000 simulations.:  42%|████▏     | 4234/10000 [00:25<00:34, 165.32it/s]Running 10000 simulations.:  43%|████▎     | 4251/10000 [00:25<00:34, 164.72it/s]Running 10000 simulations.:  43%|████▎     | 4268/10000 [00:25<00:34, 164.59it/s]Running 10000 simulations.:  43%|████▎     | 4285/10000 [00:25<00:35, 160.62it/s]Running 10000 simulations.:  43%|████▎     | 4302/10000 [00:26<00:36, 157.21it/s]Running 10000 simulations.:  43%|████▎     | 4318/10000 [00:26<00:36, 154.45it/s]Running 10000 simulations.:  43%|████▎     | 4334/10000 [00:26<00:37, 152.67it/s]Running 10000 simulations.:  44%|████▎     | 4350/10000 [00:26<00:37, 152.54it/s]Running 10000 simulations.:  44%|████▎     | 4366/10000 [00:26<00:36, 152.84it/s]Running 10000 simulations.:  44%|████▍     | 4382/10000 [00:26<00:37, 151.83it/s]Running 10000 simulations.:  44%|████▍     | 4398/10000 [00:26<00:37, 151.28it/s]Running 10000 simulations.:  44%|████▍     | 4414/10000 [00:26<00:36, 151.40it/s]Running 10000 simulations.:  44%|████▍     | 4430/10000 [00:26<00:36, 151.17it/s]Running 10000 simulations.:  44%|████▍     | 4446/10000 [00:27<00:36, 150.81it/s]Running 10000 simulations.:  45%|████▍     | 4462/10000 [00:27<00:36, 150.93it/s]Running 10000 simulations.:  45%|████▍     | 4478/10000 [00:27<00:36, 150.78it/s]Running 10000 simulations.:  45%|████▍     | 4494/10000 [00:27<00:36, 150.82it/s]Running 10000 simulations.:  45%|████▌     | 4510/10000 [00:27<00:36, 150.64it/s]Running 10000 simulations.:  45%|████▌     | 4526/10000 [00:27<00:35, 153.22it/s]Running 10000 simulations.:  45%|████▌     | 4542/10000 [00:27<00:35, 152.66it/s]Running 10000 simulations.:  46%|████▌     | 4558/10000 [00:27<00:35, 152.68it/s]Running 10000 simulations.:  46%|████▌     | 4574/10000 [00:27<00:35, 152.95it/s]Running 10000 simulations.:  46%|████▌     | 4590/10000 [00:27<00:35, 153.41it/s]Running 10000 simulations.:  46%|████▌     | 4606/10000 [00:28<00:35, 153.61it/s]Running 10000 simulations.:  46%|████▌     | 4622/10000 [00:28<00:34, 153.94it/s]Running 10000 simulations.:  46%|████▋     | 4638/10000 [00:28<00:34, 154.03it/s]Running 10000 simulations.:  47%|████▋     | 4654/10000 [00:28<00:34, 153.22it/s]Running 10000 simulations.:  47%|████▋     | 4670/10000 [00:28<00:35, 151.99it/s]Running 10000 simulations.:  47%|████▋     | 4686/10000 [00:28<00:35, 151.49it/s]Running 10000 simulations.:  47%|████▋     | 4702/10000 [00:28<00:34, 153.67it/s]Running 10000 simulations.:  47%|████▋     | 4718/10000 [00:28<00:34, 152.62it/s]Running 10000 simulations.:  47%|████▋     | 4734/10000 [00:28<00:34, 152.02it/s]Running 10000 simulations.:  48%|████▊     | 4750/10000 [00:29<00:34, 151.75it/s]Running 10000 simulations.:  48%|████▊     | 4766/10000 [00:29<00:34, 151.62it/s]Running 10000 simulations.:  48%|████▊     | 4782/10000 [00:29<00:34, 151.23it/s]Running 10000 simulations.:  48%|████▊     | 4798/10000 [00:29<00:34, 151.31it/s]Running 10000 simulations.:  48%|████▊     | 4814/10000 [00:29<00:34, 151.51it/s]Running 10000 simulations.:  48%|████▊     | 4830/10000 [00:29<00:34, 151.71it/s]Running 10000 simulations.:  48%|████▊     | 4846/10000 [00:29<00:34, 151.26it/s]Running 10000 simulations.:  49%|████▊     | 4862/10000 [00:29<00:34, 150.78it/s]Running 10000 simulations.:  49%|████▉     | 4878/10000 [00:29<00:33, 152.06it/s]Running 10000 simulations.:  49%|████▉     | 4894/10000 [00:29<00:33, 153.05it/s]Running 10000 simulations.:  49%|████▉     | 4910/10000 [00:30<00:33, 152.54it/s]Running 10000 simulations.:  49%|████▉     | 4926/10000 [00:30<00:33, 152.54it/s]Running 10000 simulations.:  49%|████▉     | 4942/10000 [00:30<00:34, 145.84it/s]Running 10000 simulations.:  50%|████▉     | 4958/10000 [00:30<00:34, 147.37it/s]Running 10000 simulations.:  50%|████▉     | 4974/10000 [00:30<00:33, 148.61it/s]Running 10000 simulations.:  50%|████▉     | 4990/10000 [00:30<00:33, 149.77it/s]Running 10000 simulations.:  50%|█████     | 5006/10000 [00:30<00:33, 150.28it/s]Running 10000 simulations.:  50%|█████     | 5022/10000 [00:30<00:33, 150.35it/s]Running 10000 simulations.:  50%|█████     | 5038/10000 [00:30<00:32, 151.39it/s]Running 10000 simulations.:  51%|█████     | 5055/10000 [00:31<00:32, 154.00it/s]Running 10000 simulations.:  51%|█████     | 5071/10000 [00:31<00:32, 153.05it/s]Running 10000 simulations.:  51%|█████     | 5087/10000 [00:31<00:32, 152.56it/s]Running 10000 simulations.:  51%|█████     | 5103/10000 [00:31<00:32, 152.15it/s]Running 10000 simulations.:  51%|█████     | 5119/10000 [00:31<00:31, 152.60it/s]Running 10000 simulations.:  51%|█████▏    | 5135/10000 [00:31<00:31, 152.92it/s]Running 10000 simulations.:  52%|█████▏    | 5151/10000 [00:31<00:31, 153.43it/s]Running 10000 simulations.:  52%|█████▏    | 5167/10000 [00:31<00:31, 153.40it/s]Running 10000 simulations.:  52%|█████▏    | 5183/10000 [00:31<00:31, 153.14it/s]Running 10000 simulations.:  52%|█████▏    | 5199/10000 [00:31<00:31, 152.49it/s]Running 10000 simulations.:  52%|█████▏    | 5215/10000 [00:32<00:31, 152.78it/s]Running 10000 simulations.:  52%|█████▏    | 5231/10000 [00:32<00:30, 154.64it/s]Running 10000 simulations.:  52%|█████▏    | 5247/10000 [00:32<00:30, 153.83it/s]Running 10000 simulations.:  53%|█████▎    | 5263/10000 [00:32<00:30, 153.66it/s]Running 10000 simulations.:  53%|█████▎    | 5279/10000 [00:32<00:30, 153.33it/s]Running 10000 simulations.:  53%|█████▎    | 5295/10000 [00:32<00:30, 152.37it/s]Running 10000 simulations.:  53%|█████▎    | 5311/10000 [00:32<00:30, 152.52it/s]Running 10000 simulations.:  53%|█████▎    | 5327/10000 [00:32<00:30, 152.68it/s]Running 10000 simulations.:  53%|█████▎    | 5343/10000 [00:32<00:30, 152.04it/s]Running 10000 simulations.:  54%|█████▎    | 5359/10000 [00:33<00:30, 151.52it/s]Running 10000 simulations.:  54%|█████▍    | 5375/10000 [00:33<00:30, 151.92it/s]Running 10000 simulations.:  54%|█████▍    | 5391/10000 [00:33<00:30, 152.49it/s]Running 10000 simulations.:  54%|█████▍    | 5407/10000 [00:33<00:29, 153.54it/s]Running 10000 simulations.:  54%|█████▍    | 5423/10000 [00:33<00:29, 153.40it/s]Running 10000 simulations.:  54%|█████▍    | 5439/10000 [00:33<00:29, 152.92it/s]Running 10000 simulations.:  55%|█████▍    | 5455/10000 [00:33<00:29, 152.63it/s]Running 10000 simulations.:  55%|█████▍    | 5471/10000 [00:33<00:29, 152.43it/s]Running 10000 simulations.:  55%|█████▍    | 5487/10000 [00:33<00:29, 152.82it/s]Running 10000 simulations.:  55%|█████▌    | 5503/10000 [00:33<00:29, 152.87it/s]Running 10000 simulations.:  55%|█████▌    | 5519/10000 [00:34<00:29, 152.06it/s]Running 10000 simulations.:  55%|█████▌    | 5535/10000 [00:34<00:29, 151.50it/s]Running 10000 simulations.:  56%|█████▌    | 5551/10000 [00:34<00:29, 151.00it/s]Running 10000 simulations.:  56%|█████▌    | 5568/10000 [00:34<00:28, 154.08it/s]Running 10000 simulations.:  56%|█████▌    | 5584/10000 [00:34<00:28, 153.74it/s]Running 10000 simulations.:  56%|█████▌    | 5600/10000 [00:34<00:28, 153.20it/s]Running 10000 simulations.:  56%|█████▌    | 5616/10000 [00:34<00:28, 152.65it/s]Running 10000 simulations.:  56%|█████▋    | 5632/10000 [00:34<00:28, 151.96it/s]Running 10000 simulations.:  56%|█████▋    | 5648/10000 [00:34<00:28, 151.71it/s]Running 10000 simulations.:  57%|█████▋    | 5664/10000 [00:35<00:28, 151.77it/s]Running 10000 simulations.:  57%|█████▋    | 5680/10000 [00:35<00:28, 152.23it/s]Running 10000 simulations.:  57%|█████▋    | 5696/10000 [00:35<00:28, 152.35it/s]Running 10000 simulations.:  57%|█████▋    | 5712/10000 [00:35<00:28, 151.32it/s]Running 10000 simulations.:  57%|█████▋    | 5728/10000 [00:35<00:28, 150.98it/s]Running 10000 simulations.:  57%|█████▋    | 5744/10000 [00:35<00:28, 150.25it/s]Running 10000 simulations.:  58%|█████▊    | 5760/10000 [00:35<00:27, 152.78it/s]Running 10000 simulations.:  58%|█████▊    | 5776/10000 [00:35<00:27, 152.77it/s]Running 10000 simulations.:  58%|█████▊    | 5792/10000 [00:35<00:27, 152.29it/s]Running 10000 simulations.:  58%|█████▊    | 5808/10000 [00:35<00:27, 151.72it/s]Running 10000 simulations.:  58%|█████▊    | 5824/10000 [00:36<00:27, 151.20it/s]Running 10000 simulations.:  58%|█████▊    | 5840/10000 [00:36<00:27, 152.50it/s]Running 10000 simulations.:  59%|█████▊    | 5859/10000 [00:36<00:25, 160.73it/s]Running 10000 simulations.:  59%|█████▉    | 5877/10000 [00:36<00:24, 165.25it/s]Running 10000 simulations.:  59%|█████▉    | 5895/10000 [00:36<00:24, 167.52it/s]Running 10000 simulations.:  59%|█████▉    | 5913/10000 [00:36<00:24, 169.62it/s]Running 10000 simulations.:  59%|█████▉    | 5931/10000 [00:36<00:23, 170.00it/s]Running 10000 simulations.:  59%|█████▉    | 5949/10000 [00:36<00:23, 171.99it/s]Running 10000 simulations.:  60%|█████▉    | 5967/10000 [00:36<00:23, 171.28it/s]Running 10000 simulations.:  60%|█████▉    | 5985/10000 [00:37<00:23, 170.30it/s]Running 10000 simulations.:  60%|██████    | 6003/10000 [00:37<00:23, 169.35it/s]Running 10000 simulations.:  60%|██████    | 6020/10000 [00:37<00:23, 169.32it/s]Running 10000 simulations.:  60%|██████    | 6037/10000 [00:37<00:23, 169.17it/s]Running 10000 simulations.:  61%|██████    | 6054/10000 [00:37<00:23, 169.07it/s]Running 10000 simulations.:  61%|██████    | 6071/10000 [00:37<00:26, 146.71it/s]Running 10000 simulations.:  61%|██████    | 6087/10000 [00:37<00:29, 133.60it/s]Running 10000 simulations.:  61%|██████    | 6101/10000 [00:37<00:30, 126.82it/s]Running 10000 simulations.:  61%|██████    | 6115/10000 [00:37<00:32, 121.14it/s]Running 10000 simulations.:  61%|██████▏   | 6128/10000 [00:38<00:32, 118.39it/s]Running 10000 simulations.:  61%|██████▏   | 6141/10000 [00:38<00:32, 117.64it/s]Running 10000 simulations.:  62%|██████▏   | 6153/10000 [00:38<00:33, 116.08it/s]Running 10000 simulations.:  62%|██████▏   | 6165/10000 [00:38<00:33, 114.72it/s]Running 10000 simulations.:  62%|██████▏   | 6177/10000 [00:38<00:33, 114.37it/s]Running 10000 simulations.:  62%|██████▏   | 6189/10000 [00:38<00:33, 114.91it/s]Running 10000 simulations.:  62%|██████▏   | 6201/10000 [00:38<00:33, 115.01it/s]Running 10000 simulations.:  62%|██████▏   | 6213/10000 [00:38<00:33, 113.92it/s]Running 10000 simulations.:  62%|██████▏   | 6225/10000 [00:38<00:33, 113.51it/s]Running 10000 simulations.:  62%|██████▏   | 6237/10000 [00:39<00:32, 114.35it/s]Running 10000 simulations.:  62%|██████▏   | 6249/10000 [00:39<00:32, 115.33it/s]Running 10000 simulations.:  63%|██████▎   | 6261/10000 [00:39<00:32, 115.09it/s]Running 10000 simulations.:  63%|██████▎   | 6273/10000 [00:39<00:32, 113.90it/s]Running 10000 simulations.:  63%|██████▎   | 6285/10000 [00:39<00:32, 113.83it/s]Running 10000 simulations.:  63%|██████▎   | 6297/10000 [00:39<00:32, 113.41it/s]Running 10000 simulations.:  63%|██████▎   | 6309/10000 [00:39<00:32, 113.77it/s]Running 10000 simulations.:  63%|██████▎   | 6321/10000 [00:39<00:32, 113.11it/s]Running 10000 simulations.:  63%|██████▎   | 6333/10000 [00:39<00:32, 113.60it/s]Running 10000 simulations.:  63%|██████▎   | 6345/10000 [00:40<00:32, 113.26it/s]Running 10000 simulations.:  64%|██████▎   | 6357/10000 [00:40<00:32, 112.47it/s]Running 10000 simulations.:  64%|██████▎   | 6369/10000 [00:40<00:32, 113.20it/s]Running 10000 simulations.:  64%|██████▍   | 6381/10000 [00:40<00:31, 114.29it/s]Running 10000 simulations.:  64%|██████▍   | 6395/10000 [00:40<00:30, 118.73it/s]Running 10000 simulations.:  64%|██████▍   | 6408/10000 [00:40<00:29, 121.75it/s]Running 10000 simulations.:  64%|██████▍   | 6422/10000 [00:40<00:28, 124.36it/s]Running 10000 simulations.:  64%|██████▍   | 6436/10000 [00:40<00:28, 126.04it/s]Running 10000 simulations.:  64%|██████▍   | 6450/10000 [00:40<00:27, 127.48it/s]Running 10000 simulations.:  65%|██████▍   | 6463/10000 [00:40<00:27, 127.72it/s]Running 10000 simulations.:  65%|██████▍   | 6476/10000 [00:41<00:27, 128.30it/s]Running 10000 simulations.:  65%|██████▍   | 6490/10000 [00:41<00:27, 129.07it/s]Running 10000 simulations.:  65%|██████▌   | 6503/10000 [00:41<00:27, 129.03it/s]Running 10000 simulations.:  65%|██████▌   | 6516/10000 [00:41<00:27, 128.83it/s]Running 10000 simulations.:  65%|██████▌   | 6529/10000 [00:41<00:26, 128.74it/s]Running 10000 simulations.:  65%|██████▌   | 6543/10000 [00:41<00:26, 129.42it/s]Running 10000 simulations.:  66%|██████▌   | 6557/10000 [00:41<00:26, 129.64it/s]Running 10000 simulations.:  66%|██████▌   | 6570/10000 [00:41<00:26, 128.77it/s]Running 10000 simulations.:  66%|██████▌   | 6583/10000 [00:41<00:26, 128.40it/s]Running 10000 simulations.:  66%|██████▌   | 6596/10000 [00:41<00:26, 127.01it/s]Running 10000 simulations.:  66%|██████▌   | 6610/10000 [00:42<00:26, 127.98it/s]Running 10000 simulations.:  66%|██████▌   | 6623/10000 [00:42<00:26, 128.50it/s]Running 10000 simulations.:  66%|██████▋   | 6637/10000 [00:42<00:26, 129.16it/s]Running 10000 simulations.:  67%|██████▋   | 6651/10000 [00:42<00:25, 129.58it/s]Running 10000 simulations.:  67%|██████▋   | 6665/10000 [00:42<00:25, 129.85it/s]Running 10000 simulations.:  67%|██████▋   | 6679/10000 [00:42<00:25, 130.55it/s]Running 10000 simulations.:  67%|██████▋   | 6693/10000 [00:42<00:25, 131.29it/s]Running 10000 simulations.:  67%|██████▋   | 6707/10000 [00:42<00:24, 131.97it/s]Running 10000 simulations.:  67%|██████▋   | 6721/10000 [00:42<00:24, 132.51it/s]Running 10000 simulations.:  67%|██████▋   | 6738/10000 [00:43<00:23, 139.55it/s]Running 10000 simulations.:  68%|██████▊   | 6754/10000 [00:43<00:22, 142.57it/s]Running 10000 simulations.:  68%|██████▊   | 6769/10000 [00:43<00:22, 143.95it/s]Running 10000 simulations.:  68%|██████▊   | 6784/10000 [00:43<00:22, 142.80it/s]Running 10000 simulations.:  68%|██████▊   | 6799/10000 [00:43<00:22, 141.66it/s]Running 10000 simulations.:  68%|██████▊   | 6814/10000 [00:43<00:22, 141.86it/s]Running 10000 simulations.:  68%|██████▊   | 6829/10000 [00:43<00:22, 141.23it/s]Running 10000 simulations.:  68%|██████▊   | 6844/10000 [00:43<00:22, 142.59it/s]Running 10000 simulations.:  69%|██████▊   | 6859/10000 [00:43<00:22, 142.37it/s]Running 10000 simulations.:  69%|██████▉   | 6875/10000 [00:44<00:21, 144.28it/s]Running 10000 simulations.:  69%|██████▉   | 6890/10000 [00:44<00:22, 140.11it/s]Running 10000 simulations.:  69%|██████▉   | 6905/10000 [00:44<00:22, 137.07it/s]Running 10000 simulations.:  69%|██████▉   | 6919/10000 [00:44<00:22, 135.06it/s]Running 10000 simulations.:  69%|██████▉   | 6933/10000 [00:44<00:22, 133.55it/s]Running 10000 simulations.:  69%|██████▉   | 6947/10000 [00:44<00:23, 132.60it/s]Running 10000 simulations.:  70%|██████▉   | 6961/10000 [00:44<00:23, 131.93it/s]Running 10000 simulations.:  70%|██████▉   | 6975/10000 [00:44<00:23, 131.23it/s]Running 10000 simulations.:  70%|██████▉   | 6989/10000 [00:44<00:23, 129.89it/s]Running 10000 simulations.:  70%|███████   | 7003/10000 [00:44<00:23, 129.63it/s]Running 10000 simulations.:  70%|███████   | 7017/10000 [00:45<00:22, 130.19it/s]Running 10000 simulations.:  70%|███████   | 7031/10000 [00:45<00:22, 130.43it/s]Running 10000 simulations.:  70%|███████   | 7045/10000 [00:45<00:22, 130.56it/s]Running 10000 simulations.:  71%|███████   | 7059/10000 [00:45<00:22, 130.81it/s]Running 10000 simulations.:  71%|███████   | 7073/10000 [00:45<00:22, 130.84it/s]Running 10000 simulations.:  71%|███████   | 7087/10000 [00:45<00:22, 130.63it/s]Running 10000 simulations.:  71%|███████   | 7101/10000 [00:45<00:22, 130.44it/s]Running 10000 simulations.:  71%|███████   | 7115/10000 [00:45<00:22, 130.26it/s]Running 10000 simulations.:  71%|███████▏  | 7129/10000 [00:45<00:22, 130.25it/s]Running 10000 simulations.:  71%|███████▏  | 7143/10000 [00:46<00:21, 129.91it/s]Running 10000 simulations.:  72%|███████▏  | 7156/10000 [00:46<00:21, 129.45it/s]Running 10000 simulations.:  72%|███████▏  | 7170/10000 [00:46<00:21, 130.01it/s]Running 10000 simulations.:  72%|███████▏  | 7184/10000 [00:46<00:21, 130.62it/s]Running 10000 simulations.:  72%|███████▏  | 7198/10000 [00:46<00:21, 130.85it/s]Running 10000 simulations.:  72%|███████▏  | 7212/10000 [00:46<00:21, 130.90it/s]Running 10000 simulations.:  72%|███████▏  | 7226/10000 [00:46<00:21, 131.27it/s]Running 10000 simulations.:  72%|███████▏  | 7240/10000 [00:46<00:21, 130.76it/s]Running 10000 simulations.:  73%|███████▎  | 7254/10000 [00:46<00:21, 130.07it/s]Running 10000 simulations.:  73%|███████▎  | 7268/10000 [00:47<00:20, 130.19it/s]Running 10000 simulations.:  73%|███████▎  | 7282/10000 [00:47<00:20, 130.04it/s]Running 10000 simulations.:  73%|███████▎  | 7296/10000 [00:47<00:20, 130.00it/s]Running 10000 simulations.:  73%|███████▎  | 7310/10000 [00:47<00:20, 130.22it/s]Running 10000 simulations.:  73%|███████▎  | 7324/10000 [00:47<00:20, 130.38it/s]Running 10000 simulations.:  73%|███████▎  | 7338/10000 [00:47<00:20, 130.75it/s]Running 10000 simulations.:  74%|███████▎  | 7352/10000 [00:47<00:20, 130.93it/s]Running 10000 simulations.:  74%|███████▎  | 7366/10000 [00:47<00:20, 131.29it/s]Running 10000 simulations.:  74%|███████▍  | 7380/10000 [00:47<00:19, 131.41it/s]Running 10000 simulations.:  74%|███████▍  | 7394/10000 [00:47<00:19, 131.69it/s]Running 10000 simulations.:  74%|███████▍  | 7408/10000 [00:48<00:19, 131.94it/s]Running 10000 simulations.:  74%|███████▍  | 7422/10000 [00:48<00:19, 131.97it/s]Running 10000 simulations.:  74%|███████▍  | 7436/10000 [00:48<00:19, 131.89it/s]Running 10000 simulations.:  74%|███████▍  | 7450/10000 [00:48<00:19, 131.79it/s]Running 10000 simulations.:  75%|███████▍  | 7464/10000 [00:48<00:19, 131.49it/s]Running 10000 simulations.:  75%|███████▍  | 7478/10000 [00:48<00:19, 131.25it/s]Running 10000 simulations.:  75%|███████▍  | 7492/10000 [00:48<00:19, 131.40it/s]Running 10000 simulations.:  75%|███████▌  | 7506/10000 [00:48<00:18, 131.95it/s]Running 10000 simulations.:  75%|███████▌  | 7520/10000 [00:48<00:18, 132.32it/s]Running 10000 simulations.:  75%|███████▌  | 7534/10000 [00:49<00:18, 132.18it/s]Running 10000 simulations.:  75%|███████▌  | 7548/10000 [00:49<00:18, 131.99it/s]Running 10000 simulations.:  76%|███████▌  | 7562/10000 [00:49<00:18, 131.66it/s]Running 10000 simulations.:  76%|███████▌  | 7576/10000 [00:49<00:18, 131.18it/s]Running 10000 simulations.:  76%|███████▌  | 7590/10000 [00:49<00:18, 130.75it/s]Running 10000 simulations.:  76%|███████▌  | 7604/10000 [00:49<00:18, 131.10it/s]Running 10000 simulations.:  76%|███████▌  | 7618/10000 [00:49<00:18, 131.59it/s]Running 10000 simulations.:  76%|███████▋  | 7632/10000 [00:49<00:18, 131.55it/s]Running 10000 simulations.:  76%|███████▋  | 7646/10000 [00:49<00:17, 131.61it/s]Running 10000 simulations.:  77%|███████▋  | 7660/10000 [00:50<00:17, 131.33it/s]Running 10000 simulations.:  77%|███████▋  | 7674/10000 [00:50<00:17, 131.28it/s]Running 10000 simulations.:  77%|███████▋  | 7688/10000 [00:50<00:17, 131.27it/s]Running 10000 simulations.:  77%|███████▋  | 7702/10000 [00:50<00:17, 131.85it/s]Running 10000 simulations.:  77%|███████▋  | 7716/10000 [00:50<00:17, 131.86it/s]Running 10000 simulations.:  77%|███████▋  | 7730/10000 [00:50<00:17, 131.56it/s]Running 10000 simulations.:  77%|███████▋  | 7744/10000 [00:50<00:17, 131.32it/s]Running 10000 simulations.:  78%|███████▊  | 7758/10000 [00:50<00:17, 131.08it/s]Running 10000 simulations.:  78%|███████▊  | 7772/10000 [00:50<00:17, 130.93it/s]Running 10000 simulations.:  78%|███████▊  | 7786/10000 [00:50<00:16, 131.24it/s]Running 10000 simulations.:  78%|███████▊  | 7800/10000 [00:51<00:16, 130.94it/s]Running 10000 simulations.:  78%|███████▊  | 7814/10000 [00:51<00:16, 131.01it/s]Running 10000 simulations.:  78%|███████▊  | 7828/10000 [00:51<00:16, 130.98it/s]Running 10000 simulations.:  78%|███████▊  | 7842/10000 [00:51<00:16, 131.12it/s]Running 10000 simulations.:  79%|███████▊  | 7856/10000 [00:51<00:16, 131.14it/s]Running 10000 simulations.:  79%|███████▊  | 7870/10000 [00:51<00:16, 131.04it/s]Running 10000 simulations.:  79%|███████▉  | 7884/10000 [00:51<00:16, 130.64it/s]Running 10000 simulations.:  79%|███████▉  | 7898/10000 [00:51<00:16, 130.35it/s]Running 10000 simulations.:  79%|███████▉  | 7912/10000 [00:51<00:16, 130.20it/s]Running 10000 simulations.:  79%|███████▉  | 7926/10000 [00:52<00:15, 130.13it/s]Running 10000 simulations.:  79%|███████▉  | 7940/10000 [00:52<00:15, 130.04it/s]Running 10000 simulations.:  80%|███████▉  | 7954/10000 [00:52<00:15, 130.20it/s]Running 10000 simulations.:  80%|███████▉  | 7968/10000 [00:52<00:15, 130.17it/s]Running 10000 simulations.:  80%|███████▉  | 7982/10000 [00:52<00:15, 130.44it/s]Running 10000 simulations.:  80%|███████▉  | 7996/10000 [00:52<00:15, 130.69it/s]Running 10000 simulations.:  80%|████████  | 8010/10000 [00:52<00:15, 130.82it/s]Running 10000 simulations.:  80%|████████  | 8024/10000 [00:52<00:15, 130.97it/s]Running 10000 simulations.:  80%|████████  | 8038/10000 [00:52<00:14, 131.27it/s]Running 10000 simulations.:  81%|████████  | 8052/10000 [00:52<00:14, 131.79it/s]Running 10000 simulations.:  81%|████████  | 8066/10000 [00:53<00:14, 132.35it/s]Running 10000 simulations.:  81%|████████  | 8083/10000 [00:53<00:13, 141.68it/s]Running 10000 simulations.:  81%|████████  | 8101/10000 [00:53<00:12, 150.57it/s]Running 10000 simulations.:  81%|████████  | 8119/10000 [00:53<00:12, 155.93it/s]Running 10000 simulations.:  81%|████████▏ | 8136/10000 [00:53<00:11, 159.37it/s]Running 10000 simulations.:  82%|████████▏ | 8153/10000 [00:53<00:11, 161.50it/s]Running 10000 simulations.:  82%|████████▏ | 8170/10000 [00:53<00:11, 163.10it/s]Running 10000 simulations.:  82%|████████▏ | 8187/10000 [00:53<00:11, 164.34it/s]Running 10000 simulations.:  82%|████████▏ | 8204/10000 [00:53<00:10, 165.07it/s]Running 10000 simulations.:  82%|████████▏ | 8221/10000 [00:54<00:10, 166.09it/s]Running 10000 simulations.:  82%|████████▏ | 8239/10000 [00:54<00:10, 168.06it/s]Running 10000 simulations.:  83%|████████▎ | 8256/10000 [00:54<00:10, 167.74it/s]Running 10000 simulations.:  83%|████████▎ | 8273/10000 [00:54<00:10, 167.73it/s]Running 10000 simulations.:  83%|████████▎ | 8290/10000 [00:54<00:10, 167.11it/s]Running 10000 simulations.:  83%|████████▎ | 8307/10000 [00:54<00:10, 166.04it/s]Running 10000 simulations.:  83%|████████▎ | 8324/10000 [00:54<00:10, 165.52it/s]Running 10000 simulations.:  83%|████████▎ | 8341/10000 [00:54<00:10, 164.82it/s]Running 10000 simulations.:  84%|████████▎ | 8358/10000 [00:54<00:09, 164.49it/s]Running 10000 simulations.:  84%|████████▍ | 8375/10000 [00:54<00:09, 164.45it/s]Running 10000 simulations.:  84%|████████▍ | 8392/10000 [00:55<00:09, 164.54it/s]Running 10000 simulations.:  84%|████████▍ | 8409/10000 [00:55<00:09, 164.57it/s]Running 10000 simulations.:  84%|████████▍ | 8426/10000 [00:55<00:09, 164.57it/s]Running 10000 simulations.:  84%|████████▍ | 8443/10000 [00:55<00:09, 164.92it/s]Running 10000 simulations.:  85%|████████▍ | 8460/10000 [00:55<00:09, 165.00it/s]Running 10000 simulations.:  85%|████████▍ | 8477/10000 [00:55<00:09, 164.76it/s]Running 10000 simulations.:  85%|████████▍ | 8494/10000 [00:55<00:09, 165.52it/s]Running 10000 simulations.:  85%|████████▌ | 8511/10000 [00:55<00:08, 166.06it/s]Running 10000 simulations.:  85%|████████▌ | 8528/10000 [00:55<00:08, 166.25it/s]Running 10000 simulations.:  85%|████████▌ | 8545/10000 [00:55<00:08, 166.31it/s]Running 10000 simulations.:  86%|████████▌ | 8562/10000 [00:56<00:08, 166.42it/s]Running 10000 simulations.:  86%|████████▌ | 8579/10000 [00:56<00:08, 166.55it/s]Running 10000 simulations.:  86%|████████▌ | 8596/10000 [00:56<00:08, 166.39it/s]Running 10000 simulations.:  86%|████████▌ | 8613/10000 [00:56<00:08, 165.84it/s]Running 10000 simulations.:  86%|████████▋ | 8630/10000 [00:56<00:08, 165.43it/s]Running 10000 simulations.:  86%|████████▋ | 8647/10000 [00:56<00:08, 164.64it/s]Running 10000 simulations.:  87%|████████▋ | 8664/10000 [00:56<00:08, 164.83it/s]Running 10000 simulations.:  87%|████████▋ | 8681/10000 [00:56<00:07, 165.06it/s]Running 10000 simulations.:  87%|████████▋ | 8698/10000 [00:56<00:07, 165.55it/s]Running 10000 simulations.:  87%|████████▋ | 8715/10000 [00:57<00:07, 165.77it/s]Running 10000 simulations.:  87%|████████▋ | 8732/10000 [00:57<00:07, 166.02it/s]Running 10000 simulations.:  87%|████████▋ | 8749/10000 [00:57<00:07, 166.20it/s]Running 10000 simulations.:  88%|████████▊ | 8766/10000 [00:57<00:07, 165.88it/s]Running 10000 simulations.:  88%|████████▊ | 8783/10000 [00:57<00:07, 165.39it/s]Running 10000 simulations.:  88%|████████▊ | 8800/10000 [00:57<00:07, 165.14it/s]Running 10000 simulations.:  88%|████████▊ | 8817/10000 [00:57<00:07, 165.32it/s]Running 10000 simulations.:  88%|████████▊ | 8834/10000 [00:57<00:07, 166.31it/s]Running 10000 simulations.:  89%|████████▊ | 8851/10000 [00:57<00:06, 166.18it/s]Running 10000 simulations.:  89%|████████▊ | 8868/10000 [00:57<00:06, 165.80it/s]Running 10000 simulations.:  89%|████████▉ | 8885/10000 [00:58<00:06, 164.04it/s]Running 10000 simulations.:  89%|████████▉ | 8902/10000 [00:58<00:06, 161.10it/s]Running 10000 simulations.:  89%|████████▉ | 8919/10000 [00:58<00:06, 159.55it/s]Running 10000 simulations.:  89%|████████▉ | 8936/10000 [00:58<00:06, 160.76it/s]Running 10000 simulations.:  90%|████████▉ | 8953/10000 [00:58<00:06, 162.15it/s]Running 10000 simulations.:  90%|████████▉ | 8970/10000 [00:58<00:06, 163.13it/s]Running 10000 simulations.:  90%|████████▉ | 8987/10000 [00:58<00:06, 163.61it/s]Running 10000 simulations.:  90%|█████████ | 9004/10000 [00:58<00:06, 164.30it/s]Running 10000 simulations.:  90%|█████████ | 9021/10000 [00:58<00:05, 165.19it/s]Running 10000 simulations.:  90%|█████████ | 9038/10000 [00:58<00:05, 165.49it/s]Running 10000 simulations.:  91%|█████████ | 9055/10000 [00:59<00:05, 165.63it/s]Running 10000 simulations.:  91%|█████████ | 9072/10000 [00:59<00:05, 165.51it/s]Running 10000 simulations.:  91%|█████████ | 9089/10000 [00:59<00:05, 165.17it/s]Running 10000 simulations.:  91%|█████████ | 9106/10000 [00:59<00:05, 165.11it/s]Running 10000 simulations.:  91%|█████████ | 9123/10000 [00:59<00:05, 165.09it/s]Running 10000 simulations.:  91%|█████████▏| 9140/10000 [00:59<00:05, 165.14it/s]Running 10000 simulations.:  92%|█████████▏| 9157/10000 [00:59<00:05, 165.25it/s]Running 10000 simulations.:  92%|█████████▏| 9174/10000 [00:59<00:04, 166.30it/s]Running 10000 simulations.:  92%|█████████▏| 9192/10000 [00:59<00:04, 167.45it/s]Running 10000 simulations.:  92%|█████████▏| 9209/10000 [00:59<00:04, 168.13it/s]Running 10000 simulations.:  92%|█████████▏| 9226/10000 [01:00<00:04, 168.44it/s]Running 10000 simulations.:  92%|█████████▏| 9243/10000 [01:00<00:04, 168.82it/s]Running 10000 simulations.:  93%|█████████▎| 9260/10000 [01:00<00:04, 162.36it/s]Running 10000 simulations.:  93%|█████████▎| 9277/10000 [01:00<00:04, 164.17it/s]Running 10000 simulations.:  93%|█████████▎| 9294/10000 [01:00<00:04, 165.60it/s]Running 10000 simulations.:  93%|█████████▎| 9311/10000 [01:00<00:04, 166.46it/s]Running 10000 simulations.:  93%|█████████▎| 9328/10000 [01:00<00:04, 166.96it/s]Running 10000 simulations.:  93%|█████████▎| 9345/10000 [01:00<00:03, 167.13it/s]Running 10000 simulations.:  94%|█████████▎| 9362/10000 [01:00<00:03, 167.50it/s]Running 10000 simulations.:  94%|█████████▍| 9379/10000 [01:01<00:03, 167.85it/s]Running 10000 simulations.:  94%|█████████▍| 9396/10000 [01:01<00:03, 168.05it/s]Running 10000 simulations.:  94%|█████████▍| 9413/10000 [01:01<00:03, 168.36it/s]Running 10000 simulations.:  94%|█████████▍| 9430/10000 [01:01<00:03, 167.54it/s]Running 10000 simulations.:  94%|█████████▍| 9447/10000 [01:01<00:03, 166.99it/s]Running 10000 simulations.:  95%|█████████▍| 9464/10000 [01:01<00:03, 166.89it/s]Running 10000 simulations.:  95%|█████████▍| 9481/10000 [01:01<00:03, 166.49it/s]Running 10000 simulations.:  95%|█████████▍| 9498/10000 [01:01<00:03, 162.27it/s]Running 10000 simulations.:  95%|█████████▌| 9515/10000 [01:01<00:03, 160.09it/s]Running 10000 simulations.:  95%|█████████▌| 9532/10000 [01:01<00:02, 160.26it/s]Running 10000 simulations.:  95%|█████████▌| 9549/10000 [01:02<00:02, 158.20it/s]Running 10000 simulations.:  96%|█████████▌| 9565/10000 [01:02<00:02, 156.93it/s]Running 10000 simulations.:  96%|█████████▌| 9581/10000 [01:02<00:02, 156.74it/s]Running 10000 simulations.:  96%|█████████▌| 9598/10000 [01:02<00:02, 157.86it/s]Running 10000 simulations.:  96%|█████████▌| 9615/10000 [01:02<00:02, 160.62it/s]Running 10000 simulations.:  96%|█████████▋| 9632/10000 [01:02<00:02, 159.26it/s]Running 10000 simulations.:  96%|█████████▋| 9648/10000 [01:02<00:02, 157.94it/s]Running 10000 simulations.:  97%|█████████▋| 9664/10000 [01:02<00:02, 157.15it/s]Running 10000 simulations.:  97%|█████████▋| 9680/10000 [01:02<00:02, 157.16it/s]Running 10000 simulations.:  97%|█████████▋| 9696/10000 [01:02<00:01, 156.04it/s]Running 10000 simulations.:  97%|█████████▋| 9712/10000 [01:03<00:01, 155.65it/s]Running 10000 simulations.:  97%|█████████▋| 9728/10000 [01:03<00:01, 155.36it/s]Running 10000 simulations.:  97%|█████████▋| 9744/10000 [01:03<00:01, 153.27it/s]Running 10000 simulations.:  98%|█████████▊| 9760/10000 [01:03<00:01, 152.86it/s]Running 10000 simulations.:  98%|█████████▊| 9776/10000 [01:03<00:01, 152.69it/s]Running 10000 simulations.:  98%|█████████▊| 9792/10000 [01:03<00:01, 152.66it/s]Running 10000 simulations.:  98%|█████████▊| 9808/10000 [01:03<00:01, 152.84it/s]Running 10000 simulations.:  98%|█████████▊| 9824/10000 [01:03<00:01, 152.90it/s]Running 10000 simulations.:  98%|█████████▊| 9840/10000 [01:03<00:01, 153.23it/s]Running 10000 simulations.:  99%|█████████▊| 9856/10000 [01:04<00:00, 152.24it/s]Running 10000 simulations.:  99%|█████████▊| 9872/10000 [01:04<00:00, 152.71it/s]Running 10000 simulations.:  99%|█████████▉| 9888/10000 [01:04<00:00, 151.65it/s]Running 10000 simulations.:  99%|█████████▉| 9904/10000 [01:04<00:00, 152.41it/s]Running 10000 simulations.:  99%|█████████▉| 9920/10000 [01:04<00:00, 152.44it/s]Running 10000 simulations.:  99%|█████████▉| 9936/10000 [01:04<00:00, 152.55it/s]Running 10000 simulations.: 100%|█████████▉| 9952/10000 [01:04<00:00, 152.25it/s]Running 10000 simulations.: 100%|█████████▉| 9968/10000 [01:04<00:00, 152.92it/s]Running 10000 simulations.: 100%|█████████▉| 9984/10000 [01:04<00:00, 152.90it/s]Running 10000 simulations.: 100%|██████████| 10000/10000 [01:04<00:00, 153.13it/s]Running 10000 simulations.: 100%|██████████| 10000/10000 [01:04<00:00, 153.87it/s]
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  62%|██████▏   | 30841/50000 [00:00<00:00, 276400.48it/s]Drawing 50000 posterior samples: 53979it [00:00, 276339.42it/s]                           
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  26%|██▋       | 13237/50000 [00:00<00:00, 119090.78it/s]Drawing 50000 posterior samples:  52%|█████▏    | 26180/50000 [00:00<00:00, 118137.39it/s]Drawing 50000 posterior samples:  78%|███████▊  | 39139/50000 [00:00<00:00, 117380.69it/s]Drawing 50000 posterior samples: 52083it [00:00, 117485.72it/s]                           Drawing 50000 posterior samples: 52083it [00:00, 116966.02it/s]
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  73%|███████▎  | 36718/50000 [00:00<00:00, 327697.01it/s]Drawing 50000 posterior samples: 55090it [00:00, 326395.99it/s]                           
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  73%|███████▎  | 36651/50000 [00:00<00:00, 327536.04it/s]Drawing 50000 posterior samples: 54945it [00:00, 327172.00it/s]                           
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  43%|████▎     | 21306/50000 [00:00<00:00, 189847.43it/s]Drawing 50000 posterior samples:  85%|████████▌ | 42707/50000 [00:00<00:00, 189808.51it/s]Drawing 50000 posterior samples: 53341it [00:00, 189260.61it/s]                           
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  20%|██        | 10168/50000 [00:00<00:00, 91579.16it/s]Drawing 50000 posterior samples:  40%|████      | 20167/50000 [00:00<00:00, 91212.09it/s]Drawing 50000 posterior samples:  60%|██████    | 30163/50000 [00:00<00:00, 92622.84it/s]Drawing 50000 posterior samples:  86%|████████▌ | 42759/50000 [00:00<00:00, 94736.72it/s]Drawing 50000 posterior samples: 50131it [00:00, 94819.73it/s]                           
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  70%|██████▉   | 34967/50000 [00:00<00:00, 321571.98it/s]Drawing 50000 posterior samples: 52500it [00:00, 320152.60it/s]                           
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  19%|█▉        | 9714/50000 [00:00<00:00, 95205.25it/s]Drawing 50000 posterior samples:  39%|███▊      | 19372/50000 [00:00<00:00, 94606.57it/s]Drawing 50000 posterior samples:  58%|█████▊    | 29133/50000 [00:00<00:00, 94729.50it/s]Drawing 50000 posterior samples:  78%|███████▊  | 38838/50000 [00:00<00:00, 94622.27it/s]Drawing 50000 posterior samples:  97%|█████████▋| 48509/50000 [00:00<00:00, 95131.00it/s]Drawing 50000 posterior samples: 51750it [00:00, 94762.05it/s]                           
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  42%|████▏     | 20892/50000 [00:00<00:00, 200298.52it/s]Drawing 50000 posterior samples:  83%|████████▎ | 41691/50000 [00:00<00:00, 200331.86it/s]Drawing 50000 posterior samples: 55561it [00:00, 200168.80it/s]                           
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  15%|█▌        | 7531/50000 [00:00<00:00, 58591.14it/s]Drawing 50000 posterior samples:  30%|███       | 15112/50000 [00:00<00:00, 58884.60it/s]Drawing 50000 posterior samples:  45%|████▌     | 22640/50000 [00:00<00:00, 58958.67it/s]Drawing 50000 posterior samples:  60%|██████    | 30114/50000 [00:00<00:00, 58775.56it/s]Drawing 50000 posterior samples:  75%|███████▌  | 37698/50000 [00:00<00:00, 58759.62it/s]Drawing 50000 posterior samples:  90%|█████████ | 45061/50000 [00:00<00:00, 58367.03it/s]Drawing 50000 posterior samples: 50588it [00:00, 58475.40it/s]                           
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:   9%|▉         | 4500/50000 [00:00<00:01, 35512.31it/s]Drawing 50000 posterior samples:  18%|█▊        | 9087/50000 [00:00<00:01, 35778.28it/s]Drawing 50000 posterior samples:  27%|██▋       | 13594/50000 [00:00<00:01, 35614.76it/s]Drawing 50000 posterior samples:  36%|███▌      | 18088/50000 [00:00<00:00, 35359.62it/s]Drawing 50000 posterior samples:  45%|████▌     | 22633/50000 [00:00<00:00, 35488.20it/s]Drawing 50000 posterior samples:  54%|█████▍    | 27084/50000 [00:00<00:00, 35368.47it/s]Drawing 50000 posterior samples:  63%|██████▎   | 31659/50000 [00:00<00:00, 35474.07it/s]Drawing 50000 posterior samples:  72%|███████▏  | 36118/50000 [00:01<00:00, 35285.86it/s]Drawing 50000 posterior samples:  81%|████████▏ | 40658/50000 [00:01<00:00, 35292.72it/s]Drawing 50000 posterior samples:  90%|█████████ | 45235/50000 [00:01<00:00, 35281.57it/s]Drawing 50000 posterior samples:  99%|█████████▉| 49665/50000 [00:01<00:00, 34941.19it/s]Drawing 50000 posterior samples: 50805it [00:01, 35275.03it/s]                           
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  42%|████▏     | 20957/50000 [00:00<00:00, 160543.89it/s]Drawing 50000 posterior samples:  83%|████████▎ | 41675/50000 [00:00<00:00, 160065.00it/s]Drawing 50000 posterior samples: 52202it [00:00, 160016.85it/s]                           
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  73%|███████▎  | 36465/50000 [00:00<00:00, 280062.14it/s]Drawing 50000 posterior samples: 54671it [00:00, 279410.73it/s]                           
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  74%|███████▎  | 36840/50000 [00:00<00:00, 285648.56it/s]Drawing 50000 posterior samples: 55153it [00:00, 285416.96it/s]                           
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  73%|███████▎  | 36686/50000 [00:00<00:00, 284944.89it/s]Drawing 50000 posterior samples: 55075it [00:00, 283026.35it/s]                           
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  44%|████▍     | 21950/50000 [00:00<00:00, 171381.88it/s]Drawing 50000 posterior samples:  88%|████████▊ | 43923/50000 [00:00<00:00, 170875.30it/s]Drawing 50000 posterior samples: 55028it [00:00, 170594.53it/s]                           
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  73%|███████▎  | 36465/50000 [00:00<00:00, 306338.46it/s]Drawing 50000 posterior samples: 54690it [00:00, 305586.66it/s]                           
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  61%|██████    | 30460/50000 [00:00<00:00, 233754.03it/s]Drawing 50000 posterior samples: 53345it [00:00, 233990.42it/s]                           
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  73%|███████▎  | 36593/50000 [00:00<00:00, 283376.63it/s]Drawing 50000 posterior samples: 55014it [00:00, 284269.04it/s]                           
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  63%|██████▎   | 31446/50000 [00:00<00:00, 247968.75it/s]Drawing 50000 posterior samples: 55048it [00:00, 246282.95it/s]                           
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  74%|███████▎  | 36751/50000 [00:00<00:00, 285345.13it/s]Drawing 50000 posterior samples: 55072it [00:00, 285586.58it/s]                           
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  24%|██▍       | 12180/50000 [00:00<00:00, 113645.28it/s]Drawing 50000 posterior samples:  49%|████▉     | 24450/50000 [00:00<00:00, 113243.59it/s]Drawing 50000 posterior samples:  73%|███████▎  | 36652/50000 [00:00<00:00, 112741.38it/s]Drawing 50000 posterior samples:  97%|█████████▋| 48694/50000 [00:00<00:00, 113105.17it/s]Drawing 50000 posterior samples: 51728it [00:00, 112697.43it/s]                           
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  68%|██████▊   | 33875/50000 [00:00<00:00, 336405.12it/s]Drawing 50000 posterior samples: 50838it [00:00, 334865.60it/s]                           
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  15%|█▌        | 7717/50000 [00:00<00:00, 75331.11it/s]Drawing 50000 posterior samples:  31%|███       | 15348/50000 [00:00<00:00, 75119.57it/s]Drawing 50000 posterior samples:  46%|████▌     | 23001/50000 [00:00<00:00, 75400.16it/s]Drawing 50000 posterior samples:  62%|██████▏   | 30826/50000 [00:00<00:00, 75915.60it/s]Drawing 50000 posterior samples:  77%|███████▋  | 38475/50000 [00:00<00:00, 75761.29it/s]Drawing 50000 posterior samples:  92%|█████████▏| 46184/50000 [00:00<00:00, 75851.64it/s]Drawing 50000 posterior samples: 50032it [00:00, 75627.79it/s]                           
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  56%|█████▌    | 27861/50000 [00:00<00:00, 271589.84it/s]Drawing 50000 posterior samples: 55691it [00:00, 271503.09it/s]                           Drawing 50000 posterior samples: 55691it [00:00, 270569.38it/s]
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  64%|██████▍   | 31995/50000 [00:00<00:00, 309886.73it/s]Drawing 50000 posterior samples: 55785it [00:00, 310585.88it/s]                           
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:   5%|▍         | 2481/50000 [00:00<00:01, 24225.40it/s]Drawing 50000 posterior samples:  10%|▉         | 4897/50000 [00:00<00:01, 24034.60it/s]Drawing 50000 posterior samples:  15%|█▍        | 7266/50000 [00:00<00:01, 23341.44it/s]Drawing 50000 posterior samples:  19%|█▉        | 9617/50000 [00:00<00:01, 23189.91it/s]Drawing 50000 posterior samples:  24%|██▍       | 11998/50000 [00:00<00:01, 23299.57it/s]Drawing 50000 posterior samples:  29%|██▊       | 14328/50000 [00:00<00:01, 23205.16it/s]Drawing 50000 posterior samples:  33%|███▎      | 16733/50000 [00:00<00:01, 23420.19it/s]Drawing 50000 posterior samples:  38%|███▊      | 19145/50000 [00:00<00:01, 23509.90it/s]Drawing 50000 posterior samples:  43%|████▎     | 21467/50000 [00:00<00:01, 23289.84it/s]Drawing 50000 posterior samples:  49%|████▊     | 24274/50000 [00:01<00:01, 23007.52it/s]Drawing 50000 posterior samples:  53%|█████▎    | 26702/50000 [00:01<00:01, 23216.45it/s]Drawing 50000 posterior samples:  58%|█████▊    | 29151/50000 [00:01<00:00, 23431.79it/s]Drawing 50000 posterior samples:  63%|██████▎   | 31555/50000 [00:01<00:00, 23429.66it/s]Drawing 50000 posterior samples:  68%|██████▊   | 33927/50000 [00:01<00:00, 23342.57it/s]Drawing 50000 posterior samples:  73%|███████▎  | 36342/50000 [00:01<00:00, 23487.50it/s]Drawing 50000 posterior samples:  77%|███████▋  | 38681/50000 [00:01<00:00, 23457.55it/s]Drawing 50000 posterior samples:  82%|████████▏ | 41032/50000 [00:01<00:00, 23322.49it/s]Drawing 50000 posterior samples:  87%|████████▋ | 43404/50000 [00:01<00:00, 23258.65it/s]Drawing 50000 posterior samples:  92%|█████████▏| 45874/50000 [00:01<00:00, 23506.48it/s]Drawing 50000 posterior samples:  97%|█████████▋| 48276/50000 [00:02<00:00, 23544.55it/s]Drawing 50000 posterior samples: 50037it [00:02, 23337.68it/s]                           
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:   9%|▉         | 4388/50000 [00:00<00:01, 43546.25it/s]Drawing 50000 posterior samples:  18%|█▊        | 8926/50000 [00:00<00:00, 43916.97it/s]Drawing 50000 posterior samples:  26%|██▋       | 13225/50000 [00:00<00:00, 43422.97it/s]Drawing 50000 posterior samples:  35%|███▌      | 17630/50000 [00:00<00:00, 41696.45it/s]Drawing 50000 posterior samples:  44%|████▍     | 22052/50000 [00:00<00:00, 41141.89it/s]Drawing 50000 posterior samples:  53%|█████▎    | 26412/50000 [00:00<00:00, 40853.37it/s]Drawing 50000 posterior samples:  62%|██████▏   | 30898/50000 [00:00<00:00, 39856.26it/s]Drawing 50000 posterior samples:  71%|███████   | 35445/50000 [00:00<00:00, 39371.37it/s]Drawing 50000 posterior samples:  80%|███████▉  | 39824/50000 [00:00<00:00, 38479.71it/s]Drawing 50000 posterior samples:  88%|████████▊ | 44230/50000 [00:01<00:00, 38982.43it/s]Drawing 50000 posterior samples:  97%|█████████▋| 48662/50000 [00:01<00:00, 39646.59it/s]Drawing 50000 posterior samples: 50863it [00:01, 39984.74it/s]                           
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  29%|██▉       | 14647/50000 [00:00<00:00, 122087.56it/s]Drawing 50000 posterior samples:  58%|█████▊    | 28990/50000 [00:00<00:00, 123083.39it/s]Drawing 50000 posterior samples:  87%|████████▋ | 43292/50000 [00:00<00:00, 123808.32it/s]Drawing 50000 posterior samples: 50432it [00:00, 124402.04it/s]                           
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  73%|███████▎  | 36686/50000 [00:00<00:00, 305996.62it/s]Drawing 50000 posterior samples: 55033it [00:00, 310456.64it/s]                           
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  62%|██████▏   | 30797/50000 [00:00<00:00, 258772.49it/s]Drawing 50000 posterior samples: 53891it [00:00, 264585.94it/s]                           
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  27%|██▋       | 13252/50000 [00:00<00:00, 110137.37it/s]Drawing 50000 posterior samples:  47%|████▋     | 23349/50000 [00:00<00:00, 106358.66it/s]Drawing 50000 posterior samples:  73%|███████▎  | 36523/50000 [00:00<00:00, 107465.56it/s]Drawing 50000 posterior samples: 100%|█████████▉| 49768/50000 [00:00<00:00, 110361.68it/s]Drawing 50000 posterior samples: 53018it [00:00, 109592.45it/s]                           
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  58%|█████▊    | 29093/50000 [00:00<00:00, 240843.19it/s]Drawing 50000 posterior samples: 50881it [00:00, 240083.41it/s]                           
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  73%|███████▎  | 36702/50000 [00:00<00:00, 303721.35it/s]Drawing 50000 posterior samples: 54994it [00:00, 307932.63it/s]                           
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  41%|████      | 20598/50000 [00:00<00:00, 171720.11it/s]Drawing 50000 posterior samples:  83%|████████▎ | 41328/50000 [00:00<00:00, 173149.09it/s]Drawing 50000 posterior samples: 51510it [00:00, 175118.36it/s]                           
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  18%|█▊        | 8769/50000 [00:00<00:00, 74061.10it/s]Drawing 50000 posterior samples:  35%|███▌      | 17621/50000 [00:00<00:00, 72621.17it/s]Drawing 50000 posterior samples:  49%|████▊     | 24329/50000 [00:00<00:00, 68137.29it/s]Drawing 50000 posterior samples:  62%|██████▏   | 30927/50000 [00:00<00:00, 64903.78it/s]Drawing 50000 posterior samples:  75%|███████▌  | 37635/50000 [00:00<00:00, 63300.43it/s]Drawing 50000 posterior samples:  89%|████████▊ | 44270/50000 [00:00<00:00, 61456.92it/s]Drawing 50000 posterior samples: 50914it [00:00, 59134.93it/s]                           Drawing 50000 posterior samples: 50914it [00:00, 61955.31it/s]
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  70%|██████▉   | 34981/50000 [00:00<00:00, 325007.25it/s]Drawing 50000 posterior samples: 52524it [00:00, 324098.80it/s]                           
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  27%|██▋       | 13370/50000 [00:00<00:00, 125300.18it/s]Drawing 50000 posterior samples:  53%|█████▎    | 26728/50000 [00:00<00:00, 125173.64it/s]Drawing 50000 posterior samples:  80%|████████  | 40041/50000 [00:00<00:00, 124531.17it/s]Drawing 50000 posterior samples: 53399it [00:00, 124811.01it/s]                           Drawing 50000 posterior samples: 53399it [00:00, 124484.91it/s]
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  73%|███████▎  | 36357/50000 [00:00<00:00, 337255.22it/s]Drawing 50000 posterior samples: 54514it [00:00, 336431.04it/s]                           
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  15%|█▌        | 7735/50000 [00:00<00:00, 72028.68it/s]Drawing 50000 posterior samples:  31%|███       | 15614/50000 [00:00<00:00, 72155.84it/s]Drawing 50000 posterior samples:  47%|████▋     | 23310/50000 [00:00<00:00, 72075.76it/s]Drawing 50000 posterior samples:  62%|██████▏   | 31029/50000 [00:00<00:00, 72071.42it/s]Drawing 50000 posterior samples:  78%|███████▊  | 38758/50000 [00:00<00:00, 71840.12it/s]Drawing 50000 posterior samples:  93%|█████████▎| 46618/50000 [00:00<00:00, 72077.94it/s]Drawing 50000 posterior samples: 50441it [00:00, 72016.35it/s]                           
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:   9%|▉         | 4678/50000 [00:00<00:01, 43818.19it/s]Drawing 50000 posterior samples:  19%|█▉        | 9442/50000 [00:00<00:00, 44092.11it/s]Drawing 50000 posterior samples:  28%|██▊       | 14192/50000 [00:00<00:00, 44175.15it/s]Drawing 50000 posterior samples:  38%|███▊      | 18873/50000 [00:00<00:00, 43856.20it/s]Drawing 50000 posterior samples:  47%|████▋     | 23615/50000 [00:00<00:00, 43905.88it/s]Drawing 50000 posterior samples:  57%|█████▋    | 28341/50000 [00:00<00:00, 43864.73it/s]Drawing 50000 posterior samples:  66%|██████▌   | 33074/50000 [00:00<00:00, 43856.33it/s]Drawing 50000 posterior samples:  75%|███████▌  | 37673/50000 [00:00<00:00, 43504.97it/s]Drawing 50000 posterior samples:  85%|████████▍ | 42297/50000 [00:00<00:00, 43306.18it/s]Drawing 50000 posterior samples:  94%|█████████▍| 46952/50000 [00:01<00:00, 43412.41it/s]Drawing 50000 posterior samples: 50442it [00:01, 43638.41it/s]                           
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  42%|████▏     | 21103/50000 [00:00<00:00, 194257.37it/s]Drawing 50000 posterior samples:  84%|████████▍ | 42217/50000 [00:00<00:00, 194186.00it/s]Drawing 50000 posterior samples: 52905it [00:00, 194619.63it/s]                           
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  58%|█████▊    | 29237/50000 [00:00<00:00, 269931.64it/s]Drawing 50000 posterior samples: 51139it [00:00, 268384.36it/s]                           
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  73%|███████▎  | 36572/50000 [00:00<00:00, 362650.92it/s]Drawing 50000 posterior samples: 54841it [00:00, 361065.75it/s]                           
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  59%|█████▉    | 29387/50000 [00:00<00:00, 267941.13it/s]Drawing 50000 posterior samples: 51240it [00:00, 269292.15it/s]                           
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  49%|████▉     | 24405/50000 [00:00<00:00, 227437.22it/s]Drawing 50000 posterior samples:  98%|█████████▊| 48867/50000 [00:00<00:00, 201547.26it/s]Drawing 50000 posterior samples: 54884it [00:00, 173052.92it/s]                           
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  35%|███▌      | 17695/50000 [00:00<00:00, 170252.58it/s]Drawing 50000 posterior samples:  71%|███████   | 35332/50000 [00:00<00:00, 168334.87it/s]Drawing 50000 posterior samples: 52980it [00:00, 167068.78it/s]                           Drawing 50000 posterior samples: 52980it [00:00, 165685.12it/s]
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  28%|██▊       | 13949/50000 [00:00<00:00, 134771.85it/s]Drawing 50000 posterior samples:  56%|█████▌    | 27817/50000 [00:00<00:00, 135889.86it/s]Drawing 50000 posterior samples:  83%|████████▎ | 41660/50000 [00:00<00:00, 134436.84it/s]Drawing 50000 posterior samples: 55564it [00:00, 132977.18it/s]                           Drawing 50000 posterior samples: 55564it [00:00, 133174.12it/s]
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  29%|██▉       | 14493/50000 [00:00<00:00, 138595.64it/s]Drawing 50000 posterior samples:  58%|█████▊    | 29061/50000 [00:00<00:00, 139505.52it/s]Drawing 50000 posterior samples: 50852it [00:00, 156233.25it/s]                           Drawing 50000 posterior samples: 50852it [00:00, 164878.96it/s]
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  62%|██████▏   | 31178/50000 [00:00<00:00, 295782.13it/s]Drawing 50000 posterior samples: 54519it [00:00, 291959.70it/s]                           
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  44%|████▎     | 21804/50000 [00:00<00:00, 175955.66it/s]Drawing 50000 posterior samples:  87%|████████▋ | 43569/50000 [00:00<00:00, 186096.57it/s]Drawing 50000 posterior samples: 50848it [00:00, 201696.79it/s]                           
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  22%|██▏       | 11182/50000 [00:00<00:00, 105918.49it/s]Drawing 50000 posterior samples:  45%|████▌     | 22583/50000 [00:00<00:00, 106347.24it/s]Drawing 50000 posterior samples:  68%|██████▊   | 33797/50000 [00:00<00:00, 106089.76it/s]Drawing 50000 posterior samples:  90%|█████████ | 45075/50000 [00:00<00:00, 105735.01it/s]Drawing 50000 posterior samples: 50709it [00:00, 105775.15it/s]                           
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  57%|█████▋    | 28509/50000 [00:00<00:00, 264621.14it/s]Drawing 50000 posterior samples: 56900it [00:00, 263661.01it/s]                           Drawing 50000 posterior samples: 56900it [00:00, 262373.12it/s]
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:   8%|▊         | 4065/50000 [00:00<00:01, 36800.24it/s]Drawing 50000 posterior samples:  16%|█▌        | 8084/50000 [00:00<00:01, 36871.34it/s]Drawing 50000 posterior samples:  24%|██▍       | 12086/50000 [00:00<00:01, 37209.65it/s]Drawing 50000 posterior samples:  44%|████▍     | 22080/50000 [00:00<00:00, 44394.75it/s]Drawing 50000 posterior samples:  60%|██████    | 30209/50000 [00:00<00:00, 50974.60it/s]Drawing 50000 posterior samples:  77%|███████▋  | 38252/50000 [00:00<00:00, 56812.29it/s]Drawing 50000 posterior samples:  92%|█████████▏| 46210/50000 [00:00<00:00, 60210.44it/s]Drawing 50000 posterior samples: 50224it [00:00, 60852.28it/s]                           
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  73%|███████▎  | 36400/50000 [00:00<00:00, 326522.96it/s]Drawing 50000 posterior samples: 54669it [00:00, 324472.29it/s]                           
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  63%|██████▎   | 31727/50000 [00:00<00:00, 283616.12it/s]Drawing 50000 posterior samples: 55459it [00:00, 281637.71it/s]                           
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:   5%|▍         | 2388/50000 [00:00<00:02, 20256.27it/s]Drawing 50000 posterior samples:  10%|▉         | 4854/50000 [00:00<00:02, 20447.71it/s]Drawing 50000 posterior samples:  15%|█▍        | 7320/50000 [00:00<00:02, 20420.52it/s]Drawing 50000 posterior samples:  19%|█▉        | 9700/50000 [00:00<00:01, 20158.95it/s]Drawing 50000 posterior samples:  24%|██▍       | 12180/50000 [00:00<00:01, 20246.55it/s]Drawing 50000 posterior samples:  29%|██▉       | 14655/50000 [00:00<00:01, 20406.07it/s]Drawing 50000 posterior samples:  34%|███▍      | 17096/50000 [00:00<00:01, 20464.68it/s]Drawing 50000 posterior samples:  39%|███▉      | 19548/50000 [00:00<00:01, 20533.06it/s]Drawing 50000 posterior samples:  44%|████▍     | 21921/50000 [00:01<00:01, 20349.05it/s]Drawing 50000 posterior samples:  49%|████▊     | 24337/50000 [00:01<00:01, 20303.41it/s]Drawing 50000 posterior samples:  53%|█████▎    | 26730/50000 [00:01<00:01, 20270.26it/s]Drawing 50000 posterior samples:  58%|█████▊    | 29133/50000 [00:01<00:01, 20255.30it/s]Drawing 50000 posterior samples:  63%|██████▎   | 31536/50000 [00:01<00:00, 20281.28it/s]Drawing 50000 posterior samples:  68%|██████▊   | 34070/50000 [00:01<00:00, 19588.95it/s]Drawing 50000 posterior samples:  73%|███████▎  | 36471/50000 [00:01<00:00, 18720.84it/s]Drawing 50000 posterior samples:  78%|███████▊  | 38912/50000 [00:01<00:00, 18354.03it/s]Drawing 50000 posterior samples:  83%|████████▎ | 41302/50000 [00:02<00:00, 17957.10it/s]Drawing 50000 posterior samples:  87%|████████▋ | 43659/50000 [00:02<00:00, 17552.06it/s]Drawing 50000 posterior samples:  91%|█████████ | 45452/50000 [00:02<00:00, 17333.20it/s]Drawing 50000 posterior samples:  95%|█████████▍| 47286/50000 [00:02<00:00, 17306.73it/s]Drawing 50000 posterior samples:  98%|█████████▊| 49056/50000 [00:02<00:00, 16587.13it/s]Drawing 50000 posterior samples: 50300it [00:02, 18756.48it/s]                           
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:   9%|▉         | 4633/50000 [00:00<00:01, 39253.74it/s]Drawing 50000 posterior samples:  19%|█▊        | 9292/50000 [00:00<00:01, 39215.62it/s]Drawing 50000 posterior samples:  28%|██▊       | 13840/50000 [00:00<00:00, 38901.90it/s]Drawing 50000 posterior samples:  37%|███▋      | 18342/50000 [00:00<00:00, 38547.82it/s]Drawing 50000 posterior samples:  46%|████▌     | 22890/50000 [00:00<00:00, 38453.29it/s]Drawing 50000 posterior samples:  55%|█████▌    | 27583/50000 [00:00<00:00, 38719.71it/s]Drawing 50000 posterior samples:  64%|██████▍   | 32217/50000 [00:00<00:00, 38100.00it/s]Drawing 50000 posterior samples:  73%|███████▎  | 36746/50000 [00:00<00:00, 34932.87it/s]Drawing 50000 posterior samples:  81%|████████  | 40274/50000 [00:01<00:00, 33433.05it/s]Drawing 50000 posterior samples:  88%|████████▊ | 43770/50000 [00:01<00:00, 32301.10it/s]Drawing 50000 posterior samples:  95%|█████████▍| 47310/50000 [00:01<00:00, 31526.54it/s]Drawing 50000 posterior samples: 50865it [00:01, 28933.00it/s]                           Drawing 50000 posterior samples: 50865it [00:01, 34061.49it/s]
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  25%|██▌       | 12604/50000 [00:00<00:00, 118105.86it/s]Drawing 50000 posterior samples:  51%|█████     | 25276/50000 [00:00<00:00, 118488.70it/s]Drawing 50000 posterior samples:  76%|███████▌  | 37941/50000 [00:00<00:00, 118422.70it/s]Drawing 50000 posterior samples: 50646it [00:00, 118432.22it/s]                           Drawing 50000 posterior samples: 50646it [00:00, 118396.62it/s]
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  73%|███████▎  | 36631/50000 [00:00<00:00, 338574.87it/s]Drawing 50000 posterior samples: 54946it [00:00, 338658.60it/s]                           
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  60%|██████    | 30233/50000 [00:00<00:00, 277846.56it/s]Drawing 50000 posterior samples: 52952it [00:00, 277333.59it/s]                           
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  27%|██▋       | 13321/50000 [00:00<00:00, 122938.71it/s]Drawing 50000 posterior samples:  53%|█████▎    | 26488/50000 [00:00<00:00, 123014.12it/s]Drawing 50000 posterior samples:  80%|███████▉  | 39827/50000 [00:00<00:00, 123091.51it/s]Drawing 50000 posterior samples: 53253it [00:00, 123879.79it/s]                           Drawing 50000 posterior samples: 53253it [00:00, 123622.29it/s]
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  73%|███████▎  | 36611/50000 [00:00<00:00, 335833.09it/s]Drawing 50000 posterior samples: 54864it [00:00, 335270.55it/s]                           
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  73%|███████▎  | 36558/50000 [00:00<00:00, 337958.23it/s]Drawing 50000 posterior samples: 54929it [00:00, 337461.37it/s]                           
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  61%|██████    | 30607/50000 [00:00<00:00, 284081.62it/s]Drawing 50000 posterior samples: 53606it [00:00, 283135.83it/s]                           
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  13%|█▎        | 6569/50000 [00:00<00:00, 59012.20it/s]Drawing 50000 posterior samples:  26%|██▋       | 13225/50000 [00:00<00:00, 59297.40it/s]Drawing 50000 posterior samples:  40%|███▉      | 19760/50000 [00:00<00:00, 59441.08it/s]Drawing 50000 posterior samples:  53%|█████▎    | 26257/50000 [00:00<00:00, 59347.29it/s]Drawing 50000 posterior samples:  66%|██████▌   | 32830/50000 [00:00<00:00, 59382.55it/s]Drawing 50000 posterior samples:  79%|███████▉  | 39446/50000 [00:00<00:00, 59607.25it/s]Drawing 50000 posterior samples:  92%|█████████▏| 46016/50000 [00:00<00:00, 59789.15it/s]Drawing 50000 posterior samples: 50878it [00:00, 59639.28it/s]                           
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  69%|██████▉   | 34711/50000 [00:00<00:00, 314153.53it/s]Drawing 50000 posterior samples: 52026it [00:00, 312232.23it/s]                           
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  33%|███▎      | 16464/50000 [00:00<00:00, 132465.43it/s]Drawing 50000 posterior samples:  59%|█████▉    | 29723/50000 [00:00<00:00, 130858.82it/s]Drawing 50000 posterior samples:  86%|████████▌ | 43027/50000 [00:00<00:00, 130268.30it/s]Drawing 50000 posterior samples: 52918it [00:00, 125254.75it/s]                           
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  55%|█████▍    | 27469/50000 [00:00<00:00, 223763.01it/s]Drawing 50000 posterior samples: 54917it [00:00, 256065.21it/s]                           
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  12%|█▏        | 6056/50000 [00:00<00:00, 60132.39it/s]Drawing 50000 posterior samples:  24%|██▍       | 12039/50000 [00:00<00:00, 56599.45it/s]Drawing 50000 posterior samples:  36%|███▌      | 18026/50000 [00:00<00:00, 57065.69it/s]Drawing 50000 posterior samples:  48%|████▊     | 23991/50000 [00:00<00:00, 57451.89it/s]Drawing 50000 posterior samples:  60%|█████▉    | 29999/50000 [00:00<00:00, 57648.17it/s]Drawing 50000 posterior samples:  72%|███████▏  | 36089/50000 [00:00<00:00, 58261.84it/s]Drawing 50000 posterior samples:  84%|████████▍ | 42069/50000 [00:00<00:00, 58191.43it/s]Drawing 50000 posterior samples:  96%|█████████▌| 48085/50000 [00:00<00:00, 58444.04it/s]Drawing 50000 posterior samples: 50123it [00:00, 57531.42it/s]                           
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  10%|█         | 5005/50000 [00:00<00:01, 42523.41it/s]Drawing 50000 posterior samples:  20%|█▉        | 9949/50000 [00:00<00:00, 42328.20it/s]Drawing 50000 posterior samples:  30%|██▉       | 14897/50000 [00:00<00:00, 42175.96it/s]Drawing 50000 posterior samples:  40%|████      | 20020/50000 [00:00<00:00, 42449.66it/s]Drawing 50000 posterior samples:  50%|████▉     | 24965/50000 [00:00<00:00, 42265.75it/s]Drawing 50000 posterior samples:  60%|█████▉    | 29897/50000 [00:00<00:00, 42051.69it/s]Drawing 50000 posterior samples:  70%|██████▉   | 34904/50000 [00:00<00:00, 42259.76it/s]Drawing 50000 posterior samples:  80%|███████▉  | 39757/50000 [00:00<00:00, 41973.08it/s]Drawing 50000 posterior samples:  90%|████████▉ | 44789/50000 [00:01<00:00, 42294.22it/s]Drawing 50000 posterior samples:  99%|█████████▉| 49634/50000 [00:01<00:00, 42009.91it/s]Drawing 50000 posterior samples: 50879it [00:01, 42098.37it/s]                           
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  42%|████▏     | 21065/50000 [00:00<00:00, 178358.70it/s]Drawing 50000 posterior samples:  84%|████████▍ | 42089/50000 [00:00<00:00, 178312.48it/s]Drawing 50000 posterior samples: 52413it [00:00, 177695.41it/s]                           
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  69%|██████▊   | 34317/50000 [00:00<00:00, 288543.01it/s]Drawing 50000 posterior samples: 51648it [00:00, 289118.34it/s]                           
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  72%|███████▏  | 36131/50000 [00:00<00:00, 303378.22it/s]Drawing 50000 posterior samples: 54171it [00:00, 301308.28it/s]                           
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  73%|███████▎  | 36635/50000 [00:00<00:00, 307782.02it/s]Drawing 50000 posterior samples: 54964it [00:00, 307526.53it/s]                           
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  41%|████      | 20495/50000 [00:00<00:00, 174680.99it/s]Drawing 50000 posterior samples:  81%|████████▏ | 40712/50000 [00:00<00:00, 173309.49it/s]Drawing 50000 posterior samples: 50812it [00:00, 171701.58it/s]                           
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  53%|█████▎    | 26636/50000 [00:00<00:00, 259201.51it/s]Drawing 50000 posterior samples: 53281it [00:00, 259552.17it/s]                           Drawing 50000 posterior samples: 53281it [00:00, 258977.92it/s]
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  51%|█████     | 25266/50000 [00:00<00:00, 246070.09it/s]Drawing 50000 posterior samples: 50507it [00:00, 246738.13it/s]                           Drawing 50000 posterior samples: 50507it [00:00, 246492.95it/s]
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  55%|█████▍    | 27460/50000 [00:00<00:00, 257710.78it/s]Drawing 50000 posterior samples: 55017it [00:00, 261656.79it/s]                           Drawing 50000 posterior samples: 55017it [00:00, 263608.37it/s]
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  46%|████▋     | 23151/50000 [00:00<00:00, 230153.76it/s]Drawing 50000 posterior samples:  93%|█████████▎| 46331/50000 [00:00<00:00, 229247.82it/s]Drawing 50000 posterior samples: 53925it [00:00, 227332.46it/s]                           
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  55%|█████▍    | 27386/50000 [00:00<00:00, 269924.31it/s]Drawing 50000 posterior samples: 54766it [00:00, 269293.08it/s]                           Drawing 50000 posterior samples: 54766it [00:00, 268146.77it/s]
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  21%|██        | 10258/50000 [00:00<00:00, 99644.20it/s]Drawing 50000 posterior samples:  41%|████      | 20312/50000 [00:00<00:00, 99477.57it/s]Drawing 50000 posterior samples:  61%|██████    | 30414/50000 [00:00<00:00, 99442.54it/s]Drawing 50000 posterior samples:  81%|████████  | 40621/50000 [00:00<00:00, 100026.83it/s]Drawing 50000 posterior samples: 50891it [00:00, 100724.41it/s]                           Drawing 50000 posterior samples: 50891it [00:00, 100242.20it/s]
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  48%|████▊     | 24105/50000 [00:00<00:00, 235696.03it/s]Drawing 50000 posterior samples:  97%|█████████▋| 48346/50000 [00:00<00:00, 237102.26it/s]Drawing 50000 posterior samples: 56459it [00:00, 237605.75it/s]                           
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  12%|█▏        | 6196/50000 [00:00<00:00, 61471.28it/s]Drawing 50000 posterior samples:  25%|██▍       | 12324/50000 [00:00<00:00, 60993.02it/s]Drawing 50000 posterior samples:  37%|███▋      | 18372/50000 [00:00<00:00, 60564.31it/s]Drawing 50000 posterior samples:  53%|█████▎    | 26492/50000 [00:00<00:00, 60978.50it/s]Drawing 50000 posterior samples:  69%|██████▉   | 34496/50000 [00:00<00:00, 61006.72it/s]Drawing 50000 posterior samples:  85%|████████▌ | 42695/50000 [00:00<00:00, 63325.79it/s]Drawing 50000 posterior samples: 50819it [00:00, 65000.03it/s]                           Drawing 50000 posterior samples: 50819it [00:00, 63325.74it/s]
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  73%|███████▎  | 36425/50000 [00:00<00:00, 307315.35it/s]Drawing 50000 posterior samples: 54692it [00:00, 307119.02it/s]                           
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  63%|██████▎   | 31386/50000 [00:00<00:00, 265431.66it/s]Drawing 50000 posterior samples: 54804it [00:00, 263512.55it/s]                           
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:   6%|▌         | 2814/50000 [00:00<00:01, 23633.29it/s]Drawing 50000 posterior samples:  11%|█         | 5620/50000 [00:00<00:01, 23634.10it/s]Drawing 50000 posterior samples:  17%|█▋        | 8471/50000 [00:00<00:01, 23752.75it/s]Drawing 50000 posterior samples:  22%|██▏       | 11160/50000 [00:00<00:01, 23521.97it/s]Drawing 50000 posterior samples:  28%|██▊       | 13987/50000 [00:00<00:01, 23609.84it/s]Drawing 50000 posterior samples:  34%|███▎      | 16852/50000 [00:00<00:01, 23877.06it/s]Drawing 50000 posterior samples:  39%|███▉      | 19605/50000 [00:00<00:01, 23814.41it/s]Drawing 50000 posterior samples:  45%|████▍     | 22329/50000 [00:00<00:01, 23659.30it/s]Drawing 50000 posterior samples:  50%|█████     | 25160/50000 [00:01<00:01, 23670.09it/s]Drawing 50000 posterior samples:  56%|█████▌    | 27914/50000 [00:01<00:00, 23615.48it/s]Drawing 50000 posterior samples:  61%|██████▏   | 30723/50000 [00:01<00:00, 23659.29it/s]Drawing 50000 posterior samples:  67%|██████▋   | 33545/50000 [00:01<00:00, 23765.41it/s]Drawing 50000 posterior samples:  73%|███████▎  | 36386/50000 [00:01<00:00, 23849.46it/s]Drawing 50000 posterior samples:  78%|███████▊  | 39147/50000 [00:01<00:00, 23816.21it/s]Drawing 50000 posterior samples:  84%|████████▍ | 41900/50000 [00:01<00:00, 23736.79it/s]Drawing 50000 posterior samples:  89%|████████▉ | 44693/50000 [00:01<00:00, 23717.05it/s]Drawing 50000 posterior samples:  95%|█████████▍| 47466/50000 [00:02<00:00, 23696.48it/s]Drawing 50000 posterior samples: 50238it [00:02, 23624.10it/s]                           Drawing 50000 posterior samples: 50238it [00:02, 23699.34it/s]
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:   7%|▋         | 3656/50000 [00:00<00:01, 23485.52it/s]Drawing 50000 posterior samples:  12%|█▏        | 6105/50000 [00:00<00:01, 22428.10it/s]Drawing 50000 posterior samples:  17%|█▋        | 8537/50000 [00:00<00:01, 21810.38it/s]Drawing 50000 posterior samples:  22%|██▏       | 10909/50000 [00:00<00:01, 20918.45it/s]Drawing 50000 posterior samples:  27%|██▋       | 13422/50000 [00:00<00:01, 20603.59it/s]Drawing 50000 posterior samples:  32%|███▏      | 15819/50000 [00:00<00:01, 20270.50it/s]Drawing 50000 posterior samples:  37%|███▋      | 18252/50000 [00:00<00:01, 20066.28it/s]Drawing 50000 posterior samples:  41%|████▏     | 20707/50000 [00:01<00:01, 19786.41it/s]Drawing 50000 posterior samples:  46%|████▌     | 23055/50000 [00:01<00:01, 19307.65it/s]Drawing 50000 posterior samples:  51%|█████     | 25489/50000 [00:01<00:01, 19291.67it/s]Drawing 50000 posterior samples:  56%|█████▌    | 27960/50000 [00:01<00:01, 19508.31it/s]Drawing 50000 posterior samples:  61%|██████    | 30388/50000 [00:01<00:01, 19401.85it/s]Drawing 50000 posterior samples:  66%|██████▌   | 32819/50000 [00:01<00:00, 19507.60it/s]Drawing 50000 posterior samples:  71%|███████   | 35365/50000 [00:01<00:00, 19772.28it/s]Drawing 50000 posterior samples:  76%|███████▌  | 37823/50000 [00:01<00:00, 19794.28it/s]Drawing 50000 posterior samples:  81%|████████  | 40328/50000 [00:02<00:00, 20078.76it/s]Drawing 50000 posterior samples:  86%|████████▌ | 42800/50000 [00:02<00:00, 19808.73it/s]Drawing 50000 posterior samples:  90%|█████████ | 45235/50000 [00:02<00:00, 19828.96it/s]Drawing 50000 posterior samples:  95%|█████████▌| 47651/50000 [00:02<00:00, 19605.58it/s]Drawing 50000 posterior samples: 50067it [00:02, 19708.76it/s]                           Drawing 50000 posterior samples: 50067it [00:02, 19890.41it/s]
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  42%|████▏     | 21175/50000 [00:00<00:00, 196831.67it/s]Drawing 50000 posterior samples:  85%|████████▌ | 42537/50000 [00:00<00:00, 197280.85it/s]Drawing 50000 posterior samples: 53190it [00:00, 196860.60it/s]                           
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  73%|███████▎  | 36594/50000 [00:00<00:00, 339376.38it/s]Drawing 50000 posterior samples: 54984it [00:00, 339324.13it/s]                           
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  73%|███████▎  | 36662/50000 [00:00<00:00, 335886.60it/s]Drawing 50000 posterior samples: 54908it [00:00, 335145.38it/s]                           
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  73%|███████▎  | 36718/50000 [00:00<00:00, 334943.00it/s]Drawing 50000 posterior samples: 55150it [00:00, 334957.86it/s]                           
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  80%|███████▉  | 39810/50000 [00:00<00:00, 371735.96it/s]Drawing 50000 posterior samples: 59704it [00:00, 370634.13it/s]                           
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  71%|███████   | 35295/50000 [00:00<00:00, 325143.06it/s]Drawing 50000 posterior samples: 52988it [00:00, 323966.91it/s]                           
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  53%|█████▎    | 26624/50000 [00:00<00:00, 256216.52it/s]Drawing 50000 posterior samples: 53209it [00:00, 255203.66it/s]                           Drawing 50000 posterior samples: 53209it [00:00, 253916.09it/s]
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  70%|███████   | 35007/50000 [00:00<00:00, 321622.50it/s]Drawing 50000 posterior samples: 52607it [00:00, 323635.38it/s]                           
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  71%|███████▏  | 35681/50000 [00:00<00:00, 326538.77it/s]Drawing 50000 posterior samples: 53516it [00:00, 325495.06it/s]                           
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  73%|███████▎  | 36645/50000 [00:00<00:00, 337760.48it/s]Drawing 50000 posterior samples: 54989it [00:00, 338849.94it/s]                           
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  80%|███████▉  | 39976/50000 [00:00<00:00, 365217.81it/s]Drawing 50000 posterior samples: 59960it [00:00, 362787.51it/s]                           
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  76%|███████▌  | 38049/50000 [00:00<00:00, 350335.59it/s]Drawing 50000 posterior samples: 57112it [00:00, 351247.89it/s]                           
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  73%|███████▎  | 36422/50000 [00:00<00:00, 333783.30it/s]Drawing 50000 posterior samples: 54620it [00:00, 334200.66it/s]                           
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  77%|███████▋  | 38726/50000 [00:00<00:00, 355072.48it/s]Drawing 50000 posterior samples: 58032it [00:00, 354232.60it/s]                           
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  80%|████████  | 40000/50000 [00:00<00:00, 369270.54it/s]Drawing 50000 posterior samples: 100%|██████████| 50000/50000 [00:00<00:00, 366389.00it/s]
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  80%|███████▉  | 39880/50000 [00:00<00:00, 364233.66it/s]Drawing 50000 posterior samples: 59828it [00:00, 364908.78it/s]                           
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  66%|██████▌   | 33027/50000 [00:00<00:00, 300295.86it/s]Drawing 50000 posterior samples: 57925it [00:00, 299813.49it/s]                           
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  78%|███████▊  | 39156/50000 [00:00<00:00, 361979.27it/s]Drawing 50000 posterior samples: 58721it [00:00, 359788.19it/s]                           
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  80%|███████▉  | 39818/50000 [00:00<00:00, 366787.09it/s]Drawing 50000 posterior samples: 59730it [00:00, 365995.01it/s]                           
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  79%|███████▉  | 39538/50000 [00:00<00:00, 365736.40it/s]Drawing 50000 posterior samples: 59295it [00:00, 363156.59it/s]                           
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  73%|███████▎  | 36447/50000 [00:00<00:00, 334344.80it/s]Drawing 50000 posterior samples: 54674it [00:00, 332899.83it/s]                           
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  73%|███████▎  | 36290/50000 [00:00<00:00, 334105.15it/s]Drawing 50000 posterior samples: 54347it [00:00, 331281.49it/s]                           
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  80%|████████  | 40000/50000 [00:00<00:00, 365960.78it/s]Drawing 50000 posterior samples: 100%|██████████| 50000/50000 [00:00<00:00, 363118.68it/s]
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  80%|███████▉  | 39759/50000 [00:00<00:00, 359506.35it/s]Drawing 50000 posterior samples: 59657it [00:00, 361225.17it/s]                           
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  80%|████████  | 40000/50000 [00:00<00:00, 365200.82it/s]Drawing 50000 posterior samples: 100%|██████████| 50000/50000 [00:00<00:00, 363209.24it/s]
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  76%|███████▋  | 38156/50000 [00:00<00:00, 348121.06it/s]Drawing 50000 posterior samples: 57236it [00:00, 346825.79it/s]                           
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  80%|███████▉  | 39996/50000 [00:00<00:00, 366668.01it/s]Drawing 50000 posterior samples: 59994it [00:00, 364648.09it/s]                           
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  72%|███████▏  | 36020/50000 [00:00<00:00, 328445.81it/s]Drawing 50000 posterior samples: 54008it [00:00, 328792.65it/s]                           
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  64%|██████▍   | 32213/50000 [00:00<00:00, 296826.82it/s]Drawing 50000 posterior samples: 56291it [00:00, 294626.83it/s]                           
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  73%|███████▎  | 36291/50000 [00:00<00:00, 332614.75it/s]Drawing 50000 posterior samples: 54497it [00:00, 333304.15it/s]                           
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  80%|████████  | 40000/50000 [00:00<00:00, 364483.59it/s]Drawing 50000 posterior samples: 100%|██████████| 50000/50000 [00:00<00:00, 362615.76it/s]
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  74%|███████▍  | 37118/50000 [00:00<00:00, 340432.43it/s]Drawing 50000 posterior samples: 55754it [00:00, 340453.34it/s]                           
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  63%|██████▎   | 31436/50000 [00:00<00:00, 288145.98it/s]Drawing 50000 posterior samples: 55014it [00:00, 286650.62it/s]                           
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  27%|██▋       | 13705/50000 [00:00<00:00, 125648.23it/s]Drawing 50000 posterior samples:  55%|█████▍    | 27285/50000 [00:00<00:00, 125394.50it/s]Drawing 50000 posterior samples:  82%|████████▏ | 40938/50000 [00:00<00:00, 125118.12it/s]Drawing 50000 posterior samples: 51166it [00:00, 124575.96it/s]                           
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  72%|███████▏  | 35929/50000 [00:00<00:00, 324678.27it/s]Drawing 50000 posterior samples: 53849it [00:00, 324556.80it/s]                           
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  73%|███████▎  | 36672/50000 [00:00<00:00, 333024.12it/s]Drawing 50000 posterior samples: 54992it [00:00, 333567.86it/s]                           
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  69%|██████▉   | 34607/50000 [00:00<00:00, 314883.07it/s]Drawing 50000 posterior samples: 51862it [00:00, 312544.89it/s]                           
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  49%|████▉     | 24733/50000 [00:00<00:00, 223567.37it/s]Drawing 50000 posterior samples:  99%|█████████▉| 49626/50000 [00:00<00:00, 224201.18it/s]Drawing 50000 posterior samples: 55899it [00:00, 224813.79it/s]                           
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  70%|███████   | 35021/50000 [00:00<00:00, 314287.87it/s]Drawing 50000 posterior samples: 52657it [00:00, 316031.81it/s]                           
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  27%|██▋       | 13697/50000 [00:00<00:00, 124965.76it/s]Drawing 50000 posterior samples:  55%|█████▍    | 27270/50000 [00:00<00:00, 124436.89it/s]Drawing 50000 posterior samples:  82%|████████▏ | 40787/50000 [00:00<00:00, 124003.21it/s]Drawing 50000 posterior samples: 50985it [00:00, 123444.77it/s]                           
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  73%|███████▎  | 36654/50000 [00:00<00:00, 327818.49it/s]Drawing 50000 posterior samples: 54989it [00:00, 327697.32it/s]                           
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  16%|█▌        | 8027/50000 [00:00<00:00, 72332.99it/s]Drawing 50000 posterior samples:  33%|███▎      | 16284/50000 [00:00<00:00, 72887.87it/s]Drawing 50000 posterior samples:  49%|████▊     | 24345/50000 [00:00<00:00, 73138.00it/s]Drawing 50000 posterior samples:  65%|██████▌   | 32508/50000 [00:00<00:00, 73138.99it/s]Drawing 50000 posterior samples:  81%|████████▏ | 40626/50000 [00:00<00:00, 73055.72it/s]Drawing 50000 posterior samples:  97%|█████████▋| 48647/50000 [00:00<00:00, 73106.72it/s]Drawing 50000 posterior samples: 50641it [00:00, 73176.91it/s]                           
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  10%|▉         | 4875/50000 [00:00<00:01, 44708.35it/s]Drawing 50000 posterior samples:  20%|█▉        | 9907/50000 [00:00<00:00, 45103.67it/s]Drawing 50000 posterior samples:  30%|██▉       | 14969/50000 [00:00<00:00, 45387.00it/s]Drawing 50000 posterior samples:  40%|███▉      | 19938/50000 [00:00<00:00, 45188.88it/s]Drawing 50000 posterior samples:  50%|████▉     | 24823/50000 [00:00<00:00, 44961.95it/s]Drawing 50000 posterior samples:  60%|█████▉    | 29800/50000 [00:00<00:00, 44880.94it/s]Drawing 50000 posterior samples:  70%|██████▉   | 34791/50000 [00:00<00:00, 44885.53it/s]Drawing 50000 posterior samples:  79%|███████▉  | 39701/50000 [00:00<00:00, 44741.55it/s]Drawing 50000 posterior samples:  89%|████████▉ | 44668/50000 [00:00<00:00, 44907.17it/s]Drawing 50000 posterior samples:  99%|█████████▉| 49635/50000 [00:01<00:00, 45048.92it/s]Drawing 50000 posterior samples: 50901it [00:01, 45069.17it/s]                           
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  43%|████▎     | 21553/50000 [00:00<00:00, 190733.05it/s]Drawing 50000 posterior samples:  87%|████████▋ | 43346/50000 [00:00<00:00, 191153.50it/s]Drawing 50000 posterior samples: 54177it [00:00, 191472.04it/s]                           
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  72%|███████▏  | 36094/50000 [00:00<00:00, 341811.21it/s]Drawing 50000 posterior samples: 54209it [00:00, 338769.72it/s]                           
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  73%|███████▎  | 36672/50000 [00:00<00:00, 329477.31it/s]Drawing 50000 posterior samples: 55040it [00:00, 329417.07it/s]                           
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  72%|███████▏  | 35778/50000 [00:00<00:00, 312707.85it/s]Drawing 50000 posterior samples: 53585it [00:00, 313079.27it/s]                           
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  58%|█████▊    | 28836/50000 [00:00<00:00, 257613.47it/s]Drawing 50000 posterior samples: 50468it [00:00, 256444.03it/s]                           
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  73%|███████▎  | 36465/50000 [00:00<00:00, 326350.13it/s]Drawing 50000 posterior samples: 54715it [00:00, 324258.94it/s]                           
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  74%|███████▎  | 36797/50000 [00:00<00:00, 330983.22it/s]Drawing 50000 posterior samples: 55172it [00:00, 328706.15it/s]                           
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  72%|███████▏  | 35855/50000 [00:00<00:00, 340508.11it/s]Drawing 50000 posterior samples: 53741it [00:00, 337435.78it/s]                           
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  63%|██████▎   | 31719/50000 [00:00<00:00, 258217.10it/s]Drawing 50000 posterior samples: 55677it [00:00, 248843.13it/s]                           Drawing 50000 posterior samples: 55677it [00:00, 244342.83it/s]
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  54%|█████▎    | 26859/50000 [00:00<00:00, 259220.30it/s]Drawing 50000 posterior samples: 53933it [00:00, 259947.65it/s]                           Drawing 50000 posterior samples: 53933it [00:00, 259692.81it/s]
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  44%|████▎     | 21811/50000 [00:00<00:00, 212645.89it/s]Drawing 50000 posterior samples:  87%|████████▋ | 43730/50000 [00:00<00:00, 212197.57it/s]Drawing 50000 posterior samples: 51022it [00:00, 211087.30it/s]                           
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  73%|███████▎  | 36520/50000 [00:00<00:00, 282107.11it/s]Drawing 50000 posterior samples: 54716it [00:00, 281270.73it/s]                           
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  17%|█▋        | 8482/50000 [00:00<00:00, 64901.63it/s]Drawing 50000 posterior samples:  34%|███▎      | 16859/50000 [00:00<00:00, 64907.03it/s]Drawing 50000 posterior samples:  51%|█████     | 25259/50000 [00:00<00:00, 65073.50it/s]Drawing 50000 posterior samples:  67%|██████▋   | 33421/50000 [00:00<00:00, 64253.43it/s]Drawing 50000 posterior samples:  84%|████████▎ | 41827/50000 [00:00<00:00, 64340.34it/s]Drawing 50000 posterior samples: 50247it [00:00, 64449.37it/s]                           Drawing 50000 posterior samples: 50247it [00:00, 64438.28it/s]
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  55%|█████▍    | 27448/50000 [00:00<00:00, 267521.00it/s]Drawing 50000 posterior samples: 55002it [00:00, 274020.49it/s]                           
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  65%|██████▍   | 32281/50000 [00:00<00:00, 249018.48it/s]Drawing 50000 posterior samples: 56474it [00:00, 250249.20it/s]                           
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:   5%|▌         | 2554/50000 [00:00<00:02, 20015.46it/s]Drawing 50000 posterior samples:  10%|█         | 5125/50000 [00:00<00:02, 20020.48it/s]Drawing 50000 posterior samples:  15%|█▌        | 7626/50000 [00:00<00:02, 19850.07it/s]Drawing 50000 posterior samples:  20%|██        | 10168/50000 [00:00<00:02, 19812.80it/s]Drawing 50000 posterior samples:  26%|██▌       | 12859/50000 [00:00<00:01, 20127.66it/s]Drawing 50000 posterior samples:  31%|███       | 15424/50000 [00:00<00:01, 20122.98it/s]Drawing 50000 posterior samples:  36%|███▌      | 17994/50000 [00:00<00:01, 20097.07it/s]Drawing 50000 posterior samples:  41%|████      | 20509/50000 [00:01<00:01, 19984.11it/s]Drawing 50000 posterior samples:  46%|████▌     | 23060/50000 [00:01<00:01, 19988.50it/s]Drawing 50000 posterior samples:  51%|█████▏    | 25625/50000 [00:01<00:01, 19974.75it/s]Drawing 50000 posterior samples:  56%|█████▋    | 28145/50000 [00:01<00:01, 19917.58it/s]Drawing 50000 posterior samples:  61%|██████▏   | 30687/50000 [00:01<00:00, 19893.14it/s]Drawing 50000 posterior samples:  67%|██████▋   | 33299/50000 [00:01<00:00, 20049.67it/s]Drawing 50000 posterior samples:  72%|███████▏  | 35896/50000 [00:01<00:00, 20102.25it/s]Drawing 50000 posterior samples:  77%|███████▋  | 38464/50000 [00:01<00:00, 20125.06it/s]Drawing 50000 posterior samples:  82%|████████▏ | 41015/50000 [00:02<00:00, 20029.54it/s]Drawing 50000 posterior samples:  87%|████████▋ | 43573/50000 [00:02<00:00, 19925.01it/s]Drawing 50000 posterior samples:  92%|█████████▏| 46193/50000 [00:02<00:00, 20126.86it/s]Drawing 50000 posterior samples:  98%|█████████▊| 48812/50000 [00:02<00:00, 20221.17it/s]Drawing 50000 posterior samples: 50070it [00:02, 20032.07it/s]                           
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  10%|▉         | 4825/50000 [00:00<00:01, 37501.75it/s]Drawing 50000 posterior samples:  19%|█▉        | 9745/50000 [00:00<00:01, 37725.42it/s]Drawing 50000 posterior samples:  29%|██▉       | 14563/50000 [00:00<00:00, 37663.49it/s]Drawing 50000 posterior samples:  39%|███▊      | 19366/50000 [00:00<00:00, 37580.31it/s]Drawing 50000 posterior samples:  49%|████▊     | 24261/50000 [00:00<00:00, 37789.01it/s]Drawing 50000 posterior samples:  56%|█████▌    | 27884/50000 [00:00<00:00, 35887.55it/s]Drawing 50000 posterior samples:  65%|██████▌   | 32744/50000 [00:00<00:00, 36443.03it/s]Drawing 50000 posterior samples:  75%|███████▌  | 37512/50000 [00:01<00:00, 36708.98it/s]Drawing 50000 posterior samples:  85%|████████▍ | 42343/50000 [00:01<00:00, 36931.55it/s]Drawing 50000 posterior samples:  94%|█████████▍| 47229/50000 [00:01<00:00, 37254.89it/s]Drawing 50000 posterior samples: 50911it [00:01, 37223.97it/s]                           
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  66%|██████▌   | 32845/50000 [00:00<00:00, 254886.20it/s]Drawing 50000 posterior samples: 57516it [00:00, 254783.63it/s]                           
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  74%|███████▎  | 36772/50000 [00:00<00:00, 285581.66it/s]Drawing 50000 posterior samples: 55070it [00:00, 283774.25it/s]                           
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  62%|██████▏   | 30821/50000 [00:00<00:00, 290804.20it/s]Drawing 50000 posterior samples: 53927it [00:00, 287888.51it/s]                           
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  26%|██▋       | 13182/50000 [00:00<00:00, 126986.27it/s]Drawing 50000 posterior samples:  52%|█████▏    | 26244/50000 [00:00<00:00, 127116.51it/s]Drawing 50000 posterior samples:  79%|███████▉  | 39547/50000 [00:00<00:00, 128397.33it/s]Drawing 50000 posterior samples: 52550it [00:00, 128488.60it/s]                           Drawing 50000 posterior samples: 52550it [00:00, 128459.27it/s]
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  73%|███████▎  | 36419/50000 [00:00<00:00, 355909.30it/s]Drawing 50000 posterior samples: 54682it [00:00, 354816.35it/s]                           
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  73%|███████▎  | 36713/50000 [00:00<00:00, 358574.42it/s]Drawing 50000 posterior samples: 55141it [00:00, 358310.74it/s]                           
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  63%|██████▎   | 31380/50000 [00:00<00:00, 306945.38it/s]Drawing 50000 posterior samples: 54806it [00:00, 305755.40it/s]                           
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  16%|█▌        | 7824/50000 [00:00<00:00, 76310.61it/s]Drawing 50000 posterior samples:  31%|███▏      | 15720/50000 [00:00<00:00, 76823.30it/s]Drawing 50000 posterior samples:  47%|████▋     | 23466/50000 [00:00<00:00, 76583.70it/s]Drawing 50000 posterior samples:  62%|██████▏   | 31145/50000 [00:00<00:00, 76448.09it/s]Drawing 50000 posterior samples:  78%|███████▊  | 38914/50000 [00:00<00:00, 76626.61it/s]Drawing 50000 posterior samples:  93%|█████████▎| 46575/50000 [00:00<00:00, 76435.52it/s]Drawing 50000 posterior samples: 50409it [00:00, 76420.13it/s]                           
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  70%|██████▉   | 34992/50000 [00:00<00:00, 329335.58it/s]Drawing 50000 posterior samples: 52547it [00:00, 326925.44it/s]                           
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  26%|██▌       | 12856/50000 [00:00<00:00, 119660.14it/s]Drawing 50000 posterior samples:  52%|█████▏    | 25765/50000 [00:00<00:00, 120199.09it/s]Drawing 50000 posterior samples:  77%|███████▋  | 38610/50000 [00:00<00:00, 120488.33it/s]Drawing 50000 posterior samples: 51579it [00:00, 118743.42it/s]                           Drawing 50000 posterior samples: 51579it [00:00, 119091.28it/s]
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  73%|███████▎  | 36359/50000 [00:00<00:00, 303558.28it/s]Drawing 50000 posterior samples: 54532it [00:00, 306991.60it/s]                           
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  19%|█▊        | 9292/50000 [00:00<00:00, 76596.40it/s]Drawing 50000 posterior samples:  37%|███▋      | 18615/50000 [00:00<00:00, 77950.43it/s]Drawing 50000 posterior samples:  56%|█████▌    | 27969/50000 [00:00<00:00, 78956.03it/s]Drawing 50000 posterior samples:  75%|███████▍  | 37331/50000 [00:00<00:00, 79768.38it/s]Drawing 50000 posterior samples:  93%|█████████▎| 46726/50000 [00:00<00:00, 79576.76it/s]Drawing 50000 posterior samples: 51386it [00:00, 79178.51it/s]                           
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  10%|█         | 5188/50000 [00:00<00:01, 41258.79it/s]Drawing 50000 posterior samples:  21%|██        | 10360/50000 [00:00<00:00, 41413.60it/s]Drawing 50000 posterior samples:  31%|███▏      | 15684/50000 [00:00<00:00, 42572.14it/s]Drawing 50000 posterior samples:  42%|████▏     | 20931/50000 [00:00<00:00, 43051.74it/s]Drawing 50000 posterior samples:  52%|█████▏    | 26095/50000 [00:00<00:00, 43399.25it/s]Drawing 50000 posterior samples:  60%|██████    | 30091/50000 [00:00<00:00, 41522.32it/s]Drawing 50000 posterior samples:  68%|██████▊   | 34020/50000 [00:00<00:00, 40672.64it/s]Drawing 50000 posterior samples:  76%|███████▌  | 37958/50000 [00:00<00:00, 39297.17it/s]Drawing 50000 posterior samples:  84%|████████▍ | 41882/50000 [00:01<00:00, 38902.13it/s]Drawing 50000 posterior samples:  92%|█████████▏| 45799/50000 [00:01<00:00, 38551.06it/s]Drawing 50000 posterior samples:  99%|█████████▉| 49644/50000 [00:01<00:00, 37525.56it/s]Drawing 50000 posterior samples: 50947it [00:01, 40189.04it/s]                           
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  32%|███▏      | 16001/50000 [00:00<00:00, 130571.93it/s]Drawing 50000 posterior samples:  64%|██████▍   | 31999/50000 [00:00<00:00, 134123.17it/s]Drawing 50000 posterior samples:  96%|█████████▌| 47986/50000 [00:00<00:00, 137302.53it/s]Drawing 50000 posterior samples: 53280it [00:00, 139330.88it/s]                           
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  61%|██████▏   | 30647/50000 [00:00<00:00, 284639.96it/s]Drawing 50000 posterior samples: 53545it [00:00, 284529.55it/s]                           
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  72%|███████▏  | 36037/50000 [00:00<00:00, 339863.32it/s]Drawing 50000 posterior samples: 53975it [00:00, 338599.40it/s]                           
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  74%|███████▎  | 36797/50000 [00:00<00:00, 345917.81it/s]Drawing 50000 posterior samples: 55226it [00:00, 344253.83it/s]                           
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  30%|██▉       | 14965/50000 [00:00<00:00, 138511.56it/s]Drawing 50000 posterior samples:  60%|█████▉    | 29916/50000 [00:00<00:00, 138854.39it/s]Drawing 50000 posterior samples:  89%|████████▉ | 44651/50000 [00:00<00:00, 138050.61it/s]Drawing 50000 posterior samples: 52078it [00:00, 137905.13it/s]                           
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  71%|███████   | 35404/50000 [00:00<00:00, 329778.87it/s]Drawing 50000 posterior samples: 53080it [00:00, 327282.11it/s]                           
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  73%|███████▎  | 36530/50000 [00:00<00:00, 340182.65it/s]Drawing 50000 posterior samples: 54790it [00:00, 338297.63it/s]                           
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  74%|███████▎  | 36828/50000 [00:00<00:00, 339053.06it/s]Drawing 50000 posterior samples: 55236it [00:00, 337762.81it/s]                           
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  63%|██████▎   | 31437/50000 [00:00<00:00, 290504.76it/s]Drawing 50000 posterior samples: 54844it [00:00, 288693.48it/s]                           
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  69%|██████▉   | 34563/50000 [00:00<00:00, 320331.74it/s]Drawing 50000 posterior samples: 51748it [00:00, 319858.71it/s]                           
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  24%|██▎       | 11826/50000 [00:00<00:00, 109634.53it/s]Drawing 50000 posterior samples:  47%|████▋     | 23616/50000 [00:00<00:00, 109436.45it/s]Drawing 50000 posterior samples:  71%|███████   | 35391/50000 [00:00<00:00, 109282.53it/s]Drawing 50000 posterior samples:  95%|█████████▍| 47287/50000 [00:00<00:00, 109720.42it/s]Drawing 50000 posterior samples: 50217it [00:00, 109462.52it/s]                           
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  53%|█████▎    | 26445/50000 [00:00<00:00, 244750.80it/s]Drawing 50000 posterior samples: 52771it [00:00, 245121.57it/s]                           Drawing 50000 posterior samples: 52771it [00:00, 244634.94it/s]
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  14%|█▍        | 7001/50000 [00:00<00:00, 46160.01it/s]Drawing 50000 posterior samples:  23%|██▎       | 11631/50000 [00:00<00:00, 45300.46it/s]Drawing 50000 posterior samples:  33%|███▎      | 16323/50000 [00:00<00:00, 45744.21it/s]Drawing 50000 posterior samples:  47%|████▋     | 23387/50000 [00:00<00:00, 46343.39it/s]Drawing 50000 posterior samples:  61%|██████    | 30558/50000 [00:00<00:00, 49376.54it/s]Drawing 50000 posterior samples:  75%|███████▌  | 37635/50000 [00:00<00:00, 53737.75it/s]Drawing 50000 posterior samples:  90%|████████▉ | 44774/50000 [00:00<00:00, 57502.54it/s]Drawing 50000 posterior samples: 51926it [00:00, 60342.64it/s]                           Drawing 50000 posterior samples: 51926it [00:00, 55050.36it/s]
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  54%|█████▍    | 27197/50000 [00:00<00:00, 261805.28it/s]Drawing 50000 posterior samples: 54434it [00:00, 261789.95it/s]                           Drawing 50000 posterior samples: 54434it [00:00, 261004.62it/s]
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  48%|████▊     | 23906/50000 [00:00<00:00, 228183.91it/s]Drawing 50000 posterior samples:  95%|█████████▌| 47746/50000 [00:00<00:00, 229239.77it/s]Drawing 50000 posterior samples: 55646it [00:00, 228792.70it/s]                           
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:   4%|▍         | 2020/50000 [00:00<00:02, 19679.31it/s]Drawing 50000 posterior samples:   8%|▊         | 4024/50000 [00:00<00:02, 19576.96it/s]Drawing 50000 posterior samples:  12%|█▏        | 6057/50000 [00:00<00:02, 19621.37it/s]Drawing 50000 posterior samples:  16%|█▌        | 8090/50000 [00:00<00:02, 19539.15it/s]Drawing 50000 posterior samples:  20%|██        | 10127/50000 [00:00<00:02, 18566.40it/s]Drawing 50000 posterior samples:  24%|██▍       | 12128/50000 [00:00<00:02, 18756.65it/s]Drawing 50000 posterior samples:  28%|██▊       | 14011/50000 [00:00<00:01, 18565.94it/s]Drawing 50000 posterior samples:  32%|███▏      | 16064/50000 [00:00<00:01, 18944.01it/s]Drawing 50000 posterior samples:  36%|███▌      | 18068/50000 [00:00<00:01, 19085.07it/s]Drawing 50000 posterior samples:  40%|████      | 20103/50000 [00:01<00:01, 19291.26it/s]Drawing 50000 posterior samples:  44%|████▍     | 22087/50000 [00:01<00:01, 19339.26it/s]Drawing 50000 posterior samples:  48%|████▊     | 24158/50000 [00:01<00:01, 19556.62it/s]Drawing 50000 posterior samples:  52%|█████▏    | 26171/50000 [00:01<00:01, 19529.38it/s]Drawing 50000 posterior samples:  56%|█████▋    | 28152/50000 [00:01<00:01, 19403.88it/s]Drawing 50000 posterior samples:  62%|██████▏   | 30897/50000 [00:01<00:00, 20238.93it/s]Drawing 50000 posterior samples:  67%|██████▋   | 33582/50000 [00:01<00:00, 21753.60it/s]Drawing 50000 posterior samples:  73%|███████▎  | 36256/50000 [00:01<00:00, 22836.87it/s]Drawing 50000 posterior samples:  78%|███████▊  | 38967/50000 [00:01<00:00, 23826.31it/s]Drawing 50000 posterior samples:  83%|████████▎ | 41706/50000 [00:01<00:00, 24526.85it/s]Drawing 50000 posterior samples:  89%|████████▊ | 44297/50000 [00:02<00:00, 24738.20it/s]Drawing 50000 posterior samples:  94%|█████████▍| 46992/50000 [00:02<00:00, 24999.12it/s]Drawing 50000 posterior samples:  99%|█████████▉| 49566/50000 [00:02<00:00, 24743.17it/s]Drawing 50000 posterior samples: 50216it [00:02, 21447.98it/s]                           
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  10%|█         | 5055/50000 [00:00<00:00, 47586.81it/s]Drawing 50000 posterior samples:  20%|██        | 10169/50000 [00:00<00:00, 47728.01it/s]Drawing 50000 posterior samples:  30%|███       | 15195/50000 [00:00<00:00, 47484.49it/s]Drawing 50000 posterior samples:  40%|████      | 20147/50000 [00:00<00:00, 47240.84it/s]Drawing 50000 posterior samples:  50%|█████     | 25176/50000 [00:00<00:00, 47321.87it/s]Drawing 50000 posterior samples:  60%|██████    | 30186/50000 [00:00<00:00, 47221.41it/s]Drawing 50000 posterior samples:  71%|███████   | 35316/50000 [00:00<00:00, 47452.83it/s]Drawing 50000 posterior samples:  81%|████████  | 40362/50000 [00:00<00:00, 47319.39it/s]Drawing 50000 posterior samples:  91%|█████████ | 45421/50000 [00:00<00:00, 47429.96it/s]Drawing 50000 posterior samples: 50483it [00:01, 47528.20it/s]                           Drawing 50000 posterior samples: 50483it [00:01, 47397.46it/s]
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  32%|███▏      | 15857/50000 [00:00<00:00, 149593.07it/s]Drawing 50000 posterior samples:  63%|██████▎   | 31566/50000 [00:00<00:00, 148753.07it/s]Drawing 50000 posterior samples:  87%|████████▋ | 43494/50000 [00:00<00:00, 127816.44it/s]Drawing 50000 posterior samples: 51444it [00:00, 116292.69it/s]                           
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  73%|███████▎  | 36728/50000 [00:00<00:00, 353142.20it/s]Drawing 50000 posterior samples: 55099it [00:00, 353505.28it/s]                           
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  71%|███████▏  | 35728/50000 [00:00<00:00, 277040.72it/s]Drawing 50000 posterior samples: 53522it [00:00, 276834.78it/s]                           
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  76%|███████▌  | 37905/50000 [00:00<00:00, 335696.29it/s]Drawing 50000 posterior samples: 56891it [00:00, 335571.93it/s]                           
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  78%|███████▊  | 39171/50000 [00:00<00:00, 347032.88it/s]Drawing 50000 posterior samples: 58736it [00:00, 346481.96it/s]                           
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  68%|██████▊   | 34216/50000 [00:00<00:00, 286292.85it/s]Drawing 50000 posterior samples: 51275it [00:00, 286034.35it/s]                           
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  60%|██████    | 30092/50000 [00:00<00:00, 253612.33it/s]Drawing 50000 posterior samples: 52535it [00:00, 251303.30it/s]                           
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  32%|███▏      | 15906/50000 [00:00<00:00, 156334.37it/s]Drawing 50000 posterior samples:  79%|███████▉  | 39655/50000 [00:00<00:00, 163994.96it/s]Drawing 50000 posterior samples: 55521it [00:00, 191929.86it/s]                           
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  73%|███████▎  | 36628/50000 [00:00<00:00, 311874.30it/s]Drawing 50000 posterior samples: 54962it [00:00, 309998.57it/s]                           
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  76%|███████▌  | 37915/50000 [00:00<00:00, 333327.12it/s]Drawing 50000 posterior samples: 56908it [00:00, 330268.20it/s]                           
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  39%|███▉      | 19520/50000 [00:00<00:00, 185789.56it/s]Drawing 50000 posterior samples:  78%|███████▊  | 39007/50000 [00:00<00:00, 185071.70it/s]Drawing 50000 posterior samples: 58527it [00:00, 184754.51it/s]                           Drawing 50000 posterior samples: 58527it [00:00, 184009.46it/s]
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  79%|███████▊  | 39361/50000 [00:00<00:00, 365882.41it/s]Drawing 50000 posterior samples: 59051it [00:00, 364064.01it/s]                           
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  73%|███████▎  | 36352/50000 [00:00<00:00, 334692.86it/s]Drawing 50000 posterior samples: 54585it [00:00, 335057.43it/s]                           
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  72%|███████▏  | 36212/50000 [00:00<00:00, 334996.66it/s]Drawing 50000 posterior samples: 54325it [00:00, 333459.04it/s]                           
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  80%|████████  | 40000/50000 [00:00<00:00, 367823.80it/s]Drawing 50000 posterior samples: 100%|██████████| 50000/50000 [00:00<00:00, 366319.88it/s]
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  79%|███████▉  | 39453/50000 [00:00<00:00, 362816.88it/s]Drawing 50000 posterior samples: 59216it [00:00, 361035.83it/s]                           
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  58%|█████▊    | 29066/50000 [00:00<00:00, 267803.47it/s]Drawing 50000 posterior samples: 50911it [00:00, 268270.00it/s]                           
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  77%|███████▋  | 38637/50000 [00:00<00:00, 355609.86it/s]Drawing 50000 posterior samples: 57961it [00:00, 353632.47it/s]                           
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  77%|███████▋  | 38484/50000 [00:00<00:00, 357289.16it/s]Drawing 50000 posterior samples: 57706it [00:00, 355640.02it/s]                           
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  78%|███████▊  | 38985/50000 [00:00<00:00, 349085.08it/s]Drawing 50000 posterior samples: 58486it [00:00, 348293.61it/s]                           
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  71%|███████▏  | 35729/50000 [00:00<00:00, 321347.78it/s]Drawing 50000 posterior samples: 53556it [00:00, 319552.61it/s]                           
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  71%|███████▏  | 35675/50000 [00:00<00:00, 320918.53it/s]Drawing 50000 posterior samples: 53461it [00:00, 320261.44it/s]                           
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  80%|███████▉  | 39957/50000 [00:00<00:00, 354368.41it/s]Drawing 50000 posterior samples: 59935it [00:00, 353165.91it/s]                           
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  59%|█████▉    | 29685/50000 [00:00<00:00, 289434.15it/s]Drawing 50000 posterior samples: 59396it [00:00, 289942.80it/s]                           Drawing 50000 posterior samples: 59396it [00:00, 289321.47it/s]
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  60%|██████    | 30000/50000 [00:00<00:00, 278567.90it/s]Drawing 50000 posterior samples: 100%|██████████| 50000/50000 [00:00<00:00, 278785.40it/s]
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  59%|█████▉    | 29616/50000 [00:00<00:00, 274360.21it/s]Drawing 50000 posterior samples: 59199it [00:00, 274828.29it/s]                           Drawing 50000 posterior samples: 59199it [00:00, 274354.61it/s]
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  78%|███████▊  | 39245/50000 [00:00<00:00, 368505.39it/s]Drawing 50000 posterior samples: 58858it [00:00, 353825.57it/s]                           
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  72%|███████▏  | 35777/50000 [00:00<00:00, 300513.50it/s]Drawing 50000 posterior samples: 53663it [00:00, 300507.53it/s]                           
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  61%|██████    | 30342/50000 [00:00<00:00, 255154.31it/s]Drawing 50000 posterior samples: 53165it [00:00, 254457.97it/s]                           
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  73%|███████▎  | 36260/50000 [00:00<00:00, 308199.09it/s]Drawing 50000 posterior samples: 54328it [00:00, 306619.34it/s]                           
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  80%|███████▉  | 39947/50000 [00:00<00:00, 336676.72it/s]Drawing 50000 posterior samples: 59923it [00:00, 337045.65it/s]                           
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  73%|███████▎  | 36283/50000 [00:00<00:00, 304565.49it/s]Drawing 50000 posterior samples: 54408it [00:00, 304037.28it/s]                           
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  62%|██████▏   | 31064/50000 [00:00<00:00, 263361.13it/s]Drawing 50000 posterior samples: 54179it [00:00, 261857.63it/s]                           
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  27%|██▋       | 13720/50000 [00:00<00:00, 115172.55it/s]Drawing 50000 posterior samples:  55%|█████▌    | 27588/50000 [00:00<00:00, 115674.00it/s]Drawing 50000 posterior samples:  83%|████████▎ | 41400/50000 [00:00<00:00, 115711.56it/s]Drawing 50000 posterior samples: 51773it [00:00, 115931.97it/s]                           
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  34%|███▍      | 17020/50000 [00:00<00:00, 159483.16it/s]Drawing 50000 posterior samples:  68%|██████▊   | 34047/50000 [00:00<00:00, 158069.65it/s]Drawing 50000 posterior samples: 51170it [00:00, 158338.52it/s]                           Drawing 50000 posterior samples: 51170it [00:00, 157371.32it/s]
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  37%|███▋      | 18300/50000 [00:00<00:00, 169584.77it/s]Drawing 50000 posterior samples:  73%|███████▎  | 36671/50000 [00:00<00:00, 170027.65it/s]Drawing 50000 posterior samples: 54943it [00:00, 170729.37it/s]                           Drawing 50000 posterior samples: 54943it [00:00, 170630.93it/s]
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  35%|███▍      | 17374/50000 [00:00<00:00, 164548.25it/s]Drawing 50000 posterior samples:  69%|██████▉   | 34695/50000 [00:00<00:00, 163842.21it/s]Drawing 50000 posterior samples: 52153it [00:00, 164159.76it/s]                           Drawing 50000 posterior samples: 52153it [00:00, 163513.59it/s]
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  62%|██████▏   | 30921/50000 [00:00<00:00, 259272.66it/s]Drawing 50000 posterior samples: 54047it [00:00, 260296.72it/s]                           
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  70%|██████▉   | 34878/50000 [00:00<00:00, 293734.60it/s]Drawing 50000 posterior samples: 52270it [00:00, 292558.83it/s]                           
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  28%|██▊       | 13827/50000 [00:00<00:00, 117298.33it/s]Drawing 50000 posterior samples:  55%|█████▌    | 27579/50000 [00:00<00:00, 117135.77it/s]Drawing 50000 posterior samples:  82%|████████▏ | 41120/50000 [00:00<00:00, 116273.21it/s]Drawing 50000 posterior samples: 51477it [00:00, 116050.98it/s]                           
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  73%|███████▎  | 36609/50000 [00:00<00:00, 307409.65it/s]Drawing 50000 posterior samples: 54860it [00:00, 306246.89it/s]                           
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  17%|█▋        | 8622/50000 [00:00<00:00, 73231.72it/s]Drawing 50000 posterior samples:  34%|███▍      | 17213/50000 [00:00<00:00, 72943.78it/s]Drawing 50000 posterior samples:  52%|█████▏    | 25840/50000 [00:00<00:00, 72923.04it/s]Drawing 50000 posterior samples:  69%|██████▉   | 34645/50000 [00:00<00:00, 73261.81it/s]Drawing 50000 posterior samples:  87%|████████▋ | 43294/50000 [00:00<00:00, 73125.48it/s]Drawing 50000 posterior samples: 52096it [00:00, 73515.05it/s]                           Drawing 50000 posterior samples: 52096it [00:00, 73218.98it/s]
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  13%|█▎        | 6373/50000 [00:00<00:00, 54175.83it/s]Drawing 50000 posterior samples:  25%|██▌       | 12720/50000 [00:00<00:00, 53873.40it/s]Drawing 50000 posterior samples:  38%|███▊      | 19091/50000 [00:00<00:00, 53845.30it/s]Drawing 50000 posterior samples:  51%|█████     | 25441/50000 [00:00<00:00, 54058.19it/s]Drawing 50000 posterior samples:  63%|██████▎   | 31651/50000 [00:00<00:00, 53988.63it/s]Drawing 50000 posterior samples:  76%|███████▌  | 37855/50000 [00:00<00:00, 54096.53it/s]Drawing 50000 posterior samples:  89%|████████▊ | 44374/50000 [00:00<00:00, 54732.97it/s]Drawing 50000 posterior samples: 50761it [00:00, 54459.47it/s]                           Drawing 50000 posterior samples: 50761it [00:00, 54208.54it/s]
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  33%|███▎      | 16485/50000 [00:00<00:00, 139126.81it/s]Drawing 50000 posterior samples:  66%|██████▌   | 32991/50000 [00:00<00:00, 139133.44it/s]Drawing 50000 posterior samples:  99%|█████████▉| 49640/50000 [00:00<00:00, 139321.33it/s]Drawing 50000 posterior samples: 55118it [00:00, 138918.09it/s]                           
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  41%|████      | 20447/50000 [00:00<00:00, 170199.42it/s]Drawing 50000 posterior samples:  82%|████████▏ | 40809/50000 [00:00<00:00, 170448.20it/s]Drawing 50000 posterior samples: 54320it [00:00, 170030.00it/s]                           
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  55%|█████▌    | 27505/50000 [00:00<00:00, 229609.09it/s]Drawing 50000 posterior samples: 54900it [00:00, 229863.55it/s]                           Drawing 50000 posterior samples: 54900it [00:00, 229449.76it/s]
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  55%|█████▍    | 27496/50000 [00:00<00:00, 229520.71it/s]Drawing 50000 posterior samples: 54961it [00:00, 229938.87it/s]                           Drawing 50000 posterior samples: 54961it [00:00, 229632.17it/s]
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  55%|█████▍    | 27410/50000 [00:00<00:00, 232399.83it/s]Drawing 50000 posterior samples: 54866it [00:00, 232154.32it/s]                           Drawing 50000 posterior samples: 54866it [00:00, 231400.86it/s]
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  54%|█████▍    | 27192/50000 [00:00<00:00, 230640.54it/s]Drawing 50000 posterior samples: 54450it [00:00, 229067.91it/s]                           Drawing 50000 posterior samples: 54450it [00:00, 227419.91it/s]
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  55%|█████▌    | 27602/50000 [00:00<00:00, 232913.29it/s]Drawing 50000 posterior samples: 55153it [00:00, 233002.69it/s]                           Drawing 50000 posterior samples: 55153it [00:00, 232420.13it/s]
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  73%|███████▎  | 36617/50000 [00:00<00:00, 335932.94it/s]Drawing 50000 posterior samples: 54976it [00:00, 335094.24it/s]                           
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  63%|██████▎   | 31386/50000 [00:00<00:00, 290480.83it/s]Drawing 50000 posterior samples: 54836it [00:00, 288745.23it/s]                           
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  58%|█████▊    | 29025/50000 [00:00<00:00, 264385.35it/s]Drawing 50000 posterior samples: 50789it [00:00, 265313.23it/s]                           
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  61%|██████    | 30311/50000 [00:00<00:00, 277559.93it/s]Drawing 50000 posterior samples: 53034it [00:00, 277147.74it/s]                           
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  49%|████▉     | 24683/50000 [00:00<00:00, 227532.08it/s]Drawing 50000 posterior samples:  99%|█████████▊| 49293/50000 [00:00<00:00, 226748.95it/s]Drawing 50000 posterior samples: 55492it [00:00, 225363.58it/s]                           
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  18%|█▊        | 8840/50000 [00:00<00:00, 81955.31it/s]Drawing 50000 posterior samples:  35%|███▌      | 17648/50000 [00:00<00:00, 81657.63it/s]Drawing 50000 posterior samples:  53%|█████▎    | 26529/50000 [00:00<00:00, 81812.38it/s]Drawing 50000 posterior samples:  71%|███████   | 35473/50000 [00:00<00:00, 82247.99it/s]Drawing 50000 posterior samples:  89%|████████▊ | 44340/50000 [00:00<00:00, 82378.83it/s]Drawing 50000 posterior samples: 51077it [00:00, 82365.83it/s]                           
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  73%|███████▎  | 36484/50000 [00:00<00:00, 335716.58it/s]Drawing 50000 posterior samples: 54737it [00:00, 333768.92it/s]                           
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  63%|██████▎   | 31731/50000 [00:00<00:00, 293551.42it/s]Drawing 50000 posterior samples: 55507it [00:00, 292962.18it/s]                           
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  11%|█         | 5447/50000 [00:00<00:00, 50566.33it/s]Drawing 50000 posterior samples:  22%|██▏       | 10824/50000 [00:00<00:00, 50341.08it/s]Drawing 50000 posterior samples:  32%|███▏      | 16109/50000 [00:00<00:00, 49793.78it/s]Drawing 50000 posterior samples:  43%|████▎     | 21330/50000 [00:00<00:00, 49429.05it/s]Drawing 50000 posterior samples:  53%|█████▎    | 26670/50000 [00:00<00:00, 49285.64it/s]Drawing 50000 posterior samples:  64%|██████▍   | 32003/50000 [00:00<00:00, 49262.74it/s]Drawing 50000 posterior samples:  75%|███████▍  | 37462/50000 [00:00<00:00, 49747.39it/s]Drawing 50000 posterior samples:  85%|████████▌ | 42700/50000 [00:00<00:00, 49255.98it/s]Drawing 50000 posterior samples:  96%|█████████▌| 48005/50000 [00:00<00:00, 48946.58it/s]Drawing 50000 posterior samples: 50701it [00:01, 49182.83it/s]                           
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  13%|█▎        | 6421/50000 [00:00<00:00, 59469.83it/s]Drawing 50000 posterior samples:  25%|██▌       | 12691/50000 [00:00<00:00, 59207.51it/s]Drawing 50000 posterior samples:  38%|███▊      | 18958/50000 [00:00<00:00, 58790.14it/s]Drawing 50000 posterior samples:  50%|█████     | 25226/50000 [00:00<00:00, 58759.59it/s]Drawing 50000 posterior samples:  63%|██████▎   | 31397/50000 [00:00<00:00, 58133.58it/s]Drawing 50000 posterior samples:  75%|███████▌  | 37697/50000 [00:00<00:00, 58039.48it/s]Drawing 50000 posterior samples:  88%|████████▊ | 43978/50000 [00:00<00:00, 57877.26it/s]Drawing 50000 posterior samples: 50287it [00:00, 57857.88it/s]                           Drawing 50000 posterior samples: 50287it [00:00, 58018.22it/s]
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  62%|██████▏   | 30863/50000 [00:00<00:00, 283268.93it/s]Drawing 50000 posterior samples: 54056it [00:00, 286016.88it/s]                           
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  73%|███████▎  | 36700/50000 [00:00<00:00, 336254.58it/s]Drawing 50000 posterior samples: 54998it [00:00, 335071.55it/s]                           
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  76%|███████▋  | 38138/50000 [00:00<00:00, 350208.68it/s]Drawing 50000 posterior samples: 57248it [00:00, 350285.59it/s]                           
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  74%|███████▍  | 37149/50000 [00:00<00:00, 343442.13it/s]Drawing 50000 posterior samples: 55680it [00:00, 342186.98it/s]                           
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  79%|███████▉  | 39540/50000 [00:00<00:00, 366761.94it/s]Drawing 50000 posterior samples: 59314it [00:00, 364754.71it/s]                           
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  71%|███████   | 35576/50000 [00:00<00:00, 324987.17it/s]Drawing 50000 posterior samples: 53269it [00:00, 324311.14it/s]                           
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  59%|█████▉    | 29512/50000 [00:00<00:00, 272475.99it/s]Drawing 50000 posterior samples: 51637it [00:00, 270783.12it/s]                           
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  65%|██████▌   | 32538/50000 [00:00<00:00, 297871.43it/s]Drawing 50000 posterior samples: 56950it [00:00, 297385.04it/s]                           
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  76%|███████▌  | 37940/50000 [00:00<00:00, 346385.44it/s]Drawing 50000 posterior samples: 56904it [00:00, 346153.26it/s]                           
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  74%|███████▍  | 37144/50000 [00:00<00:00, 341396.52it/s]Drawing 50000 posterior samples: 55666it [00:00, 340922.05it/s]                           
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  78%|███████▊  | 39125/50000 [00:00<00:00, 359374.25it/s]Drawing 50000 posterior samples: 58706it [00:00, 359949.20it/s]                           
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  75%|███████▍  | 37339/50000 [00:00<00:00, 342051.72it/s]Drawing 50000 posterior samples: 56041it [00:00, 341677.58it/s]                           
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  70%|███████   | 35088/50000 [00:00<00:00, 321160.21it/s]Drawing 50000 posterior samples: 52645it [00:00, 319329.23it/s]                           
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  70%|██████▉   | 34896/50000 [00:00<00:00, 318734.40it/s]Drawing 50000 posterior samples: 52292it [00:00, 316636.25it/s]                           
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  80%|████████  | 40000/50000 [00:00<00:00, 365503.95it/s]Drawing 50000 posterior samples: 100%|██████████| 50000/50000 [00:00<00:00, 363591.48it/s]
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  79%|███████▉  | 39670/50000 [00:00<00:00, 374895.60it/s]Drawing 50000 posterior samples: 59491it [00:00, 368439.35it/s]                           
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  46%|████▌     | 22779/50000 [00:00<00:00, 210193.65it/s]Drawing 50000 posterior samples:  91%|█████████ | 45613/50000 [00:00<00:00, 210655.58it/s]Drawing 50000 posterior samples: 51183it [00:00, 209961.12it/s]                           
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  72%|███████▏  | 36168/50000 [00:00<00:00, 332739.48it/s]Drawing 50000 posterior samples: 54293it [00:00, 333384.11it/s]                           
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  69%|██████▉   | 34569/50000 [00:00<00:00, 317305.13it/s]Drawing 50000 posterior samples: 51885it [00:00, 316294.18it/s]                           
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  76%|███████▌  | 37756/50000 [00:00<00:00, 346377.09it/s]Drawing 50000 posterior samples: 56639it [00:00, 345296.94it/s]                           
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  65%|██████▍   | 32484/50000 [00:00<00:00, 295650.92it/s]Drawing 50000 posterior samples: 56715it [00:00, 294841.57it/s]                           
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  76%|███████▌  | 38085/50000 [00:00<00:00, 346948.01it/s]Drawing 50000 posterior samples: 57161it [00:00, 345457.50it/s]                           
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  80%|████████  | 40000/50000 [00:00<00:00, 366670.22it/s]Drawing 50000 posterior samples: 100%|██████████| 50000/50000 [00:00<00:00, 365121.50it/s]
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  78%|███████▊  | 39063/50000 [00:00<00:00, 352998.42it/s]Drawing 50000 posterior samples: 58570it [00:00, 351449.49it/s]                           
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  80%|████████  | 40000/50000 [00:00<00:00, 361279.72it/s]Drawing 50000 posterior samples: 100%|██████████| 50000/50000 [00:00<00:00, 359971.09it/s]
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  75%|███████▌  | 37591/50000 [00:00<00:00, 342499.08it/s]Drawing 50000 posterior samples: 56401it [00:00, 339687.71it/s]                           
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  79%|███████▉  | 39411/50000 [00:00<00:00, 359568.86it/s]Drawing 50000 posterior samples: 59106it [00:00, 357238.01it/s]                           
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  76%|███████▌  | 38075/50000 [00:00<00:00, 346674.69it/s]Drawing 50000 posterior samples: 57137it [00:00, 344675.26it/s]                           
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  58%|█████▊    | 29199/50000 [00:00<00:00, 264698.72it/s]Drawing 50000 posterior samples: 50993it [00:00, 263545.25it/s]                           
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  70%|██████▉   | 34904/50000 [00:00<00:00, 318079.47it/s]Drawing 50000 posterior samples: 52373it [00:00, 317200.90it/s]                           
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  80%|███████▉  | 39995/50000 [00:00<00:00, 360399.49it/s]Drawing 50000 posterior samples: 59990it [00:00, 359971.24it/s]                           
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  75%|███████▌  | 37681/50000 [00:00<00:00, 338393.29it/s]Drawing 50000 posterior samples: 56606it [00:00, 326590.46it/s]                           
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  75%|███████▌  | 37673/50000 [00:00<00:00, 341828.68it/s]Drawing 50000 posterior samples: 56505it [00:00, 341316.84it/s]                           
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  74%|███████▍  | 37100/50000 [00:00<00:00, 335170.66it/s]Drawing 50000 posterior samples: 55599it [00:00, 332911.87it/s]                           
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  79%|███████▉  | 39612/50000 [00:00<00:00, 357845.43it/s]Drawing 50000 posterior samples: 59435it [00:00, 357838.88it/s]                           
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  65%|██████▍   | 32409/50000 [00:00<00:00, 295528.15it/s]Drawing 50000 posterior samples: 56720it [00:00, 293777.02it/s]                           
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  59%|█████▊    | 29358/50000 [00:00<00:00, 268894.29it/s]Drawing 50000 posterior samples: 51472it [00:00, 267225.67it/s]                           
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  61%|██████▏   | 30704/50000 [00:00<00:00, 282085.51it/s]Drawing 50000 posterior samples: 53729it [00:00, 281079.49it/s]                           
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  75%|███████▍  | 37261/50000 [00:00<00:00, 338851.99it/s]Drawing 50000 posterior samples: 55855it [00:00, 338119.98it/s]                           
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  74%|███████▍  | 37114/50000 [00:00<00:00, 335862.14it/s]Drawing 50000 posterior samples: 55642it [00:00, 335143.42it/s]                           
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  79%|███████▉  | 39743/50000 [00:00<00:00, 351453.88it/s]Drawing 50000 posterior samples: 59615it [00:00, 353014.62it/s]                           
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  78%|███████▊  | 38809/50000 [00:00<00:00, 352881.32it/s]Drawing 50000 posterior samples: 58188it [00:00, 351104.22it/s]                           
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  70%|███████   | 35199/50000 [00:00<00:00, 316090.21it/s]Drawing 50000 posterior samples: 52785it [00:00, 321519.41it/s]                           
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  74%|███████▍  | 36946/50000 [00:00<00:00, 353386.38it/s]Drawing 50000 posterior samples: 55436it [00:00, 352724.19it/s]                           
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  60%|██████    | 30000/50000 [00:00<00:00, 294117.65it/s]Drawing 50000 posterior samples: 100%|██████████| 50000/50000 [00:00<00:00, 292985.48it/s]
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  59%|█████▉    | 29554/50000 [00:00<00:00, 287182.19it/s]Drawing 50000 posterior samples: 59099it [00:00, 287248.21it/s]                           Drawing 50000 posterior samples: 59099it [00:00, 286400.96it/s]
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  45%|████▌     | 22500/50000 [00:00<00:00, 217054.04it/s]Drawing 50000 posterior samples:  90%|████████▉ | 44917/50000 [00:00<00:00, 217165.95it/s]Drawing 50000 posterior samples: 52474it [00:00, 216844.02it/s]                           
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  74%|███████▎  | 36796/50000 [00:00<00:00, 285873.39it/s]Drawing 50000 posterior samples: 55162it [00:00, 283851.47it/s]                           
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  74%|███████▍  | 37166/50000 [00:00<00:00, 286040.52it/s]Drawing 50000 posterior samples: 55755it [00:00, 286267.23it/s]                           
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  79%|███████▊  | 39319/50000 [00:00<00:00, 304850.97it/s]Drawing 50000 posterior samples: 58923it [00:00, 304024.21it/s]                           
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  71%|███████   | 35521/50000 [00:00<00:00, 275501.31it/s]Drawing 50000 posterior samples: 53305it [00:00, 275368.72it/s]                           
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  75%|███████▍  | 37436/50000 [00:00<00:00, 290092.29it/s]Drawing 50000 posterior samples: 56139it [00:00, 289795.47it/s]                           
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  80%|████████  | 40000/50000 [00:00<00:00, 312871.76it/s]Drawing 50000 posterior samples: 100%|██████████| 50000/50000 [00:00<00:00, 312087.80it/s]
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  77%|███████▋  | 38560/50000 [00:00<00:00, 302807.22it/s]Drawing 50000 posterior samples: 57835it [00:00, 301385.02it/s]                           
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  80%|████████  | 40000/50000 [00:00<00:00, 341320.14it/s]Drawing 50000 posterior samples: 100%|██████████| 50000/50000 [00:00<00:00, 341518.43it/s]
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  78%|███████▊  | 38926/50000 [00:00<00:00, 301461.22it/s]Drawing 50000 posterior samples: 58356it [00:00, 300600.93it/s]                           
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  80%|███████▉  | 39824/50000 [00:00<00:00, 308606.64it/s]Drawing 50000 posterior samples: 59740it [00:00, 307648.52it/s]                           
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  75%|███████▍  | 37290/50000 [00:00<00:00, 290586.01it/s]Drawing 50000 posterior samples: 55938it [00:00, 290116.49it/s]                           
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  59%|█████▉    | 29720/50000 [00:00<00:00, 230521.90it/s]Drawing 50000 posterior samples: 52225it [00:00, 231013.81it/s]                           
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  70%|███████   | 35013/50000 [00:00<00:00, 274306.44it/s]Drawing 50000 posterior samples: 52457it [00:00, 272216.48it/s]                           
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  80%|███████▉  | 39999/50000 [00:00<00:00, 309896.92it/s]Drawing 50000 posterior samples: 59999it [00:00, 309711.67it/s]                           
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
Drawing 50000 posterior samples:   0%|          | 0/50000 [00:00<?, ?it/s]Drawing 50000 posterior samples:  71%|███████   | 35425/50000 [00:00<00:00, 278348.94it/s]Drawing 50000 posterior samples: 53114it [00:00, 277581.03it/s]                           
lstm_sbi.py:455: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  points=torch.tensor(true_theta),
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr_value = np.array(value)
/home/SHARED/software/anaconda3/2020.07e/lib/python3.8/site-packages/pandas/core/internals/blocks.py:867: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.array(value)
30
Training neural network. Epochs trained:  1Training neural network. Epochs trained:  2Training neural network. Epochs trained:  3Training neural network. Epochs trained:  4Training neural network. Epochs trained:  5Training neural network. Epochs trained:  6Training neural network. Epochs trained:  7Training neural network. Epochs trained:  8Training neural network. Epochs trained:  9Training neural network. Epochs trained:  10Training neural network. Epochs trained:  11Training neural network. Epochs trained:  12Training neural network. Epochs trained:  13Training neural network. Epochs trained:  14Training neural network. Epochs trained:  15Training neural network. Epochs trained:  16Training neural network. Epochs trained:  17Training neural network. Epochs trained:  18Training neural network. Epochs trained:  19Training neural network. Epochs trained:  20Training neural network. Epochs trained:  21Training neural network. Epochs trained:  22Training neural network. Epochs trained:  23Training neural network. Epochs trained:  24Training neural network. Epochs trained:  25Training neural network. Epochs trained:  26Training neural network. Epochs trained:  27Training neural network. Epochs trained:  28Training neural network. Epochs trained:  29Training neural network. Epochs trained:  30Training neural network. Epochs trained:  31Training neural network. Epochs trained:  32Training neural network. Epochs trained:  33Training neural network. Epochs trained:  34Training neural network. Epochs trained:  35Training neural network. Epochs trained:  36Training neural network. Epochs trained:  37Training neural network. Epochs trained:  38Training neural network. Epochs trained:  39Training neural network. Epochs trained:  40Training neural network. Epochs trained:  41Training neural network. Epochs trained:  42Training neural network. Epochs trained:  43Training neural network. Epochs trained:  44Training neural network. Epochs trained:  45Training neural network. Epochs trained:  46Training neural network. Epochs trained:  47Training neural network. Epochs trained:  48Training neural network. Epochs trained:  49Training neural network. Epochs trained:  50Training neural network. Epochs trained:  51Training neural network. Epochs trained:  52Training neural network. Epochs trained:  53Training neural network. Epochs trained:  54Training neural network. Epochs trained:  55Training neural network. Epochs trained:  56Training neural network. Epochs trained:  57Training neural network. Epochs trained:  58Training neural network. Epochs trained:  59Training neural network. Epochs trained:  60Training neural network. Epochs trained:  61Training neural network. Epochs trained:  62Training neural network. Epochs trained:  63Training neural network. Epochs trained:  64Training neural network. Epochs trained:  65Training neural network. Epochs trained:  66Training neural network. Epochs trained:  67Training neural network. Epochs trained:  68Training neural network. Epochs trained:  69Training neural network. Epochs trained:  70Training neural network. Epochs trained:  71Training neural network. Epochs trained:  72Training neural network. Epochs trained:  73Training neural network. Epochs trained:  74Training neural network. Epochs trained:  75Training neural network. Epochs trained:  76Training neural network. Epochs trained:  77Training neural network. Epochs trained:  78Training neural network. Epochs trained:  79Training neural network. Epochs trained:  80Training neural network. Epochs trained:  81Training neural network. Epochs trained:  82Training neural network. Epochs trained:  83Training neural network. Epochs trained:  84Training neural network. Epochs trained:  85Training neural network. Epochs trained:  86Training neural network. Epochs trained:  87Training neural network. Epochs trained:  88Training neural network. Epochs trained:  89Training neural network. Epochs trained:  90Training neural network. Epochs trained:  91Training neural network. Epochs trained:  92Training neural network. Epochs trained:  93Training neural network. Epochs trained:  94Training neural network. Epochs trained:  95Training neural network. Epochs trained:  96Training neural network. Epochs trained:  97Training neural network. Epochs trained:  98Training neural network. Epochs trained:  99Training neural network. Epochs trained:  100Training neural network. Epochs trained:  101Training neural network. Epochs trained:  102Training neural network. Epochs trained:  103Training neural network. Epochs trained:  104Training neural network. Epochs trained:  105Training neural network. Epochs trained:  106Training neural network. Epochs trained:  107Training neural network. Epochs trained:  108Training neural network. Epochs trained:  109Training neural network. Epochs trained:  110Training neural network. Epochs trained:  111Training neural network. Epochs trained:  112Training neural network. Epochs trained:  113Training neural network. Epochs trained:  114Training neural network. Epochs trained:  115Training neural network. Epochs trained:  116Training neural network. Epochs trained:  117Training neural network. Epochs trained:  118Training neural network. Epochs trained:  119Training neural network. Epochs trained:  120Training neural network. Epochs trained:  121Training neural network. Epochs trained:  122Training neural network. Epochs trained:  123Training neural network. Epochs trained:  124Training neural network. Epochs trained:  125Training neural network. Epochs trained:  126Training neural network. Epochs trained:  127Training neural network. Epochs trained:  128Training neural network. Epochs trained:  129Training neural network. Epochs trained:  130Training neural network. Epochs trained:  131Training neural network. Epochs trained:  132Training neural network. Epochs trained:  133Training neural network. Epochs trained:  134Training neural network. Epochs trained:  135Training neural network. Epochs trained:  136Training neural network. Epochs trained:  137Training neural network. Epochs trained:  138Training neural network. Epochs trained:  139Training neural network. Epochs trained:  140Training neural network. Epochs trained:  141Training neural network. Epochs trained:  142Training neural network. Epochs trained:  143Training neural network. Epochs trained:  144Training neural network. Epochs trained:  145Training neural network. Epochs trained:  146Training neural network. Epochs trained:  147Training neural network. Epochs trained:  148Training neural network. Epochs trained:  149Training neural network. Epochs trained:  150Training neural network. Epochs trained:  151Training neural network. Epochs trained:  152Training neural network. Epochs trained:  153Training neural network. Epochs trained:  154Training neural network. Epochs trained:  155Training neural network. Epochs trained:  156Training neural network. Epochs trained:  157Training neural network. Epochs trained:  158Training neural network. Epochs trained:  159Training neural network. Epochs trained:  160Training neural network. Epochs trained:  161Training neural network. Epochs trained:  162Training neural network. Epochs trained:  163Training neural network. Epochs trained:  164Training neural network. Epochs trained:  165Training neural network. Epochs trained:  166Training neural network. Epochs trained:  167Training neural network. Epochs trained:  168Training neural network. Epochs trained:  169Training neural network. Epochs trained:  170Training neural network. Epochs trained:  171Training neural network. Epochs trained:  172Training neural network. Epochs trained:  173Training neural network. Epochs trained:  174Training neural network. Epochs trained:  175Training neural network. Epochs trained:  176Training neural network. Epochs trained:  177Training neural network. Epochs trained:  178Training neural network. Epochs trained:  179Training neural network. Epochs trained:  180Training neural network. Epochs trained:  181Training neural network. Epochs trained:  182Training neural network. Epochs trained:  183Training neural network. Epochs trained:  184Training neural network. Epochs trained:  185Training neural network. Epochs trained:  186Training neural network. Epochs trained:  187Training neural network. Epochs trained:  188Training neural network. Epochs trained:  189Training neural network. Epochs trained:  190Training neural network. Epochs trained:  191Training neural network. Epochs trained:  192Training neural network. Epochs trained:  193Training neural network. Epochs trained:  194Training neural network. Epochs trained:  195Training neural network. Epochs trained:  196Training neural network. Epochs trained:  197Training neural network. Epochs trained:  198Training neural network. Epochs trained:  199Training neural network. Epochs trained:  200Training neural network. Epochs trained:  201Training neural network. Epochs trained:  202Training neural network. Epochs trained:  203Training neural network. Epochs trained:  204Training neural network. Epochs trained:  205Training neural network. Epochs trained:  206Training neural network. Epochs trained:  207Training neural network. Epochs trained:  208Training neural network. Epochs trained:  209Training neural network. Epochs trained:  210Training neural network. Epochs trained:  211Training neural network. Epochs trained:  212Training neural network. Epochs trained:  213Training neural network. Epochs trained:  214Training neural network. Epochs trained:  215Training neural network. Epochs trained:  216Training neural network. Epochs trained:  217Training neural network. Epochs trained:  218Neural network successfully converged after 218 epochs.
Training neural network. Epochs trained:  1Training neural network. Epochs trained:  2Training neural network. Epochs trained:  3Training neural network. Epochs trained:  4Training neural network. Epochs trained:  5Training neural network. Epochs trained:  6Training neural network. Epochs trained:  7Training neural network. Epochs trained:  8Training neural network. Epochs trained:  9Training neural network. Epochs trained:  10Training neural network. Epochs trained:  11Training neural network. Epochs trained:  12Training neural network. Epochs trained:  13Training neural network. Epochs trained:  14Training neural network. Epochs trained:  15Training neural network. Epochs trained:  16Training neural network. Epochs trained:  17Training neural network. Epochs trained:  18Training neural network. Epochs trained:  19Training neural network. Epochs trained:  20Training neural network. Epochs trained:  21Training neural network. Epochs trained:  22Training neural network. Epochs trained:  23Training neural network. Epochs trained:  24Training neural network. Epochs trained:  25Training neural network. Epochs trained:  26Training neural network. Epochs trained:  27Training neural network. Epochs trained:  28Training neural network. Epochs trained:  29Training neural network. Epochs trained:  30Training neural network. Epochs trained:  31Training neural network. Epochs trained:  32Training neural network. Epochs trained:  33Training neural network. Epochs trained:  34Training neural network. Epochs trained:  35Training neural network. Epochs trained:  36Training neural network. Epochs trained:  37Training neural network. Epochs trained:  38Training neural network. Epochs trained:  39Training neural network. Epochs trained:  40Training neural network. Epochs trained:  41Training neural network. Epochs trained:  42Training neural network. Epochs trained:  43Training neural network. Epochs trained:  44Training neural network. Epochs trained:  45Training neural network. Epochs trained:  46Training neural network. Epochs trained:  47Training neural network. Epochs trained:  48Training neural network. Epochs trained:  49Training neural network. Epochs trained:  50Training neural network. Epochs trained:  51Training neural network. Epochs trained:  52Training neural network. Epochs trained:  53Training neural network. Epochs trained:  54Training neural network. Epochs trained:  55Training neural network. Epochs trained:  56Training neural network. Epochs trained:  57Training neural network. Epochs trained:  58Training neural network. Epochs trained:  59Training neural network. Epochs trained:  60Training neural network. Epochs trained:  61Training neural network. Epochs trained:  62Training neural network. Epochs trained:  63Training neural network. Epochs trained:  64Training neural network. Epochs trained:  65Training neural network. Epochs trained:  66Training neural network. Epochs trained:  67Training neural network. Epochs trained:  68Training neural network. Epochs trained:  69Training neural network. Epochs trained:  70Training neural network. Epochs trained:  71Training neural network. Epochs trained:  72Training neural network. Epochs trained:  73Training neural network. Epochs trained:  74Training neural network. Epochs trained:  75Training neural network. Epochs trained:  76Training neural network. Epochs trained:  77Training neural network. Epochs trained:  78Training neural network. Epochs trained:  79Training neural network. Epochs trained:  80Training neural network. Epochs trained:  81Training neural network. Epochs trained:  82Training neural network. Epochs trained:  83Training neural network. Epochs trained:  84Training neural network. Epochs trained:  85Training neural network. Epochs trained:  86Training neural network. Epochs trained:  87Training neural network. Epochs trained:  88Training neural network. Epochs trained:  89Training neural network. Epochs trained:  90Training neural network. Epochs trained:  91Training neural network. Epochs trained:  92Training neural network. Epochs trained:  93Training neural network. Epochs trained:  94Training neural network. Epochs trained:  95Training neural network. Epochs trained:  96Training neural network. Epochs trained:  97Training neural network. Epochs trained:  98Training neural network. Epochs trained:  99Training neural network. Epochs trained:  100Training neural network. Epochs trained:  101Training neural network. Epochs trained:  102Training neural network. Epochs trained:  103Training neural network. Epochs trained:  104Training neural network. Epochs trained:  105Training neural network. Epochs trained:  106Training neural network. Epochs trained:  107Training neural network. Epochs trained:  108Training neural network. Epochs trained:  109Training neural network. Epochs trained:  110Training neural network. Epochs trained:  111Training neural network. Epochs trained:  112Training neural network. Epochs trained:  113Training neural network. Epochs trained:  114Training neural network. Epochs trained:  115Training neural network. Epochs trained:  116Training neural network. Epochs trained:  117Training neural network. Epochs trained:  118Training neural network. Epochs trained:  119Training neural network. Epochs trained:  120Training neural network. Epochs trained:  121Training neural network. Epochs trained:  122Training neural network. Epochs trained:  123Training neural network. Epochs trained:  124Training neural network. Epochs trained:  125Training neural network. Epochs trained:  126Training neural network. Epochs trained:  127Training neural network. Epochs trained:  128Training neural network. Epochs trained:  129Training neural network. Epochs trained:  130Training neural network. Epochs trained:  131Training neural network. Epochs trained:  132Training neural network. Epochs trained:  133Training neural network. Epochs trained:  134Training neural network. Epochs trained:  135Training neural network. Epochs trained:  136Training neural network. Epochs trained:  137Training neural network. Epochs trained:  138Training neural network. Epochs trained:  139Training neural network. Epochs trained:  140Training neural network. Epochs trained:  141Training neural network. Epochs trained:  142Training neural network. Epochs trained:  143Training neural network. Epochs trained:  144Training neural network. Epochs trained:  145Training neural network. Epochs trained:  146Training neural network. Epochs trained:  147Training neural network. Epochs trained:  148Training neural network. Epochs trained:  149Training neural network. Epochs trained:  150Training neural network. Epochs trained:  151Training neural network. Epochs trained:  152Training neural network. Epochs trained:  153Training neural network. Epochs trained:  154Training neural network. Epochs trained:  155Training neural network. Epochs trained:  156Training neural network. Epochs trained:  157Training neural network. Epochs trained:  158Training neural network. Epochs trained:  159Training neural network. Epochs trained:  160Training neural network. Epochs trained:  161Training neural network. Epochs trained:  162Training neural network. Epochs trained:  163Training neural network. Epochs trained:  164Training neural network. Epochs trained:  165Training neural network. Epochs trained:  166Neural network successfully converged after 166 epochs.
Training neural network. Epochs trained:  1Training neural network. Epochs trained:  2Training neural network. Epochs trained:  3Training neural network. Epochs trained:  4Training neural network. Epochs trained:  5Training neural network. Epochs trained:  6Training neural network. Epochs trained:  7Training neural network. Epochs trained:  8Training neural network. Epochs trained:  9Training neural network. Epochs trained:  10Training neural network. Epochs trained:  11Training neural network. Epochs trained:  12Training neural network. Epochs trained:  13Training neural network. Epochs trained:  14Training neural network. Epochs trained:  15Training neural network. Epochs trained:  16Training neural network. Epochs trained:  17Training neural network. Epochs trained:  18Training neural network. Epochs trained:  19Training neural network. Epochs trained:  20Training neural network. Epochs trained:  21Training neural network. Epochs trained:  22Training neural network. Epochs trained:  23Training neural network. Epochs trained:  24Training neural network. Epochs trained:  25Training neural network. Epochs trained:  26Training neural network. Epochs trained:  27Training neural network. Epochs trained:  28Training neural network. Epochs trained:  29Training neural network. Epochs trained:  30Training neural network. Epochs trained:  31Training neural network. Epochs trained:  32Training neural network. Epochs trained:  33Training neural network. Epochs trained:  34Training neural network. Epochs trained:  35Training neural network. Epochs trained:  36Training neural network. Epochs trained:  37Training neural network. Epochs trained:  38Training neural network. Epochs trained:  39Training neural network. Epochs trained:  40Training neural network. Epochs trained:  41Training neural network. Epochs trained:  42Training neural network. Epochs trained:  43Training neural network. Epochs trained:  44Training neural network. Epochs trained:  45Training neural network. Epochs trained:  46Training neural network. Epochs trained:  47Training neural network. Epochs trained:  48Training neural network. Epochs trained:  49Training neural network. Epochs trained:  50Training neural network. Epochs trained:  51Training neural network. Epochs trained:  52Training neural network. Epochs trained:  53Training neural network. Epochs trained:  54Training neural network. Epochs trained:  55Training neural network. Epochs trained:  56Training neural network. Epochs trained:  57Training neural network. Epochs trained:  58Training neural network. Epochs trained:  59Training neural network. Epochs trained:  60Training neural network. Epochs trained:  61Training neural network. Epochs trained:  62Training neural network. Epochs trained:  63Training neural network. Epochs trained:  64Training neural network. Epochs trained:  65Training neural network. Epochs trained:  66Training neural network. Epochs trained:  67Training neural network. Epochs trained:  68Training neural network. Epochs trained:  69Training neural network. Epochs trained:  70Training neural network. Epochs trained:  71Training neural network. Epochs trained:  72Training neural network. Epochs trained:  73Training neural network. Epochs trained:  74Training neural network. Epochs trained:  75Training neural network. Epochs trained:  76Training neural network. Epochs trained:  77Training neural network. Epochs trained:  78Training neural network. Epochs trained:  79Training neural network. Epochs trained:  80Training neural network. Epochs trained:  81Training neural network. Epochs trained:  82Training neural network. Epochs trained:  83Training neural network. Epochs trained:  84Training neural network. Epochs trained:  85Training neural network. Epochs trained:  86Training neural network. Epochs trained:  87Training neural network. Epochs trained:  88Training neural network. Epochs trained:  89Training neural network. Epochs trained:  90Training neural network. Epochs trained:  91Training neural network. Epochs trained:  92Training neural network. Epochs trained:  93Training neural network. Epochs trained:  94Training neural network. Epochs trained:  95Training neural network. Epochs trained:  96Training neural network. Epochs trained:  97Training neural network. Epochs trained:  98Training neural network. Epochs trained:  99Training neural network. Epochs trained:  100Training neural network. Epochs trained:  101Training neural network. Epochs trained:  102Training neural network. Epochs trained:  103Training neural network. Epochs trained:  104Training neural network. Epochs trained:  105Training neural network. Epochs trained:  106Training neural network. Epochs trained:  107Training neural network. Epochs trained:  108Training neural network. Epochs trained:  109Training neural network. Epochs trained:  110Training neural network. Epochs trained:  111Training neural network. Epochs trained:  112Training neural network. Epochs trained:  113Training neural network. Epochs trained:  114Training neural network. Epochs trained:  115Training neural network. Epochs trained:  116Training neural network. Epochs trained:  117Training neural network. Epochs trained:  118Training neural network. Epochs trained:  119Training neural network. Epochs trained:  120Training neural network. Epochs trained:  121Training neural network. Epochs trained:  122Training neural network. Epochs trained:  123Training neural network. Epochs trained:  124Training neural network. Epochs trained:  125Training neural network. Epochs trained:  126Training neural network. Epochs trained:  127Training neural network. Epochs trained:  128Training neural network. Epochs trained:  129Training neural network. Epochs trained:  130Training neural network. Epochs trained:  131Training neural network. Epochs trained:  132Training neural network. Epochs trained:  133Training neural network. Epochs trained:  134Training neural network. Epochs trained:  135Training neural network. Epochs trained:  136Training neural network. Epochs trained:  137Training neural network. Epochs trained:  138Training neural network. Epochs trained:  139Training neural network. Epochs trained:  140Training neural network. Epochs trained:  141Training neural network. Epochs trained:  142Training neural network. Epochs trained:  143Training neural network. Epochs trained:  144Training neural network. Epochs trained:  145Training neural network. Epochs trained:  146Training neural network. Epochs trained:  147Training neural network. Epochs trained:  148Training neural network. Epochs trained:  149Training neural network. Epochs trained:  150Training neural network. Epochs trained:  151Training neural network. Epochs trained:  152Training neural network. Epochs trained:  153Training neural network. Epochs trained:  154Training neural network. Epochs trained:  155Training neural network. Epochs trained:  156Training neural network. Epochs trained:  157Training neural network. Epochs trained:  158Training neural network. Epochs trained:  159Training neural network. Epochs trained:  160Training neural network. Epochs trained:  161Training neural network. Epochs trained:  162Training neural network. Epochs trained:  163Training neural network. Epochs trained:  164Training neural network. Epochs trained:  165Training neural network. Epochs trained:  166Training neural network. Epochs trained:  167Training neural network. Epochs trained:  168Training neural network. Epochs trained:  169Training neural network. Epochs trained:  170Training neural network. Epochs trained:  171Training neural network. Epochs trained:  172Training neural network. Epochs trained:  173Training neural network. Epochs trained:  174Training neural network. Epochs trained:  175Training neural network. Epochs trained:  176Training neural network. Epochs trained:  177Training neural network. Epochs trained:  178Training neural network. Epochs trained:  179Training neural network. Epochs trained:  180Training neural network. Epochs trained:  181Training neural network. Epochs trained:  182Training neural network. Epochs trained:  183Training neural network. Epochs trained:  184Training neural network. Epochs trained:  185Training neural network. Epochs trained:  186Training neural network. Epochs trained:  187Training neural network. Epochs trained:  188Training neural network. Epochs trained:  189Training neural network. Epochs trained:  190Training neural network. Epochs trained:  191Training neural network. Epochs trained:  192Training neural network. Epochs trained:  193Training neural network. Epochs trained:  194Training neural network. Epochs trained:  195Training neural network. Epochs trained:  196Training neural network. Epochs trained:  197Training neural network. Epochs trained:  198Training neural network. Epochs trained:  199Training neural network. Epochs trained:  200Training neural network. Epochs trained:  201Training neural network. Epochs trained:  202Training neural network. Epochs trained:  203Training neural network. Epochs trained:  204Training neural network. Epochs trained:  205Training neural network. Epochs trained:  206Training neural network. Epochs trained:  207Training neural network. Epochs trained:  208Training neural network. Epochs trained:  209Training neural network. Epochs trained:  210Training neural network. Epochs trained:  211Training neural network. Epochs trained:  212Training neural network. Epochs trained:  213Training neural network. Epochs trained:  214Training neural network. Epochs trained:  215Training neural network. Epochs trained:  216Training neural network. Epochs trained:  217Training neural network. Epochs trained:  218Training neural network. Epochs trained:  219Training neural network. Epochs trained:  220Training neural network. Epochs trained:  221Training neural network. Epochs trained:  222Training neural network. Epochs trained:  223Training neural network. Epochs trained:  224Training neural network. Epochs trained:  225Training neural network. Epochs trained:  226Training neural network. Epochs trained:  227Training neural network. Epochs trained:  228Training neural network. Epochs trained:  229Training neural network. Epochs trained:  230Training neural network. Epochs trained:  231Training neural network. Epochs trained:  232Training neural network. Epochs trained:  233Training neural network. Epochs trained:  234Training neural network. Epochs trained:  235Training neural network. Epochs trained:  236Training neural network. Epochs trained:  237Training neural network. Epochs trained:  238Training neural network. Epochs trained:  239Training neural network. Epochs trained:  240Training neural network. Epochs trained:  241Training neural network. Epochs trained:  242Training neural network. Epochs trained:  243Training neural network. Epochs trained:  244Training neural network. Epochs trained:  245Training neural network. Epochs trained:  246Training neural network. Epochs trained:  247Training neural network. Epochs trained:  248Training neural network. Epochs trained:  249Training neural network. Epochs trained:  250Training neural network. Epochs trained:  251Training neural network. Epochs trained:  252Training neural network. Epochs trained:  253Training neural network. Epochs trained:  254Training neural network. Epochs trained:  255Training neural network. Epochs trained:  256Training neural network. Epochs trained:  257Training neural network. Epochs trained:  258Training neural network. Epochs trained:  259Training neural network. Epochs trained:  260Training neural network. Epochs trained:  261Training neural network. Epochs trained:  262Training neural network. Epochs trained:  263Training neural network. Epochs trained:  264Training neural network. Epochs trained:  265Training neural network. Epochs trained:  266Training neural network. Epochs trained:  267Training neural network. Epochs trained:  268Training neural network. Epochs trained:  269Training neural network. Epochs trained:  270Training neural network. Epochs trained:  271Training neural network. Epochs trained:  272Neural network successfully converged after 272 epochs.
Training neural network. Epochs trained:  1Training neural network. Epochs trained:  2Training neural network. Epochs trained:  3Training neural network. Epochs trained:  4Training neural network. Epochs trained:  5Training neural network. Epochs trained:  6Training neural network. Epochs trained:  7Training neural network. Epochs trained:  8Training neural network. Epochs trained:  9Training neural network. Epochs trained:  10Training neural network. Epochs trained:  11Training neural network. Epochs trained:  12Training neural network. Epochs trained:  13Training neural network. Epochs trained:  14Training neural network. Epochs trained:  15Training neural network. Epochs trained:  16Training neural network. Epochs trained:  17Training neural network. Epochs trained:  18Training neural network. Epochs trained:  19Training neural network. Epochs trained:  20Training neural network. Epochs trained:  21Training neural network. Epochs trained:  22Training neural network. Epochs trained:  23Training neural network. Epochs trained:  24Training neural network. Epochs trained:  25Training neural network. Epochs trained:  26Training neural network. Epochs trained:  27Training neural network. Epochs trained:  28Training neural network. Epochs trained:  29Training neural network. Epochs trained:  30Training neural network. Epochs trained:  31Training neural network. Epochs trained:  32Training neural network. Epochs trained:  33Training neural network. Epochs trained:  34Training neural network. Epochs trained:  35Training neural network. Epochs trained:  36Training neural network. Epochs trained:  37Training neural network. Epochs trained:  38Training neural network. Epochs trained:  39Training neural network. Epochs trained:  40Training neural network. Epochs trained:  41Training neural network. Epochs trained:  42Training neural network. Epochs trained:  43Training neural network. Epochs trained:  44Training neural network. Epochs trained:  45Training neural network. Epochs trained:  46Training neural network. Epochs trained:  47Training neural network. Epochs trained:  48Training neural network. Epochs trained:  49Training neural network. Epochs trained:  50Training neural network. Epochs trained:  51Training neural network. Epochs trained:  52Training neural network. Epochs trained:  53Training neural network. Epochs trained:  54Training neural network. Epochs trained:  55Training neural network. Epochs trained:  56Training neural network. Epochs trained:  57Training neural network. Epochs trained:  58Training neural network. Epochs trained:  59Training neural network. Epochs trained:  60Training neural network. Epochs trained:  61Training neural network. Epochs trained:  62Training neural network. Epochs trained:  63Training neural network. Epochs trained:  64Training neural network. Epochs trained:  65Training neural network. Epochs trained:  66Training neural network. Epochs trained:  67Training neural network. Epochs trained:  68Training neural network. Epochs trained:  69Training neural network. Epochs trained:  70Training neural network. Epochs trained:  71Training neural network. Epochs trained:  72Training neural network. Epochs trained:  73Training neural network. Epochs trained:  74Training neural network. Epochs trained:  75Training neural network. Epochs trained:  76Training neural network. Epochs trained:  77Training neural network. Epochs trained:  78Training neural network. Epochs trained:  79Training neural network. Epochs trained:  80Training neural network. Epochs trained:  81Training neural network. Epochs trained:  82Training neural network. Epochs trained:  83Training neural network. Epochs trained:  84Training neural network. Epochs trained:  85Training neural network. Epochs trained:  86Training neural network. Epochs trained:  87Training neural network. Epochs trained:  88Training neural network. Epochs trained:  89Training neural network. Epochs trained:  90Training neural network. Epochs trained:  91Training neural network. Epochs trained:  92Training neural network. Epochs trained:  93Training neural network. Epochs trained:  94Training neural network. Epochs trained:  95Training neural network. Epochs trained:  96Training neural network. Epochs trained:  97Training neural network. Epochs trained:  98Training neural network. Epochs trained:  99Training neural network. Epochs trained:  100Training neural network. Epochs trained:  101Training neural network. Epochs trained:  102Training neural network. Epochs trained:  103Training neural network. Epochs trained:  104Training neural network. Epochs trained:  105Training neural network. Epochs trained:  106Training neural network. Epochs trained:  107Training neural network. Epochs trained:  108Training neural network. Epochs trained:  109Training neural network. Epochs trained:  110Training neural network. Epochs trained:  111Training neural network. Epochs trained:  112Training neural network. Epochs trained:  113Training neural network. Epochs trained:  114Training neural network. Epochs trained:  115Training neural network. Epochs trained:  116Training neural network. Epochs trained:  117Training neural network. Epochs trained:  118Training neural network. Epochs trained:  119Training neural network. Epochs trained:  120Training neural network. Epochs trained:  121Training neural network. Epochs trained:  122Training neural network. Epochs trained:  123Training neural network. Epochs trained:  124Training neural network. Epochs trained:  125Training neural network. Epochs trained:  126Training neural network. Epochs trained:  127Training neural network. Epochs trained:  128Training neural network. Epochs trained:  129Training neural network. Epochs trained:  130Training neural network. Epochs trained:  131Training neural network. Epochs trained:  132Training neural network. Epochs trained:  133Training neural network. Epochs trained:  134Training neural network. Epochs trained:  135Training neural network. Epochs trained:  136Training neural network. Epochs trained:  137Training neural network. Epochs trained:  138Training neural network. Epochs trained:  139Training neural network. Epochs trained:  140Training neural network. Epochs trained:  141Training neural network. Epochs trained:  142Training neural network. Epochs trained:  143Training neural network. Epochs trained:  144Training neural network. Epochs trained:  145Training neural network. Epochs trained:  146Training neural network. Epochs trained:  147Training neural network. Epochs trained:  148Training neural network. Epochs trained:  149Training neural network. Epochs trained:  150Training neural network. Epochs trained:  151Training neural network. Epochs trained:  152Training neural network. Epochs trained:  153Training neural network. Epochs trained:  154Training neural network. Epochs trained:  155Training neural network. Epochs trained:  156Training neural network. Epochs trained:  157Training neural network. Epochs trained:  158Training neural network. Epochs trained:  159Training neural network. Epochs trained:  160Training neural network. Epochs trained:  161Training neural network. Epochs trained:  162Training neural network. Epochs trained:  163Training neural network. Epochs trained:  164Training neural network. Epochs trained:  165Training neural network. Epochs trained:  166Training neural network. Epochs trained:  167Training neural network. Epochs trained:  168Training neural network. Epochs trained:  169Training neural network. Epochs trained:  170Training neural network. Epochs trained:  171Training neural network. Epochs trained:  172Training neural network. Epochs trained:  173Training neural network. Epochs trained:  174Training neural network. Epochs trained:  175Training neural network. Epochs trained:  176Training neural network. Epochs trained:  177Training neural network. Epochs trained:  178Training neural network. Epochs trained:  179Training neural network. Epochs trained:  180Training neural network. Epochs trained:  181Training neural network. Epochs trained:  182Training neural network. Epochs trained:  183Training neural network. Epochs trained:  184Training neural network. Epochs trained:  185Training neural network. Epochs trained:  186Training neural network. Epochs trained:  187Training neural network. Epochs trained:  188Training neural network. Epochs trained:  189Training neural network. Epochs trained:  190Training neural network. Epochs trained:  191Training neural network. Epochs trained:  192Training neural network. Epochs trained:  193Training neural network. Epochs trained:  194Training neural network. Epochs trained:  195Training neural network. Epochs trained:  196Training neural network. Epochs trained:  197Training neural network. Epochs trained:  198Training neural network. Epochs trained:  199Training neural network. Epochs trained:  200Training neural network. Epochs trained:  201Training neural network. Epochs trained:  202Training neural network. Epochs trained:  203Training neural network. Epochs trained:  204Training neural network. Epochs trained:  205Training neural network. Epochs trained:  206Training neural network. Epochs trained:  207Training neural network. Epochs trained:  208Training neural network. Epochs trained:  209Training neural network. Epochs trained:  210Training neural network. Epochs trained:  211Training neural network. Epochs trained:  212Training neural network. Epochs trained:  213Training neural network. Epochs trained:  214Training neural network. Epochs trained:  215Training neural network. Epochs trained:  216Training neural network. Epochs trained:  217Training neural network. Epochs trained:  218Training neural network. Epochs trained:  219Training neural network. Epochs trained:  220Training neural network. Epochs trained:  221Training neural network. Epochs trained:  222Training neural network. Epochs trained:  223Training neural network. Epochs trained:  224Training neural network. Epochs trained:  225Training neural network. Epochs trained:  226Training neural network. Epochs trained:  227Training neural network. Epochs trained:  228Training neural network. Epochs trained:  229Training neural network. Epochs trained:  230Training neural network. Epochs trained:  231Training neural network. Epochs trained:  232Training neural network. Epochs trained:  233Training neural network. Epochs trained:  234Training neural network. Epochs trained:  235Training neural network. Epochs trained:  236Training neural network. Epochs trained:  237Training neural network. Epochs trained:  238Training neural network. Epochs trained:  239Training neural network. Epochs trained:  240Training neural network. Epochs trained:  241Training neural network. Epochs trained:  242Training neural network. Epochs trained:  243Training neural network. Epochs trained:  244Training neural network. Epochs trained:  245Training neural network. Epochs trained:  246Training neural network. Epochs trained:  247Training neural network. Epochs trained:  248Training neural network. Epochs trained:  249Training neural network. Epochs trained:  250Training neural network. Epochs trained:  251Training neural network. Epochs trained:  252Training neural network. Epochs trained:  253Training neural network. Epochs trained:  254Training neural network. Epochs trained:  255Training neural network. Epochs trained:  256Training neural network. Epochs trained:  257Training neural network. Epochs trained:  258Training neural network. Epochs trained:  259Training neural network. Epochs trained:  260Training neural network. Epochs trained:  261Training neural network. Epochs trained:  262Training neural network. Epochs trained:  263Training neural network. Epochs trained:  264Training neural network. Epochs trained:  265Training neural network. Epochs trained:  266Training neural network. Epochs trained:  267Training neural network. Epochs trained:  268Training neural network. Epochs trained:  269Training neural network. Epochs trained:  270Training neural network. Epochs trained:  271Training neural network. Epochs trained:  272Training neural network. Epochs trained:  273Training neural network. Epochs trained:  274Training neural network. Epochs trained:  275Training neural network. Epochs trained:  276Training neural network. Epochs trained:  277Training neural network. Epochs trained:  278Training neural network. Epochs trained:  279Training neural network. Epochs trained:  280Training neural network. Epochs trained:  281Training neural network. Epochs trained:  282Training neural network. Epochs trained:  283Training neural network. Epochs trained:  284Training neural network. Epochs trained:  285Training neural network. Epochs trained:  286Training neural network. Epochs trained:  287Training neural network. Epochs trained:  288Training neural network. Epochs trained:  289Training neural network. Epochs trained:  290Training neural network. Epochs trained:  291Training neural network. Epochs trained:  292Training neural network. Epochs trained:  293Training neural network. Epochs trained:  294Training neural network. Epochs trained:  295Training neural network. Epochs trained:  296Training neural network. Epochs trained:  297Training neural network. Epochs trained:  298Training neural network. Epochs trained:  299Training neural network. Epochs trained:  300Training neural network. Epochs trained:  301Training neural network. Epochs trained:  302Training neural network. Epochs trained:  303Training neural network. Epochs trained:  304Training neural network. Epochs trained:  305Training neural network. Epochs trained:  306Training neural network. Epochs trained:  307Training neural network. Epochs trained:  308Training neural network. Epochs trained:  309Training neural network. Epochs trained:  310Training neural network. Epochs trained:  311Training neural network. Epochs trained:  312Training neural network. Epochs trained:  313Training neural network. Epochs trained:  314Training neural network. Epochs trained:  315Training neural network. Epochs trained:  316Training neural network. Epochs trained:  317Training neural network. Epochs trained:  318Training neural network. Epochs trained:  319Training neural network. Epochs trained:  320Training neural network. Epochs trained:  321Training neural network. Epochs trained:  322Training neural network. Epochs trained:  323Training neural network. Epochs trained:  324Training neural network. Epochs trained:  325Training neural network. Epochs trained:  326Training neural network. Epochs trained:  327Training neural network. Epochs trained:  328Training neural network. Epochs trained:  329Neural network successfully converged after 329 epochs.
Training neural network. Epochs trained:  1Training neural network. Epochs trained:  2Training neural network. Epochs trained:  3Training neural network. Epochs trained:  4Training neural network. Epochs trained:  5Training neural network. Epochs trained:  6Training neural network. Epochs trained:  7Training neural network. Epochs trained:  8Training neural network. Epochs trained:  9Training neural network. Epochs trained:  10Training neural network. Epochs trained:  11Training neural network. Epochs trained:  12Training neural network. Epochs trained:  13Training neural network. Epochs trained:  14Training neural network. Epochs trained:  15Training neural network. Epochs trained:  16Training neural network. Epochs trained:  17Training neural network. Epochs trained:  18Training neural network. Epochs trained:  19Training neural network. Epochs trained:  20Training neural network. Epochs trained:  21Training neural network. Epochs trained:  22Training neural network. Epochs trained:  23Training neural network. Epochs trained:  24Training neural network. Epochs trained:  25Training neural network. Epochs trained:  26Training neural network. Epochs trained:  27Training neural network. Epochs trained:  28Training neural network. Epochs trained:  29Training neural network. Epochs trained:  30Training neural network. Epochs trained:  31Training neural network. Epochs trained:  32Training neural network. Epochs trained:  33Training neural network. Epochs trained:  34Training neural network. Epochs trained:  35Training neural network. Epochs trained:  36Training neural network. Epochs trained:  37Training neural network. Epochs trained:  38Training neural network. Epochs trained:  39Training neural network. Epochs trained:  40Training neural network. Epochs trained:  41Training neural network. Epochs trained:  42Training neural network. Epochs trained:  43Training neural network. Epochs trained:  44Training neural network. Epochs trained:  45Training neural network. Epochs trained:  46Training neural network. Epochs trained:  47Training neural network. Epochs trained:  48Training neural network. Epochs trained:  49Training neural network. Epochs trained:  50Training neural network. Epochs trained:  51Training neural network. Epochs trained:  52Training neural network. Epochs trained:  53Training neural network. Epochs trained:  54Training neural network. Epochs trained:  55Training neural network. Epochs trained:  56Training neural network. Epochs trained:  57Training neural network. Epochs trained:  58Training neural network. Epochs trained:  59Training neural network. Epochs trained:  60Training neural network. Epochs trained:  61Training neural network. Epochs trained:  62Training neural network. Epochs trained:  63Training neural network. Epochs trained:  64Training neural network. Epochs trained:  65Training neural network. Epochs trained:  66Training neural network. Epochs trained:  67Training neural network. Epochs trained:  68Training neural network. Epochs trained:  69Training neural network. Epochs trained:  70Training neural network. Epochs trained:  71Training neural network. Epochs trained:  72Training neural network. Epochs trained:  73Training neural network. Epochs trained:  74Training neural network. Epochs trained:  75Training neural network. Epochs trained:  76Training neural network. Epochs trained:  77Training neural network. Epochs trained:  78Training neural network. Epochs trained:  79Training neural network. Epochs trained:  80Training neural network. Epochs trained:  81Training neural network. Epochs trained:  82Training neural network. Epochs trained:  83Training neural network. Epochs trained:  84Training neural network. Epochs trained:  85Training neural network. Epochs trained:  86Training neural network. Epochs trained:  87Training neural network. Epochs trained:  88Training neural network. Epochs trained:  89Training neural network. Epochs trained:  90Training neural network. Epochs trained:  91Training neural network. Epochs trained:  92Training neural network. Epochs trained:  93Training neural network. Epochs trained:  94Training neural network. Epochs trained:  95Training neural network. Epochs trained:  96Training neural network. Epochs trained:  97Training neural network. Epochs trained:  98Training neural network. Epochs trained:  99Training neural network. Epochs trained:  100Training neural network. Epochs trained:  101Training neural network. Epochs trained:  102Training neural network. Epochs trained:  103Training neural network. Epochs trained:  104Training neural network. Epochs trained:  105Training neural network. Epochs trained:  106Training neural network. Epochs trained:  107Training neural network. Epochs trained:  108Training neural network. Epochs trained:  109Training neural network. Epochs trained:  110Training neural network. Epochs trained:  111Training neural network. Epochs trained:  112Training neural network. Epochs trained:  113Training neural network. Epochs trained:  114Training neural network. Epochs trained:  115Training neural network. Epochs trained:  116Training neural network. Epochs trained:  117Training neural network. Epochs trained:  118Training neural network. Epochs trained:  119Training neural network. Epochs trained:  120Training neural network. Epochs trained:  121Training neural network. Epochs trained:  122Training neural network. Epochs trained:  123Training neural network. Epochs trained:  124Training neural network. Epochs trained:  125Training neural network. Epochs trained:  126Training neural network. Epochs trained:  127Training neural network. Epochs trained:  128Training neural network. Epochs trained:  129Training neural network. Epochs trained:  130Training neural network. Epochs trained:  131Training neural network. Epochs trained:  132Training neural network. Epochs trained:  133Training neural network. Epochs trained:  134Training neural network. Epochs trained:  135Training neural network. Epochs trained:  136Training neural network. Epochs trained:  137Training neural network. Epochs trained:  138Training neural network. Epochs trained:  139Training neural network. Epochs trained:  140Training neural network. Epochs trained:  141Training neural network. Epochs trained:  142Training neural network. Epochs trained:  143Training neural network. Epochs trained:  144Training neural network. Epochs trained:  145Training neural network. Epochs trained:  146Training neural network. Epochs trained:  147Training neural network. Epochs trained:  148Training neural network. Epochs trained:  149Training neural network. Epochs trained:  150Training neural network. Epochs trained:  151Training neural network. Epochs trained:  152Training neural network. Epochs trained:  153Training neural network. Epochs trained:  154Training neural network. Epochs trained:  155Training neural network. Epochs trained:  156Training neural network. Epochs trained:  157Training neural network. Epochs trained:  158Training neural network. Epochs trained:  159Training neural network. Epochs trained:  160Training neural network. Epochs trained:  161Training neural network. Epochs trained:  162Training neural network. Epochs trained:  163Training neural network. Epochs trained:  164Training neural network. Epochs trained:  165Training neural network. Epochs trained:  166Training neural network. Epochs trained:  167Training neural network. Epochs trained:  168Training neural network. Epochs trained:  169Training neural network. Epochs trained:  170Training neural network. Epochs trained:  171Training neural network. Epochs trained:  172Training neural network. Epochs trained:  173Training neural network. Epochs trained:  174Training neural network. Epochs trained:  175Training neural network. Epochs trained:  176Training neural network. Epochs trained:  177Training neural network. Epochs trained:  178Training neural network. Epochs trained:  179Training neural network. Epochs trained:  180Training neural network. Epochs trained:  181Training neural network. Epochs trained:  182Training neural network. Epochs trained:  183Training neural network. Epochs trained:  184Training neural network. Epochs trained:  185Training neural network. Epochs trained:  186Training neural network. Epochs trained:  187Training neural network. Epochs trained:  188Training neural network. Epochs trained:  189Training neural network. Epochs trained:  190Training neural network. Epochs trained:  191Training neural network. Epochs trained:  192Neural network successfully converged after 192 epochs.
Training neural network. Epochs trained:  1Training neural network. Epochs trained:  2Training neural network. Epochs trained:  3Training neural network. Epochs trained:  4Training neural network. Epochs trained:  5Training neural network. Epochs trained:  6Training neural network. Epochs trained:  7Training neural network. Epochs trained:  8Training neural network. Epochs trained:  9Training neural network. Epochs trained:  10Training neural network. Epochs trained:  11Training neural network. Epochs trained:  12Training neural network. Epochs trained:  13Training neural network. Epochs trained:  14Training neural network. Epochs trained:  15Training neural network. Epochs trained:  16Training neural network. Epochs trained:  17Training neural network. Epochs trained:  18Training neural network. Epochs trained:  19Training neural network. Epochs trained:  20Training neural network. Epochs trained:  21Training neural network. Epochs trained:  22Training neural network. Epochs trained:  23Training neural network. Epochs trained:  24Training neural network. Epochs trained:  25Training neural network. Epochs trained:  26Training neural network. Epochs trained:  27Training neural network. Epochs trained:  28Training neural network. Epochs trained:  29Training neural network. Epochs trained:  30Training neural network. Epochs trained:  31Training neural network. Epochs trained:  32Training neural network. Epochs trained:  33Training neural network. Epochs trained:  34Training neural network. Epochs trained:  35Training neural network. Epochs trained:  36Training neural network. Epochs trained:  37Training neural network. Epochs trained:  38Training neural network. Epochs trained:  39Training neural network. Epochs trained:  40Training neural network. Epochs trained:  41Training neural network. Epochs trained:  42Training neural network. Epochs trained:  43Training neural network. Epochs trained:  44Training neural network. Epochs trained:  45Training neural network. Epochs trained:  46Training neural network. Epochs trained:  47Training neural network. Epochs trained:  48Training neural network. Epochs trained:  49Training neural network. Epochs trained:  50Training neural network. Epochs trained:  51Training neural network. Epochs trained:  52Training neural network. Epochs trained:  53Training neural network. Epochs trained:  54Training neural network. Epochs trained:  55Training neural network. Epochs trained:  56Training neural network. Epochs trained:  57Training neural network. Epochs trained:  58Training neural network. Epochs trained:  59Training neural network. Epochs trained:  60Training neural network. Epochs trained:  61Training neural network. Epochs trained:  62Training neural network. Epochs trained:  63Training neural network. Epochs trained:  64Training neural network. Epochs trained:  65Training neural network. Epochs trained:  66Training neural network. Epochs trained:  67Training neural network. Epochs trained:  68Training neural network. Epochs trained:  69Training neural network. Epochs trained:  70Training neural network. Epochs trained:  71Training neural network. Epochs trained:  72Training neural network. Epochs trained:  73Training neural network. Epochs trained:  74Training neural network. Epochs trained:  75Training neural network. Epochs trained:  76Training neural network. Epochs trained:  77Training neural network. Epochs trained:  78Training neural network. Epochs trained:  79Training neural network. Epochs trained:  80Training neural network. Epochs trained:  81Training neural network. Epochs trained:  82Training neural network. Epochs trained:  83Training neural network. Epochs trained:  84Training neural network. Epochs trained:  85Training neural network. Epochs trained:  86Training neural network. Epochs trained:  87Training neural network. Epochs trained:  88Training neural network. Epochs trained:  89Training neural network. Epochs trained:  90Training neural network. Epochs trained:  91Training neural network. Epochs trained:  92Training neural network. Epochs trained:  93Training neural network. Epochs trained:  94Training neural network. Epochs trained:  95Training neural network. Epochs trained:  96Training neural network. Epochs trained:  97Training neural network. Epochs trained:  98Training neural network. Epochs trained:  99Training neural network. Epochs trained:  100Training neural network. Epochs trained:  101Training neural network. Epochs trained:  102Training neural network. Epochs trained:  103Training neural network. Epochs trained:  104Training neural network. Epochs trained:  105Training neural network. Epochs trained:  106Training neural network. Epochs trained:  107Training neural network. Epochs trained:  108Training neural network. Epochs trained:  109Training neural network. Epochs trained:  110Training neural network. Epochs trained:  111Training neural network. Epochs trained:  112Training neural network. Epochs trained:  113Training neural network. Epochs trained:  114Training neural network. Epochs trained:  115Training neural network. Epochs trained:  116Training neural network. Epochs trained:  117Training neural network. Epochs trained:  118Training neural network. Epochs trained:  119Training neural network. Epochs trained:  120Training neural network. Epochs trained:  121Training neural network. Epochs trained:  122Training neural network. Epochs trained:  123Training neural network. Epochs trained:  124Training neural network. Epochs trained:  125Training neural network. Epochs trained:  126Training neural network. Epochs trained:  127Training neural network. Epochs trained:  128Training neural network. Epochs trained:  129Training neural network. Epochs trained:  130Training neural network. Epochs trained:  131Training neural network. Epochs trained:  132Training neural network. Epochs trained:  133Training neural network. Epochs trained:  134Training neural network. Epochs trained:  135Training neural network. Epochs trained:  136Training neural network. Epochs trained:  137Training neural network. Epochs trained:  138Training neural network. Epochs trained:  139Training neural network. Epochs trained:  140Training neural network. Epochs trained:  141Training neural network. Epochs trained:  142Training neural network. Epochs trained:  143Training neural network. Epochs trained:  144Training neural network. Epochs trained:  145Training neural network. Epochs trained:  146Training neural network. Epochs trained:  147Training neural network. Epochs trained:  148Training neural network. Epochs trained:  149Training neural network. Epochs trained:  150Training neural network. Epochs trained:  151Training neural network. Epochs trained:  152Training neural network. Epochs trained:  153Training neural network. Epochs trained:  154Training neural network. Epochs trained:  155Training neural network. Epochs trained:  156Training neural network. Epochs trained:  157Training neural network. Epochs trained:  158Training neural network. Epochs trained:  159Training neural network. Epochs trained:  160Training neural network. Epochs trained:  161Training neural network. Epochs trained:  162Training neural network. Epochs trained:  163Training neural network. Epochs trained:  164Training neural network. Epochs trained:  165Training neural network. Epochs trained:  166Training neural network. Epochs trained:  167Training neural network. Epochs trained:  168Training neural network. Epochs trained:  169Training neural network. Epochs trained:  170Training neural network. Epochs trained:  171Training neural network. Epochs trained:  172Training neural network. Epochs trained:  173Training neural network. Epochs trained:  174Training neural network. Epochs trained:  175Training neural network. Epochs trained:  176Training neural network. Epochs trained:  177Training neural network. Epochs trained:  178Training neural network. Epochs trained:  179Training neural network. Epochs trained:  180Training neural network. Epochs trained:  181Training neural network. Epochs trained:  182Training neural network. Epochs trained:  183Training neural network. Epochs trained:  184Training neural network. Epochs trained:  185Training neural network. Epochs trained:  186Training neural network. Epochs trained:  187Training neural network. Epochs trained:  188Training neural network. Epochs trained:  189Training neural network. Epochs trained:  190Training neural network. Epochs trained:  191Training neural network. Epochs trained:  192Training neural network. Epochs trained:  193Training neural network. Epochs trained:  194Training neural network. Epochs trained:  195Training neural network. Epochs trained:  196Training neural network. Epochs trained:  197Training neural network. Epochs trained:  198Training neural network. Epochs trained:  199Training neural network. Epochs trained:  200Training neural network. Epochs trained:  201Training neural network. Epochs trained:  202Training neural network. Epochs trained:  203Training neural network. Epochs trained:  204Training neural network. Epochs trained:  205Training neural network. Epochs trained:  206Training neural network. Epochs trained:  207Training neural network. Epochs trained:  208Training neural network. Epochs trained:  209Training neural network. Epochs trained:  210Training neural network. Epochs trained:  211Training neural network. Epochs trained:  212Training neural network. Epochs trained:  213Training neural network. Epochs trained:  214Training neural network. Epochs trained:  215Training neural network. Epochs trained:  216Training neural network. Epochs trained:  217Training neural network. Epochs trained:  218Training neural network. Epochs trained:  219Training neural network. Epochs trained:  220Neural network successfully converged after 220 epochs.
Training neural network. Epochs trained:  1Training neural network. Epochs trained:  2Training neural network. Epochs trained:  3Training neural network. Epochs trained:  4Training neural network. Epochs trained:  5Training neural network. Epochs trained:  6Training neural network. Epochs trained:  7Training neural network. Epochs trained:  8Training neural network. Epochs trained:  9Training neural network. Epochs trained:  10Training neural network. Epochs trained:  11Training neural network. Epochs trained:  12Training neural network. Epochs trained:  13Training neural network. Epochs trained:  14Training neural network. Epochs trained:  15Training neural network. Epochs trained:  16Training neural network. Epochs trained:  17Training neural network. Epochs trained:  18Training neural network. Epochs trained:  19Training neural network. Epochs trained:  20Training neural network. Epochs trained:  21Training neural network. Epochs trained:  22Training neural network. Epochs trained:  23Training neural network. Epochs trained:  24Training neural network. Epochs trained:  25Training neural network. Epochs trained:  26Training neural network. Epochs trained:  27Training neural network. Epochs trained:  28Training neural network. Epochs trained:  29Training neural network. Epochs trained:  30Training neural network. Epochs trained:  31Training neural network. Epochs trained:  32Training neural network. Epochs trained:  33Training neural network. Epochs trained:  34Training neural network. Epochs trained:  35Training neural network. Epochs trained:  36Training neural network. Epochs trained:  37Training neural network. Epochs trained:  38Training neural network. Epochs trained:  39Training neural network. Epochs trained:  40Training neural network. Epochs trained:  41Training neural network. Epochs trained:  42Training neural network. Epochs trained:  43Training neural network. Epochs trained:  44Training neural network. Epochs trained:  45Training neural network. Epochs trained:  46Training neural network. Epochs trained:  47Training neural network. Epochs trained:  48Training neural network. Epochs trained:  49Training neural network. Epochs trained:  50Training neural network. Epochs trained:  51Training neural network. Epochs trained:  52Training neural network. Epochs trained:  53Training neural network. Epochs trained:  54Training neural network. Epochs trained:  55Training neural network. Epochs trained:  56Training neural network. Epochs trained:  57Training neural network. Epochs trained:  58Training neural network. Epochs trained:  59Training neural network. Epochs trained:  60Training neural network. Epochs trained:  61Training neural network. Epochs trained:  62Training neural network. Epochs trained:  63Training neural network. Epochs trained:  64Training neural network. Epochs trained:  65Training neural network. Epochs trained:  66Training neural network. Epochs trained:  67Training neural network. Epochs trained:  68Training neural network. Epochs trained:  69Training neural network. Epochs trained:  70Training neural network. Epochs trained:  71Training neural network. Epochs trained:  72Training neural network. Epochs trained:  73Training neural network. Epochs trained:  74Training neural network. Epochs trained:  75Training neural network. Epochs trained:  76Training neural network. Epochs trained:  77Training neural network. Epochs trained:  78Training neural network. Epochs trained:  79Training neural network. Epochs trained:  80Training neural network. Epochs trained:  81Training neural network. Epochs trained:  82Training neural network. Epochs trained:  83Training neural network. Epochs trained:  84Training neural network. Epochs trained:  85Training neural network. Epochs trained:  86Training neural network. Epochs trained:  87Training neural network. Epochs trained:  88Training neural network. Epochs trained:  89Training neural network. Epochs trained:  90Training neural network. Epochs trained:  91Training neural network. Epochs trained:  92Training neural network. Epochs trained:  93Training neural network. Epochs trained:  94Training neural network. Epochs trained:  95Training neural network. Epochs trained:  96Training neural network. Epochs trained:  97Training neural network. Epochs trained:  98Training neural network. Epochs trained:  99Training neural network. Epochs trained:  100Training neural network. Epochs trained:  101Training neural network. Epochs trained:  102Training neural network. Epochs trained:  103Training neural network. Epochs trained:  104Training neural network. Epochs trained:  105Training neural network. Epochs trained:  106Training neural network. Epochs trained:  107Training neural network. Epochs trained:  108Training neural network. Epochs trained:  109Training neural network. Epochs trained:  110Training neural network. Epochs trained:  111Training neural network. Epochs trained:  112Training neural network. Epochs trained:  113Training neural network. Epochs trained:  114Training neural network. Epochs trained:  115Training neural network. Epochs trained:  116Training neural network. Epochs trained:  117Training neural network. Epochs trained:  118Training neural network. Epochs trained:  119Training neural network. Epochs trained:  120Training neural network. Epochs trained:  121Training neural network. Epochs trained:  122Training neural network. Epochs trained:  123Training neural network. Epochs trained:  124Training neural network. Epochs trained:  125Training neural network. Epochs trained:  126Training neural network. Epochs trained:  127Training neural network. Epochs trained:  128Training neural network. Epochs trained:  129Training neural network. Epochs trained:  130Training neural network. Epochs trained:  131Training neural network. Epochs trained:  132Training neural network. Epochs trained:  133Training neural network. Epochs trained:  134Training neural network. Epochs trained:  135Training neural network. Epochs trained:  136Training neural network. Epochs trained:  137Training neural network. Epochs trained:  138Training neural network. Epochs trained:  139Training neural network. Epochs trained:  140Training neural network. Epochs trained:  141Training neural network. Epochs trained:  142Training neural network. Epochs trained:  143Training neural network. Epochs trained:  144Training neural network. Epochs trained:  145Training neural network. Epochs trained:  146Training neural network. Epochs trained:  147Training neural network. Epochs trained:  148Training neural network. Epochs trained:  149Training neural network. Epochs trained:  150Training neural network. Epochs trained:  151Training neural network. Epochs trained:  152Training neural network. Epochs trained:  153Training neural network. Epochs trained:  154Training neural network. Epochs trained:  155Training neural network. Epochs trained:  156Training neural network. Epochs trained:  157Training neural network. Epochs trained:  158Training neural network. Epochs trained:  159Training neural network. Epochs trained:  160Training neural network. Epochs trained:  161Training neural network. Epochs trained:  162Training neural network. Epochs trained:  163Training neural network. Epochs trained:  164Training neural network. Epochs trained:  165Training neural network. Epochs trained:  166Training neural network. Epochs trained:  167Training neural network. Epochs trained:  168Training neural network. Epochs trained:  169Training neural network. Epochs trained:  170Training neural network. Epochs trained:  171Training neural network. Epochs trained:  172Training neural network. Epochs trained:  173Training neural network. Epochs trained:  174Training neural network. Epochs trained:  175Training neural network. Epochs trained:  176Training neural network. Epochs trained:  177Training neural network. Epochs trained:  178Training neural network. Epochs trained:  179Training neural network. Epochs trained:  180Training neural network. Epochs trained:  181Training neural network. Epochs trained:  182Training neural network. Epochs trained:  183Training neural network. Epochs trained:  184Training neural network. Epochs trained:  185Training neural network. Epochs trained:  186Training neural network. Epochs trained:  187Training neural network. Epochs trained:  188Training neural network. Epochs trained:  189Training neural network. Epochs trained:  190Training neural network. Epochs trained:  191Neural network successfully converged after 191 epochs.
Training neural network. Epochs trained:  1Training neural network. Epochs trained:  2Training neural network. Epochs trained:  3Training neural network. Epochs trained:  4Training neural network. Epochs trained:  5Training neural network. Epochs trained:  6Training neural network. Epochs trained:  7Training neural network. Epochs trained:  8Training neural network. Epochs trained:  9Training neural network. Epochs trained:  10Training neural network. Epochs trained:  11Training neural network. Epochs trained:  12Training neural network. Epochs trained:  13Training neural network. Epochs trained:  14Training neural network. Epochs trained:  15Training neural network. Epochs trained:  16Training neural network. Epochs trained:  17Training neural network. Epochs trained:  18Training neural network. Epochs trained:  19Training neural network. Epochs trained:  20Training neural network. Epochs trained:  21Training neural network. Epochs trained:  22Training neural network. Epochs trained:  23Training neural network. Epochs trained:  24Training neural network. Epochs trained:  25Training neural network. Epochs trained:  26Training neural network. Epochs trained:  27Training neural network. Epochs trained:  28Training neural network. Epochs trained:  29Training neural network. Epochs trained:  30Training neural network. Epochs trained:  31Training neural network. Epochs trained:  32Training neural network. Epochs trained:  33Training neural network. Epochs trained:  34Training neural network. Epochs trained:  35Training neural network. Epochs trained:  36Training neural network. Epochs trained:  37Training neural network. Epochs trained:  38Training neural network. Epochs trained:  39Training neural network. Epochs trained:  40Training neural network. Epochs trained:  41Training neural network. Epochs trained:  42Training neural network. Epochs trained:  43Training neural network. Epochs trained:  44Training neural network. Epochs trained:  45Training neural network. Epochs trained:  46Training neural network. Epochs trained:  47Training neural network. Epochs trained:  48Training neural network. Epochs trained:  49Training neural network. Epochs trained:  50Training neural network. Epochs trained:  51Training neural network. Epochs trained:  52Training neural network. Epochs trained:  53Training neural network. Epochs trained:  54Training neural network. Epochs trained:  55Training neural network. Epochs trained:  56Training neural network. Epochs trained:  57Training neural network. Epochs trained:  58Training neural network. Epochs trained:  59Training neural network. Epochs trained:  60Training neural network. Epochs trained:  61Training neural network. Epochs trained:  62Training neural network. Epochs trained:  63Training neural network. Epochs trained:  64Training neural network. Epochs trained:  65Training neural network. Epochs trained:  66Training neural network. Epochs trained:  67Training neural network. Epochs trained:  68Training neural network. Epochs trained:  69Training neural network. Epochs trained:  70Training neural network. Epochs trained:  71Training neural network. Epochs trained:  72Training neural network. Epochs trained:  73Training neural network. Epochs trained:  74Training neural network. Epochs trained:  75Training neural network. Epochs trained:  76Training neural network. Epochs trained:  77Training neural network. Epochs trained:  78Training neural network. Epochs trained:  79Training neural network. Epochs trained:  80Training neural network. Epochs trained:  81Training neural network. Epochs trained:  82Training neural network. Epochs trained:  83Training neural network. Epochs trained:  84Training neural network. Epochs trained:  85Training neural network. Epochs trained:  86Training neural network. Epochs trained:  87Training neural network. Epochs trained:  88Training neural network. Epochs trained:  89Training neural network. Epochs trained:  90Training neural network. Epochs trained:  91Training neural network. Epochs trained:  92Training neural network. Epochs trained:  93Training neural network. Epochs trained:  94Training neural network. Epochs trained:  95Training neural network. Epochs trained:  96Training neural network. Epochs trained:  97Training neural network. Epochs trained:  98Training neural network. Epochs trained:  99Training neural network. Epochs trained:  100Training neural network. Epochs trained:  101Training neural network. Epochs trained:  102Training neural network. Epochs trained:  103Training neural network. Epochs trained:  104Training neural network. Epochs trained:  105Training neural network. Epochs trained:  106Training neural network. Epochs trained:  107Training neural network. Epochs trained:  108Training neural network. Epochs trained:  109Training neural network. Epochs trained:  110Training neural network. Epochs trained:  111Training neural network. Epochs trained:  112Training neural network. Epochs trained:  113Training neural network. Epochs trained:  114Training neural network. Epochs trained:  115Training neural network. Epochs trained:  116Training neural network. Epochs trained:  117Training neural network. Epochs trained:  118Training neural network. Epochs trained:  119Training neural network. Epochs trained:  120Training neural network. Epochs trained:  121Training neural network. Epochs trained:  122Training neural network. Epochs trained:  123Training neural network. Epochs trained:  124Training neural network. Epochs trained:  125Training neural network. Epochs trained:  126Training neural network. Epochs trained:  127Training neural network. Epochs trained:  128Training neural network. Epochs trained:  129Training neural network. Epochs trained:  130Training neural network. Epochs trained:  131Training neural network. Epochs trained:  132Training neural network. Epochs trained:  133Training neural network. Epochs trained:  134Training neural network. Epochs trained:  135Training neural network. Epochs trained:  136Training neural network. Epochs trained:  137Training neural network. Epochs trained:  138Training neural network. Epochs trained:  139Training neural network. Epochs trained:  140Training neural network. Epochs trained:  141Training neural network. Epochs trained:  142Training neural network. Epochs trained:  143Training neural network. Epochs trained:  144Training neural network. Epochs trained:  145Training neural network. Epochs trained:  146Training neural network. Epochs trained:  147Training neural network. Epochs trained:  148Training neural network. Epochs trained:  149Training neural network. Epochs trained:  150Training neural network. Epochs trained:  151Training neural network. Epochs trained:  152Training neural network. Epochs trained:  153Training neural network. Epochs trained:  154Training neural network. Epochs trained:  155Training neural network. Epochs trained:  156Training neural network. Epochs trained:  157Training neural network. Epochs trained:  158Training neural network. Epochs trained:  159Training neural network. Epochs trained:  160Training neural network. Epochs trained:  161Training neural network. Epochs trained:  162Training neural network. Epochs trained:  163Training neural network. Epochs trained:  164Training neural network. Epochs trained:  165Training neural network. Epochs trained:  166Training neural network. Epochs trained:  167Training neural network. Epochs trained:  168Training neural network. Epochs trained:  169Training neural network. Epochs trained:  170Training neural network. Epochs trained:  171Training neural network. Epochs trained:  172Training neural network. Epochs trained:  173Training neural network. Epochs trained:  174Training neural network. Epochs trained:  175Training neural network. Epochs trained:  176Neural network successfully converged after 176 epochs.
Training neural network. Epochs trained:  1Training neural network. Epochs trained:  2Training neural network. Epochs trained:  3Training neural network. Epochs trained:  4Training neural network. Epochs trained:  5Training neural network. Epochs trained:  6Training neural network. Epochs trained:  7Training neural network. Epochs trained:  8Training neural network. Epochs trained:  9Training neural network. Epochs trained:  10Training neural network. Epochs trained:  11Training neural network. Epochs trained:  12Training neural network. Epochs trained:  13Training neural network. Epochs trained:  14Training neural network. Epochs trained:  15Training neural network. Epochs trained:  16Training neural network. Epochs trained:  17Training neural network. Epochs trained:  18Training neural network. Epochs trained:  19Training neural network. Epochs trained:  20Training neural network. Epochs trained:  21Training neural network. Epochs trained:  22Training neural network. Epochs trained:  23Training neural network. Epochs trained:  24Training neural network. Epochs trained:  25Training neural network. Epochs trained:  26Training neural network. Epochs trained:  27Training neural network. Epochs trained:  28Training neural network. Epochs trained:  29Training neural network. Epochs trained:  30Training neural network. Epochs trained:  31Training neural network. Epochs trained:  32Training neural network. Epochs trained:  33Training neural network. Epochs trained:  34Training neural network. Epochs trained:  35Training neural network. Epochs trained:  36Training neural network. Epochs trained:  37Training neural network. Epochs trained:  38Training neural network. Epochs trained:  39Training neural network. Epochs trained:  40Training neural network. Epochs trained:  41Training neural network. Epochs trained:  42Training neural network. Epochs trained:  43Training neural network. Epochs trained:  44Training neural network. Epochs trained:  45Training neural network. Epochs trained:  46Training neural network. Epochs trained:  47Training neural network. Epochs trained:  48Training neural network. Epochs trained:  49Training neural network. Epochs trained:  50Training neural network. Epochs trained:  51Training neural network. Epochs trained:  52Training neural network. Epochs trained:  53Training neural network. Epochs trained:  54Training neural network. Epochs trained:  55Training neural network. Epochs trained:  56Training neural network. Epochs trained:  57Training neural network. Epochs trained:  58Training neural network. Epochs trained:  59Training neural network. Epochs trained:  60Training neural network. Epochs trained:  61Training neural network. Epochs trained:  62Training neural network. Epochs trained:  63Training neural network. Epochs trained:  64Training neural network. Epochs trained:  65Training neural network. Epochs trained:  66Training neural network. Epochs trained:  67Training neural network. Epochs trained:  68Training neural network. Epochs trained:  69Training neural network. Epochs trained:  70Training neural network. Epochs trained:  71Training neural network. Epochs trained:  72Training neural network. Epochs trained:  73Training neural network. Epochs trained:  74Training neural network. Epochs trained:  75Training neural network. Epochs trained:  76Training neural network. Epochs trained:  77Training neural network. Epochs trained:  78Training neural network. Epochs trained:  79Training neural network. Epochs trained:  80Training neural network. Epochs trained:  81Training neural network. Epochs trained:  82Training neural network. Epochs trained:  83Training neural network. Epochs trained:  84Training neural network. Epochs trained:  85Training neural network. Epochs trained:  86Training neural network. Epochs trained:  87Training neural network. Epochs trained:  88Training neural network. Epochs trained:  89Training neural network. Epochs trained:  90Training neural network. Epochs trained:  91Training neural network. Epochs trained:  92Training neural network. Epochs trained:  93Training neural network. Epochs trained:  94Training neural network. Epochs trained:  95Training neural network. Epochs trained:  96Training neural network. Epochs trained:  97Training neural network. Epochs trained:  98Training neural network. Epochs trained:  99Training neural network. Epochs trained:  100Training neural network. Epochs trained:  101Training neural network. Epochs trained:  102Training neural network. Epochs trained:  103Training neural network. Epochs trained:  104Training neural network. Epochs trained:  105Training neural network. Epochs trained:  106Training neural network. Epochs trained:  107Training neural network. Epochs trained:  108Training neural network. Epochs trained:  109Training neural network. Epochs trained:  110Training neural network. Epochs trained:  111Training neural network. Epochs trained:  112Training neural network. Epochs trained:  113Training neural network. Epochs trained:  114Training neural network. Epochs trained:  115Training neural network. Epochs trained:  116Training neural network. Epochs trained:  117Training neural network. Epochs trained:  118Training neural network. Epochs trained:  119Training neural network. Epochs trained:  120Training neural network. Epochs trained:  121Training neural network. Epochs trained:  122Training neural network. Epochs trained:  123Training neural network. Epochs trained:  124Training neural network. Epochs trained:  125Training neural network. Epochs trained:  126Training neural network. Epochs trained:  127Training neural network. Epochs trained:  128Training neural network. Epochs trained:  129Training neural network. Epochs trained:  130Training neural network. Epochs trained:  131Training neural network. Epochs trained:  132Training neural network. Epochs trained:  133Training neural network. Epochs trained:  134Training neural network. Epochs trained:  135Training neural network. Epochs trained:  136Training neural network. Epochs trained:  137Training neural network. Epochs trained:  138Training neural network. Epochs trained:  139Training neural network. Epochs trained:  140Training neural network. Epochs trained:  141Training neural network. Epochs trained:  142Training neural network. Epochs trained:  143Training neural network. Epochs trained:  144Training neural network. Epochs trained:  145Training neural network. Epochs trained:  146Training neural network. Epochs trained:  147Training neural network. Epochs trained:  148Training neural network. Epochs trained:  149Training neural network. Epochs trained:  150Training neural network. Epochs trained:  151Training neural network. Epochs trained:  152Training neural network. Epochs trained:  153Training neural network. Epochs trained:  154Training neural network. Epochs trained:  155Training neural network. Epochs trained:  156Training neural network. Epochs trained:  157Training neural network. Epochs trained:  158Training neural network. Epochs trained:  159Training neural network. Epochs trained:  160Training neural network. Epochs trained:  161Training neural network. Epochs trained:  162Training neural network. Epochs trained:  163Training neural network. Epochs trained:  164Training neural network. Epochs trained:  165Training neural network. Epochs trained:  166Training neural network. Epochs trained:  167Training neural network. Epochs trained:  168Training neural network. Epochs trained:  169Training neural network. Epochs trained:  170Neural network successfully converged after 170 epochs.
Training neural network. Epochs trained:  1Training neural network. Epochs trained:  2Training neural network. Epochs trained:  3Training neural network. Epochs trained:  4Training neural network. Epochs trained:  5Training neural network. Epochs trained:  6Training neural network. Epochs trained:  7Training neural network. Epochs trained:  8Training neural network. Epochs trained:  9Training neural network. Epochs trained:  10Training neural network. Epochs trained:  11Training neural network. Epochs trained:  12Training neural network. Epochs trained:  13Training neural network. Epochs trained:  14Training neural network. Epochs trained:  15Training neural network. Epochs trained:  16Training neural network. Epochs trained:  17Training neural network. Epochs trained:  18Training neural network. Epochs trained:  19Training neural network. Epochs trained:  20Training neural network. Epochs trained:  21Training neural network. Epochs trained:  22Training neural network. Epochs trained:  23Training neural network. Epochs trained:  24Training neural network. Epochs trained:  25Training neural network. Epochs trained:  26Training neural network. Epochs trained:  27Training neural network. Epochs trained:  28Training neural network. Epochs trained:  29Training neural network. Epochs trained:  30Training neural network. Epochs trained:  31Training neural network. Epochs trained:  32Training neural network. Epochs trained:  33Training neural network. Epochs trained:  34Training neural network. Epochs trained:  35Training neural network. Epochs trained:  36Training neural network. Epochs trained:  37Training neural network. Epochs trained:  38Training neural network. Epochs trained:  39Training neural network. Epochs trained:  40Training neural network. Epochs trained:  41Training neural network. Epochs trained:  42Training neural network. Epochs trained:  43Training neural network. Epochs trained:  44Training neural network. Epochs trained:  45Training neural network. Epochs trained:  46Training neural network. Epochs trained:  47Training neural network. Epochs trained:  48Training neural network. Epochs trained:  49Training neural network. Epochs trained:  50Training neural network. Epochs trained:  51Training neural network. Epochs trained:  52Training neural network. Epochs trained:  53Training neural network. Epochs trained:  54Training neural network. Epochs trained:  55Training neural network. Epochs trained:  56Training neural network. Epochs trained:  57Training neural network. Epochs trained:  58Training neural network. Epochs trained:  59Training neural network. Epochs trained:  60Training neural network. Epochs trained:  61Training neural network. Epochs trained:  62Training neural network. Epochs trained:  63Training neural network. Epochs trained:  64Training neural network. Epochs trained:  65Training neural network. Epochs trained:  66Training neural network. Epochs trained:  67Training neural network. Epochs trained:  68Training neural network. Epochs trained:  69Training neural network. Epochs trained:  70Training neural network. Epochs trained:  71Training neural network. Epochs trained:  72Training neural network. Epochs trained:  73Training neural network. Epochs trained:  74Training neural network. Epochs trained:  75Training neural network. Epochs trained:  76Training neural network. Epochs trained:  77Training neural network. Epochs trained:  78Training neural network. Epochs trained:  79Training neural network. Epochs trained:  80Training neural network. Epochs trained:  81Training neural network. Epochs trained:  82Training neural network. Epochs trained:  83Training neural network. Epochs trained:  84Training neural network. Epochs trained:  85Training neural network. Epochs trained:  86Training neural network. Epochs trained:  87Training neural network. Epochs trained:  88Training neural network. Epochs trained:  89Training neural network. Epochs trained:  90Training neural network. Epochs trained:  91Training neural network. Epochs trained:  92Training neural network. Epochs trained:  93Training neural network. Epochs trained:  94Training neural network. Epochs trained:  95Training neural network. Epochs trained:  96Training neural network. Epochs trained:  97Training neural network. Epochs trained:  98Training neural network. Epochs trained:  99Training neural network. Epochs trained:  100Training neural network. Epochs trained:  101Training neural network. Epochs trained:  102Training neural network. Epochs trained:  103Training neural network. Epochs trained:  104Training neural network. Epochs trained:  105Training neural network. Epochs trained:  106Training neural network. Epochs trained:  107Training neural network. Epochs trained:  108Training neural network. Epochs trained:  109Training neural network. Epochs trained:  110Training neural network. Epochs trained:  111Training neural network. Epochs trained:  112Training neural network. Epochs trained:  113Training neural network. Epochs trained:  114Training neural network. Epochs trained:  115Training neural network. Epochs trained:  116Training neural network. Epochs trained:  117Training neural network. Epochs trained:  118Training neural network. Epochs trained:  119Training neural network. Epochs trained:  120Training neural network. Epochs trained:  121Training neural network. Epochs trained:  122Training neural network. Epochs trained:  123Training neural network. Epochs trained:  124Training neural network. Epochs trained:  125Training neural network. Epochs trained:  126Training neural network. Epochs trained:  127Training neural network. Epochs trained:  128Training neural network. Epochs trained:  129Training neural network. Epochs trained:  130Training neural network. Epochs trained:  131Training neural network. Epochs trained:  132Training neural network. Epochs trained:  133Training neural network. Epochs trained:  134Training neural network. Epochs trained:  135Training neural network. Epochs trained:  136Training neural network. Epochs trained:  137Training neural network. Epochs trained:  138Training neural network. Epochs trained:  139Training neural network. Epochs trained:  140Training neural network. Epochs trained:  141Training neural network. Epochs trained:  142Training neural network. Epochs trained:  143Training neural network. Epochs trained:  144Training neural network. Epochs trained:  145Training neural network. Epochs trained:  146Training neural network. Epochs trained:  147Training neural network. Epochs trained:  148Training neural network. Epochs trained:  149Training neural network. Epochs trained:  150Training neural network. Epochs trained:  151Training neural network. Epochs trained:  152Training neural network. Epochs trained:  153Training neural network. Epochs trained:  154Training neural network. Epochs trained:  155Training neural network. Epochs trained:  156Training neural network. Epochs trained:  157Training neural network. Epochs trained:  158Training neural network. Epochs trained:  159Training neural network. Epochs trained:  160Training neural network. Epochs trained:  161Training neural network. Epochs trained:  162Training neural network. Epochs trained:  163Training neural network. Epochs trained:  164Training neural network. Epochs trained:  165Training neural network. Epochs trained:  166Training neural network. Epochs trained:  167Training neural network. Epochs trained:  168Training neural network. Epochs trained:  169Training neural network. Epochs trained:  170Training neural network. Epochs trained:  171Training neural network. Epochs trained:  172Training neural network. Epochs trained:  173Training neural network. Epochs trained:  174Training neural network. Epochs trained:  175Training neural network. Epochs trained:  176Training neural network. Epochs trained:  177Training neural network. Epochs trained:  178Training neural network. Epochs trained:  179Training neural network. Epochs trained:  180Training neural network. Epochs trained:  181Training neural network. Epochs trained:  182Training neural network. Epochs trained:  183Training neural network. Epochs trained:  184Training neural network. Epochs trained:  185Training neural network. Epochs trained:  186Training neural network. Epochs trained:  187Training neural network. Epochs trained:  188Training neural network. Epochs trained:  189Training neural network. Epochs trained:  190Training neural network. Epochs trained:  191Training neural network. Epochs trained:  192Training neural network. Epochs trained:  193Training neural network. Epochs trained:  194Training neural network. Epochs trained:  195Training neural network. Epochs trained:  196Training neural network. Epochs trained:  197Training neural network. Epochs trained:  198Training neural network. Epochs trained:  199Training neural network. Epochs trained:  200Training neural network. Epochs trained:  201Training neural network. Epochs trained:  202Training neural network. Epochs trained:  203Training neural network. Epochs trained:  204Training neural network. Epochs trained:  205Training neural network. Epochs trained:  206Training neural network. Epochs trained:  207Training neural network. Epochs trained:  208Training neural network. Epochs trained:  209Training neural network. Epochs trained:  210Training neural network. Epochs trained:  211Training neural network. Epochs trained:  212Training neural network. Epochs trained:  213Training neural network. Epochs trained:  214Training neural network. Epochs trained:  215Training neural network. Epochs trained:  216Training neural network. Epochs trained:  217Training neural network. Epochs trained:  218Training neural network. Epochs trained:  219Training neural network. Epochs trained:  220Training neural network. Epochs trained:  221Training neural network. Epochs trained:  222Training neural network. Epochs trained:  223Training neural network. Epochs trained:  224Training neural network. Epochs trained:  225Training neural network. Epochs trained:  226Neural network successfully converged after 226 epochs.
log prob true 3.1582243
log prob true 3.5232744
log prob true 2.6374946
log prob true 2.3000638
log prob true 3.6050916
log prob true 2.7248714
log prob true 2.320148
log prob true 3.492151
log prob true 3.3554034
log prob true 4.2859807
log prob true 4.399563
log prob true 3.3834476
log prob true 2.4197428
log prob true 2.9653761
log prob true 1.7430182
log prob true 2.8879976
log prob true 3.557401
log prob true 3.5914347
log prob true 1.2018151
log prob true 3.2734833
log prob true 0.66735435
log prob true 1.2090403
log prob true 2.6202707
log prob true 3.7442353
log prob true 3.915618
log prob true 3.0241678
log prob true 4.1743364
log prob true 4.0890555
log prob true 3.0989573
log prob true 1.6996328
log prob true 3.2314432
log prob true 3.6847956
log prob true 2.7415807
log prob true 2.3187125
log prob true 3.2812278
log prob true 2.667337
log prob true 2.21322
log prob true 3.726416
log prob true 3.1471171
log prob true 4.375224
log prob true 4.5194087
log prob true 3.527628
log prob true 2.5268614
log prob true 3.0343711
log prob true 1.8823498
log prob true 3.0170045
log prob true 3.3987572
log prob true 3.755343
log prob true 1.4281322
log prob true 3.3322327
log prob true 0.03164186
log prob true 2.1327221
log prob true 2.690567
log prob true 3.6762571
log prob true 3.7860324
log prob true 2.8979466
log prob true 4.2175775
log prob true 4.10999
log prob true 3.3507066
log prob true 1.6923382
log prob true 3.417065
log prob true 3.824121
log prob true 2.6455042
log prob true 2.9361484
log prob true 3.2513359
log prob true 2.9755135
log prob true 2.498641
log prob true 3.7156355
log prob true 3.2884812
log prob true 4.1755776
log prob true 4.369937
log prob true 3.7083976
log prob true 2.3920393
log prob true 3.2423885
log prob true 2.280793
log prob true 3.3220263
log prob true 3.5159192
log prob true 3.9028432
log prob true 1.4679178
log prob true 3.5289946
log prob true -0.33684456
log prob true 1.6532083
log prob true 2.7099748
log prob true 3.3553233
log prob true 3.9677248
log prob true 3.2692962
log prob true 3.9000704
log prob true 3.8684046
log prob true 2.9668272
log prob true 1.9510008
log prob true 3.854151
log prob true 4.1754313
log prob true 3.734623
log prob true 4.322743
log prob true 4.095793
log prob true 4.2031293
log prob true 3.9662063
log prob true 4.6646476
log prob true 4.5645485
log prob true 4.6915464
log prob true 4.394306
log prob true 4.522543
log prob true 4.3432302
log prob true 3.9666383
log prob true 3.9222288
log prob true 4.7697096
log prob true 4.8814754
log prob true 4.038998
log prob true 3.7078757
log prob true 4.3027124
log prob true 1.5313883
log prob true 2.3518038
log prob true 4.6225934
log prob true 4.029075
log prob true 3.8867762
log prob true 4.2355065
log prob true 4.0092273
log prob true 4.457476
log prob true 4.5611005
log prob true 3.8156955
log prob true 3.000213
log prob true 3.5601766
log prob true 2.4614382
log prob true 2.2707887
log prob true 2.793317
log prob true 2.0287616
log prob true 2.2610383
log prob true 3.6779292
log prob true 2.8690598
log prob true 4.0473747
log prob true 4.120561
log prob true 3.2808995
log prob true 2.2232387
log prob true 2.9035537
log prob true 1.6037052
log prob true 2.5629442
log prob true 3.3029556
log prob true 3.7456255
log prob true 1.0891801
log prob true 3.1472085
log prob true 0.4211511
log prob true 0.45650798
log prob true 2.383679
log prob true 3.4560883
log prob true 3.7388365
log prob true 2.8941627
log prob true 4.309327
log prob true 4.0084295
log prob true 2.2588937
log prob true 1.5098616
log prob true 3.231304
log prob true 3.326081
log prob true 2.5301266
log prob true 2.5848098
log prob true 2.813907
log prob true 3.0346992
log prob true 2.372767
log prob true 3.6137197
log prob true 3.0215042
log prob true 4.1356792
log prob true 4.3555875
log prob true 3.6456566
log prob true 2.5402
log prob true 3.1738265
log prob true 1.6776538
log prob true 3.0769367
log prob true 3.2984066
log prob true 3.5557775
log prob true 1.2368249
log prob true 3.3523912
log prob true 0.46533972
log prob true 2.0916395
log prob true 2.6958847
log prob true 3.1410117
log prob true 3.7182703
log prob true 3.1150131
log prob true 3.7045515
log prob true 3.9494753
log prob true 2.98345
log prob true 1.7240268
log prob true 3.5830941
log prob true 3.871641
log prob true 3.1117806
log prob true 4.432944
log prob true 3.5494921
log prob true 4.000376
log prob true 3.707854
log prob true 4.622935
log prob true 4.1129894
log prob true 4.7003436
log prob true 4.5602846
log prob true 4.3324037
log prob true 3.6983426
log prob true 4.2888703
log prob true 3.9408185
log prob true 4.1801805
log prob true 4.78044
log prob true 4.115324
log prob true 3.700656
log prob true 4.2575903
log prob true 1.1820452
log prob true 2.48926
log prob true 4.1484447
log prob true 3.0271246
log prob true 3.0474381
log prob true 4.0289774
log prob true 4.037545
log prob true 4.3722577
log prob true 4.452482
log prob true 3.9298334
log prob true 3.1557455
log prob true 3.572572
log prob true 2.9164183
log prob true 2.6550202
log prob true 2.9645205
log prob true 1.6435677
log prob true 2.411084
log prob true 3.504894
log prob true 3.0428123
log prob true 3.8497224
log prob true 3.6306715
log prob true 3.5073338
log prob true 2.6230285
log prob true 3.1551588
log prob true 2.1094027
log prob true 2.3550684
log prob true 3.4017594
log prob true 3.439866
log prob true 1.1941667
log prob true 3.3286655
log prob true 0.21336338
log prob true 0.11354575
log prob true 2.8746006
log prob true 3.113778
log prob true 3.7011232
log prob true 2.9819784
log prob true 3.448181
log prob true 3.7178125
log prob true 2.5447392
log prob true 1.9549395
log prob true 4.176082
log prob true 3.97387
log prob true 3.574789
log prob true 4.2665277
log prob true 3.8466856
log prob true 4.1696324
log prob true 3.9386585
log prob true 4.71225
log prob true 3.6754808
log prob true 4.8032355
log prob true 4.5118136
log prob true 4.4455976
log prob true 3.9367661
log prob true 4.257476
log prob true 3.9483378
log prob true 4.390085
log prob true 4.776934
log prob true 4.1781616
log prob true 3.6782432
log prob true 4.3926206
log prob true 1.9252799
log prob true 2.376897
log prob true 4.208804
log prob true 3.8931105
log prob true 3.228209
log prob true 4.19379
log prob true 4.0882926
log prob true 4.339716
log prob true 4.4344544
log prob true 3.5289612
log prob true 4.1812444
log prob true 4.436322
log prob true 3.5907714
log prob true 4.2567964
log prob true 3.7877214
log prob true 4.3983035
log prob true 3.9364796
log prob true 4.536883
log prob true 4.2876964
log prob true 4.824587
log prob true 4.4816804
log prob true 4.2911115
log prob true 4.160657
log prob true 4.1561427
log prob true 3.8125112
log prob true 4.5864673
log prob true 5.045645
log prob true 3.544135
log prob true 3.6504378
log prob true 4.333787
log prob true 0.9387187
log prob true 1.9513606
log prob true 4.531058
log prob true 3.5577857
log prob true 3.620626
log prob true 4.2155414
log prob true 4.1240644
log prob true 4.421567
log prob true 4.666013
log prob true 4.079582
script complete
